{"ast":null,"code":"var _jsxFileName = \"/Users/mac/Desktop/path_find 2/src/PathfindingVisualizer/pathfindingVisualizer.jsx\";\nimport React, { Component } from 'react';\nimport Node from './Node/Node';\nimport { useState } from 'react';\nimport classNames from 'classnames';\nimport { dijkstra } from '../algorithms/dijkstra';\nimport { AStar } from '../algorithms/aStar';\nimport { dfs } from '../algorithms/dfs';\nimport { bfs } from '../algorithms/bfs';\nimport { bellmanFord } from '../algorithms/bellmanford'; // Import Bellman-Ford algorithm\nimport vancouver from '../assets/images/vancouver.png';\nimport locations from '../location.json';\nimport './pathfindingVisualizer.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class PathfindingVisualizer extends Component {\n  constructor() {\n    super();\n    this.getInitialGrid = (rowCount = this.state.ROW_COUNT, colCount = this.state.COLUMN_COUNT) => {\n      const initialGrid = [];\n      for (let row = 0; row < rowCount; row++) {\n        const currentRow = [];\n        for (let col = 0; col < colCount; col++) {\n          currentRow.push(this.createNode(row, col));\n        }\n        initialGrid.push(currentRow);\n      }\n\n      // Define walls here\n      const walls = [{\n        row: 0,\n        col: 0\n      }, {\n        row: 0,\n        col: 1\n      }, {\n        row: 0,\n        col: 2\n      }, {\n        row: 0,\n        col: 3\n      }, {\n        row: 0,\n        col: 4\n      },\n      //{row: 0, col: 5},\n      {\n        row: 0,\n        col: 6\n      }, {\n        row: 0,\n        col: 7\n      }, {\n        row: 0,\n        col: 8\n      }, {\n        row: 0,\n        col: 9\n      }, {\n        row: 0,\n        col: 10\n      }, {\n        row: 0,\n        col: 29\n      }, {\n        row: 0,\n        col: 30\n      }, {\n        row: 0,\n        col: 31\n      }, {\n        row: 0,\n        col: 32\n      }, {\n        row: 0,\n        col: 33\n      }, {\n        row: 0,\n        col: 34\n      }, {\n        row: 0,\n        col: 35\n      }, {\n        row: 0,\n        col: 36\n      }, {\n        row: 0,\n        col: 37\n      }, {\n        row: 0,\n        col: 38\n      }, {\n        row: 0,\n        col: 39\n      }, {\n        row: 0,\n        col: 40\n      }, {\n        row: 0,\n        col: 41\n      }, {\n        row: 0,\n        col: 42\n      }, {\n        row: 0,\n        col: 43\n      }, {\n        row: 0,\n        col: 44\n      }, {\n        row: 0,\n        col: 45\n      }, {\n        row: 0,\n        col: 46\n      }, {\n        row: 0,\n        col: 47\n      }, {\n        row: 0,\n        col: 48\n      }, {\n        row: 0,\n        col: 49\n      }, {\n        row: 0,\n        col: 50\n      }, {\n        row: 0,\n        col: 51\n      }, {\n        row: 0,\n        col: 52\n      }, {\n        row: 0,\n        col: 53\n      }, {\n        row: 0,\n        col: 54\n      }, {\n        row: 0,\n        col: 55\n      }, {\n        row: 0,\n        col: 56\n      }, {\n        row: 0,\n        col: 57\n      }, {\n        row: 0,\n        col: 58\n      }, {\n        row: 0,\n        col: 59\n      }, {\n        row: 0,\n        col: 60\n      }, {\n        row: 1,\n        col: 0\n      }, {\n        row: 1,\n        col: 1\n      }, {\n        row: 1,\n        col: 2\n      }, {\n        row: 1,\n        col: 3\n      }, {\n        row: 1,\n        col: 4\n      },\n      //{row: 1, col: 5},\n      {\n        row: 1,\n        col: 6\n      }, {\n        row: 1,\n        col: 7\n      }, {\n        row: 1,\n        col: 8\n      }, {\n        row: 1,\n        col: 9\n      }, {\n        row: 1,\n        col: 10\n      }, {\n        row: 1,\n        col: 58\n      }, {\n        row: 1,\n        col: 59\n      }, {\n        row: 1,\n        col: 60\n      }, {\n        row: 2,\n        col: 0\n      }, {\n        row: 2,\n        col: 1\n      }, {\n        row: 2,\n        col: 2\n      }, {\n        row: 2,\n        col: 3\n      }, {\n        row: 2,\n        col: 4\n      },\n      //{row: 2, col: 5},\n      {\n        row: 2,\n        col: 6\n      }, {\n        row: 2,\n        col: 7\n      }, {\n        row: 2,\n        col: 8\n      }, {\n        row: 2,\n        col: 9\n      }, {\n        row: 2,\n        col: 10\n      }, {\n        row: 2,\n        col: 13\n      }, {\n        row: 2,\n        col: 14\n      }, {\n        row: 2,\n        col: 15\n      }, {\n        row: 2,\n        col: 17\n      }, {\n        row: 2,\n        col: 18\n      }, {\n        row: 2,\n        col: 19\n      }, {\n        row: 2,\n        col: 20\n      }, {\n        row: 2,\n        col: 22\n      }, {\n        row: 2,\n        col: 23\n      }, {\n        row: 2,\n        col: 24\n      }, {\n        row: 2,\n        col: 25\n      }, {\n        row: 2,\n        col: 27\n      }, {\n        row: 2,\n        col: 58\n      }, {\n        row: 2,\n        col: 59\n      }, {\n        row: 2,\n        col: 60\n      }, {\n        row: 3,\n        col: 0\n      }, {\n        row: 3,\n        col: 1\n      }, {\n        row: 3,\n        col: 2\n      }, {\n        row: 3,\n        col: 3\n      }, {\n        row: 3,\n        col: 4\n      },\n      //{row: 3, col: 5},\n      {\n        row: 3,\n        col: 6\n      }, {\n        row: 3,\n        col: 7\n      }, {\n        row: 3,\n        col: 8\n      }, {\n        row: 3,\n        col: 9\n      }, {\n        row: 3,\n        col: 10\n      }, {\n        row: 3,\n        col: 32\n      }, {\n        row: 3,\n        col: 33\n      }, {\n        row: 3,\n        col: 34\n      }, {\n        row: 3,\n        col: 35\n      }, {\n        row: 3,\n        col: 38\n      }, {\n        row: 3,\n        col: 40\n      }, {\n        row: 3,\n        col: 42\n      }, {\n        row: 3,\n        col: 43\n      }, {\n        row: 3,\n        col: 58\n      }, {\n        row: 3,\n        col: 59\n      }, {\n        row: 3,\n        col: 60\n      }, {\n        row: 4,\n        col: 0\n      }, {\n        row: 4,\n        col: 1\n      }, {\n        row: 4,\n        col: 2\n      }, {\n        row: 4,\n        col: 3\n      }, {\n        row: 4,\n        col: 4\n      },\n      //{row: 4, col: 5},\n      {\n        row: 4,\n        col: 6\n      }, {\n        row: 4,\n        col: 7\n      }, {\n        row: 4,\n        col: 8\n      }, {\n        row: 4,\n        col: 9\n      }, {\n        row: 4,\n        col: 10\n      }, {\n        row: 4,\n        col: 12\n      }, {\n        row: 4,\n        col: 13\n      }, {\n        row: 4,\n        col: 17\n      }, {\n        row: 4,\n        col: 18\n      }, {\n        row: 4,\n        col: 19\n      }, {\n        row: 4,\n        col: 20\n      }, {\n        row: 4,\n        col: 22\n      }, {\n        row: 4,\n        col: 23\n      }, {\n        row: 4,\n        col: 24\n      }, {\n        row: 4,\n        col: 25\n      }, {\n        row: 4,\n        col: 27\n      }, {\n        row: 4,\n        col: 28\n      }, {\n        row: 4,\n        col: 29\n      }, {\n        row: 4,\n        col: 30\n      }, {\n        row: 4,\n        col: 34\n      }, {\n        row: 4,\n        col: 35\n      }, {\n        row: 4,\n        col: 36\n      }, {\n        row: 4,\n        col: 10\n      }, {\n        row: 4,\n        col: 30\n      },\n      //{row: 254 col: 31},\n      {\n        row: 4,\n        col: 32\n      }, {\n        row: 4,\n        col: 32\n      },\n      // {row: 5, col: 33},\n      {\n        row: 4,\n        col: 38\n      }, {\n        row: 4,\n        col: 39\n      }, {\n        row: 4,\n        col: 40\n      },\n      // {row: 5, col: 38},\n      {\n        row: 4,\n        col: 56\n      }, {\n        row: 4,\n        col: 57\n      }, {\n        row: 4,\n        col: 54\n      }, {\n        row: 4,\n        col: 53\n      }, {\n        row: 4,\n        col: 52\n      }, {\n        row: 4,\n        col: 50\n      }, {\n        row: 4,\n        col: 49\n      }, {\n        row: 4,\n        col: 46\n      }, {\n        row: 4,\n        col: 47\n      }, {\n        row: 4,\n        col: 44\n      }, {\n        row: 4,\n        col: 43\n      }, {\n        row: 4,\n        col: 58\n      }, {\n        row: 4,\n        col: 59\n      }, {\n        row: 4,\n        col: 60\n      }, {\n        row: 5,\n        col: 0\n      }, {\n        row: 5,\n        col: 1\n      }, {\n        row: 5,\n        col: 2\n      }, {\n        row: 5,\n        col: 3\n      }, {\n        row: 5,\n        col: 4\n      },\n      //{row: 5, col: 5},\n      {\n        row: 5,\n        col: 6\n      }, {\n        row: 5,\n        col: 7\n      }, {\n        row: 5,\n        col: 8\n      }, {\n        row: 5,\n        col: 9\n      }, {\n        row: 5,\n        col: 10\n      }, {\n        row: 5,\n        col: 12\n      }, {\n        row: 5,\n        col: 13\n      }, {\n        row: 5,\n        col: 14\n      }, {\n        row: 5,\n        col: 15\n      }, {\n        row: 5,\n        col: 17\n      }, {\n        row: 5,\n        col: 18\n      }, {\n        row: 5,\n        col: 19\n      }, {\n        row: 5,\n        col: 20\n      }, {\n        row: 5,\n        col: 22\n      }, {\n        row: 5,\n        col: 23\n      }, {\n        row: 5,\n        col: 24\n      }, {\n        row: 5,\n        col: 25\n      }, {\n        row: 5,\n        col: 27\n      }, {\n        row: 5,\n        col: 28\n      }, {\n        row: 5,\n        col: 29\n      }, {\n        row: 5,\n        col: 30\n      },\n      //{row: 254 col: 31},\n      {\n        row: 5,\n        col: 32\n      }, {\n        row: 5,\n        col: 32\n      },\n      // {row: 5, col: 33},\n      {\n        row: 5,\n        col: 38\n      }, {\n        row: 5,\n        col: 39\n      }, {\n        row: 5,\n        col: 40\n      },\n      // {row: 5, col: 38},\n      {\n        row: 5,\n        col: 56\n      }, {\n        row: 5,\n        col: 57\n      }, {\n        row: 5,\n        col: 54\n      }, {\n        row: 5,\n        col: 53\n      }, {\n        row: 5,\n        col: 52\n      }, {\n        row: 5,\n        col: 50\n      }, {\n        row: 5,\n        col: 49\n      }, {\n        row: 5,\n        col: 46\n      }, {\n        row: 5,\n        col: 47\n      }, {\n        row: 5,\n        col: 44\n      }, {\n        row: 5,\n        col: 43\n      }, {\n        row: 5,\n        col: 58\n      }, {\n        row: 5,\n        col: 59\n      }, {\n        row: 5,\n        col: 60\n      }, {\n        row: 6,\n        col: 0\n      }, {\n        row: 6,\n        col: 1\n      }, {\n        row: 6,\n        col: 2\n      },\n      //{row: 6, col: 3},\n      //{row: 6, col: 4},\n      //{row: 6, col: 5},\n      {\n        row: 6,\n        col: 6\n      }, {\n        row: 6,\n        col: 7\n      }, {\n        row: 6,\n        col: 8\n      }, {\n        row: 6,\n        col: 9\n      }, {\n        row: 6,\n        col: 10\n      }, {\n        row: 6,\n        col: 12\n      }, {\n        row: 6,\n        col: 13\n      }, {\n        row: 6,\n        col: 14\n      }, {\n        row: 6,\n        col: 15\n      }, {\n        row: 6,\n        col: 17\n      }, {\n        row: 6,\n        col: 18\n      }, {\n        row: 6,\n        col: 19\n      }, {\n        row: 6,\n        col: 20\n      }, {\n        row: 6,\n        col: 22\n      }, {\n        row: 6,\n        col: 23\n      }, {\n        row: 6,\n        col: 24\n      }, {\n        row: 6,\n        col: 25\n      }, {\n        row: 6,\n        col: 24\n      }, {\n        row: 6,\n        col: 25\n      }, {\n        row: 6,\n        col: 27\n      }, {\n        row: 6,\n        col: 28\n      }, {\n        row: 6,\n        col: 29\n      }, {\n        row: 6,\n        col: 30\n      },\n      //{row: 254 col: 31},\n      {\n        row: 6,\n        col: 32\n      }, {\n        row: 6,\n        col: 33\n      }, {\n        row: 6,\n        col: 38\n      }, {\n        row: 6,\n        col: 39\n      }, {\n        row: 6,\n        col: 40\n      }, {\n        row: 6,\n        col: 38\n      }, {\n        row: 6,\n        col: 56\n      }, {\n        row: 6,\n        col: 57\n      }, {\n        row: 6,\n        col: 54\n      }, {\n        row: 6,\n        col: 53\n      }, {\n        row: 6,\n        col: 52\n      }, {\n        row: 6,\n        col: 50\n      }, {\n        row: 6,\n        col: 49\n      }, {\n        row: 6,\n        col: 46\n      }, {\n        row: 6,\n        col: 47\n      }, {\n        row: 6,\n        col: 44\n      }, {\n        row: 6,\n        col: 43\n      }, {\n        row: 6,\n        col: 58\n      }, {\n        row: 6,\n        col: 59\n      }, {\n        row: 6,\n        col: 60\n      }, {\n        row: 7,\n        col: 0\n      }, {\n        row: 7,\n        col: 1\n      }, {\n        row: 7,\n        col: 4\n      }, {\n        row: 7,\n        col: 58\n      }, {\n        row: 7,\n        col: 59\n      }, {\n        row: 7,\n        col: 60\n      },\n      //{row: 8, col: 0},\n      //{row: 8, col: 1},\n      //{row: 8, col: 2},\n      {\n        row: 8,\n        col: 3\n      }, {\n        row: 8,\n        col: 4\n      },\n      //{row: 8, col: 5},\n      {\n        row: 8,\n        col: 6\n      }, {\n        row: 8,\n        col: 7\n      }, {\n        row: 8,\n        col: 8\n      }, {\n        row: 8,\n        col: 9\n      }, {\n        row: 8,\n        col: 10\n      }, {\n        row: 8,\n        col: 12\n      }, {\n        row: 8,\n        col: 13\n      }, {\n        row: 8,\n        col: 14\n      }, {\n        row: 8,\n        col: 15\n      }, {\n        row: 8,\n        col: 17\n      }, {\n        row: 8,\n        col: 18\n      }, {\n        row: 8,\n        col: 19\n      }, {\n        row: 8,\n        col: 20\n      }, {\n        row: 8,\n        col: 22\n      }, {\n        row: 8,\n        col: 23\n      }, {\n        row: 8,\n        col: 24\n      }, {\n        row: 8,\n        col: 25\n      }, {\n        row: 8,\n        col: 21\n      }, {\n        row: 8,\n        col: 22\n      }, {\n        row: 8,\n        col: 23\n      }, {\n        row: 8,\n        col: 24\n      }, {\n        row: 8,\n        col: 25\n      }, {\n        row: 8,\n        col: 27\n      }, {\n        row: 8,\n        col: 28\n      }, {\n        row: 8,\n        col: 29\n      }, {\n        row: 8,\n        col: 30\n      },\n      //{row: 254 col: 31},\n      {\n        row: 8,\n        col: 32\n      }, {\n        row: 8,\n        col: 33\n      }, {\n        row: 8,\n        col: 34\n      }, {\n        row: 8,\n        col: 35\n      }, {\n        row: 8,\n        col: 36\n      },\n      // {row: 8, col: 38},\n      {\n        row: 8,\n        col: 56\n      }, {\n        row: 8,\n        col: 57\n      }, {\n        row: 8,\n        col: 54\n      }, {\n        row: 8,\n        col: 53\n      }, {\n        row: 8,\n        col: 52\n      }, {\n        row: 8,\n        col: 50\n      }, {\n        row: 8,\n        col: 49\n      }, {\n        row: 8,\n        col: 46\n      }, {\n        row: 8,\n        col: 47\n      }, {\n        row: 8,\n        col: 44\n      }, {\n        row: 8,\n        col: 43\n      }, {\n        row: 8,\n        col: 58\n      }, {\n        row: 8,\n        col: 59\n      }, {\n        row: 8,\n        col: 60\n      },\n      //{row: 9, col: 0},\n      //{row: 9, col: 1},\n      {\n        row: 9,\n        col: 2\n      }, {\n        row: 9,\n        col: 3\n      }, {\n        row: 9,\n        col: 4\n      },\n      //{row: 9, col: 5},\n      {\n        row: 9,\n        col: 6\n      }, {\n        row: 9,\n        col: 7\n      }, {\n        row: 9,\n        col: 8\n      }, {\n        row: 9,\n        col: 9\n      }, {\n        row: 9,\n        col: 10\n      }, {\n        row: 9,\n        col: 12\n      }, {\n        row: 9,\n        col: 13\n      }, {\n        row: 9,\n        col: 14\n      }, {\n        row: 9,\n        col: 17\n      }, {\n        row: 9,\n        col: 18\n      }, {\n        row: 9,\n        col: 19\n      }, {\n        row: 9,\n        col: 20\n      }, {\n        row: 9,\n        col: 22\n      }, {\n        row: 9,\n        col: 23\n      }, {\n        row: 9,\n        col: 24\n      }, {\n        row: 9,\n        col: 25\n      }, {\n        row: 9,\n        col: 22\n      }, {\n        row: 9,\n        col: 23\n      }, {\n        row: 9,\n        col: 24\n      }, {\n        row: 9,\n        col: 25\n      }, {\n        row: 9,\n        col: 21\n      }, {\n        row: 9,\n        col: 22\n      }, {\n        row: 9,\n        col: 23\n      }, {\n        row: 9,\n        col: 24\n      }, {\n        row: 9,\n        col: 25\n      }, {\n        row: 9,\n        col: 27\n      }, {\n        row: 9,\n        col: 28\n      }, {\n        row: 9,\n        col: 29\n      }, {\n        row: 9,\n        col: 30\n      },\n      //{row: 254 col: 31},\n      {\n        row: 9,\n        col: 32\n      }, {\n        row: 9,\n        col: 33\n      }, {\n        row: 9,\n        col: 34\n      }, {\n        row: 9,\n        col: 35\n      }, {\n        row: 9,\n        col: 36\n      }, {\n        row: 9,\n        col: 38\n      }, {\n        row: 9,\n        col: 56\n      }, {\n        row: 9,\n        col: 57\n      }, {\n        row: 9,\n        col: 54\n      }, {\n        row: 9,\n        col: 53\n      }, {\n        row: 9,\n        col: 52\n      }, {\n        row: 9,\n        col: 50\n      }, {\n        row: 9,\n        col: 49\n      }, {\n        row: 9,\n        col: 46\n      }, {\n        row: 9,\n        col: 47\n      }, {\n        row: 9,\n        col: 44\n      }, {\n        row: 9,\n        col: 43\n      }, {\n        row: 9,\n        col: 58\n      }, {\n        row: 9,\n        col: 59\n      }, {\n        row: 9,\n        col: 60\n      }, {\n        row: 10,\n        col: 0\n      },\n      //{row: 10, col: 1},\n      {\n        row: 10,\n        col: 2\n      }, {\n        row: 10,\n        col: 3\n      }, {\n        row: 10,\n        col: 4\n      },\n      //{row: 10, col: 5},\n      {\n        row: 10,\n        col: 6\n      }, {\n        row: 10,\n        col: 7\n      }, {\n        row: 10,\n        col: 8\n      }, {\n        row: 10,\n        col: 9\n      }, {\n        row: 10,\n        col: 10\n      }, {\n        row: 10,\n        col: 12\n      }, {\n        row: 10,\n        col: 13\n      }, {\n        row: 10,\n        col: 14\n      }, {\n        row: 10,\n        col: 17\n      }, {\n        row: 10,\n        col: 18\n      }, {\n        row: 10,\n        col: 19\n      }, {\n        row: 10,\n        col: 16\n      },\n      //{row: 10, col: 21},\n      {\n        row: 10,\n        col: 22\n      }, {\n        row: 10,\n        col: 23\n      }, {\n        row: 10,\n        col: 24\n      }, {\n        row: 10,\n        col: 25\n      }, {\n        row: 10,\n        col: 21\n      }, {\n        row: 10,\n        col: 22\n      }, {\n        row: 10,\n        col: 23\n      }, {\n        row: 10,\n        col: 24\n      }, {\n        row: 10,\n        col: 25\n      }, {\n        row: 10,\n        col: 21\n      }, {\n        row: 10,\n        col: 22\n      }, {\n        row: 10,\n        col: 23\n      }, {\n        row: 10,\n        col: 24\n      }, {\n        row: 10,\n        col: 25\n      }, {\n        row: 10,\n        col: 21\n      }, {\n        row: 10,\n        col: 22\n      }, {\n        row: 10,\n        col: 23\n      }, {\n        row: 10,\n        col: 24\n      }, {\n        row: 10,\n        col: 25\n      }, {\n        row: 10,\n        col: 21\n      }, {\n        row: 10,\n        col: 22\n      }, {\n        row: 10,\n        col: 23\n      }, {\n        row: 10,\n        col: 24\n      }, {\n        row: 10,\n        col: 25\n      }, {\n        row: 10,\n        col: 27\n      }, {\n        row: 10,\n        col: 28\n      }, {\n        row: 10,\n        col: 29\n      }, {\n        row: 10,\n        col: 30\n      },\n      //{row: 254 col: 31},\n      {\n        row: 10,\n        col: 32\n      }, {\n        row: 10,\n        col: 33\n      }, {\n        row: 10,\n        col: 34\n      }, {\n        row: 10,\n        col: 35\n      }, {\n        row: 10,\n        col: 36\n      }, {\n        row: 10,\n        col: 38\n      }, {\n        row: 10,\n        col: 39\n      }, {\n        row: 10,\n        col: 40\n      }, {\n        row: 10,\n        col: 56\n      }, {\n        row: 10,\n        col: 57\n      }, {\n        row: 10,\n        col: 53\n      }, {\n        row: 10,\n        col: 52\n      }, {\n        row: 10,\n        col: 58\n      }, {\n        row: 10,\n        col: 59\n      }, {\n        row: 10,\n        col: 60\n      }, {\n        row: 11,\n        col: 21\n      }, {\n        row: 11,\n        col: 22\n      }, {\n        row: 11,\n        col: 23\n      }, {\n        row: 11,\n        col: 24\n      }, {\n        row: 11,\n        col: 25\n      }, {\n        row: 11,\n        col: 21\n      }, {\n        row: 11,\n        col: 22\n      }, {\n        row: 11,\n        col: 23\n      }, {\n        row: 11,\n        col: 24\n      }, {\n        row: 11,\n        col: 25\n      }, {\n        row: 11,\n        col: 21\n      }, {\n        row: 11,\n        col: 22\n      }, {\n        row: 11,\n        col: 23\n      }, {\n        row: 11,\n        col: 24\n      }, {\n        row: 11,\n        col: 25\n      }, {\n        row: 11,\n        col: 21\n      }, {\n        row: 11,\n        col: 22\n      }, {\n        row: 11,\n        col: 23\n      }, {\n        row: 11,\n        col: 24\n      }, {\n        row: 11,\n        col: 25\n      }, {\n        row: 11,\n        col: 27\n      }, {\n        row: 11,\n        col: 28\n      }, {\n        row: 11,\n        col: 29\n      }, {\n        row: 11,\n        col: 30\n      },\n      //{row: 254 col: 31},\n      {\n        row: 11,\n        col: 32\n      }, {\n        row: 11,\n        col: 33\n      }, {\n        row: 11,\n        col: 34\n      }, {\n        row: 11,\n        col: 35\n      }, {\n        row: 11,\n        col: 36\n      }, {\n        row: 11,\n        col: 38\n      }, {\n        row: 11,\n        col: 39\n      }, {\n        row: 11,\n        col: 40\n      }, {\n        row: 11,\n        col: 42\n      }, {\n        row: 11,\n        col: 55\n      }, {\n        row: 11,\n        col: 56\n      }, {\n        row: 11,\n        col: 49\n      }, {\n        row: 11,\n        col: 48\n      }, {\n        row: 11,\n        col: 46\n      }, {\n        row: 11,\n        col: 58\n      }, {\n        row: 11,\n        col: 59\n      }, {\n        row: 11,\n        col: 60\n      }, {\n        row: 12,\n        col: 0\n      },\n      //{row: 12, col: 1},\n      {\n        row: 12,\n        col: 2\n      }, {\n        row: 12,\n        col: 3\n      },\n      //{row: 12, col: 4},\n      {\n        row: 12,\n        col: 5\n      }, {\n        row: 12,\n        col: 6\n      }, {\n        row: 12,\n        col: 7\n      }, {\n        row: 12,\n        col: 8\n      }, {\n        row: 12,\n        col: 9\n      },\n      //{row: 12, col: 10},\n      {\n        row: 12,\n        col: 13\n      }, {\n        row: 12,\n        col: 14\n      }, {\n        row: 12,\n        col: 12\n      }, {\n        row: 12,\n        col: 18\n      }, {\n        row: 12,\n        col: 17\n      }, {\n        row: 12,\n        col: 16\n      }, {\n        row: 12,\n        col: 21\n      }, {\n        row: 12,\n        col: 22\n      }, {\n        row: 12,\n        col: 23\n      }, {\n        row: 12,\n        col: 24\n      }, {\n        row: 12,\n        col: 25\n      }, {\n        row: 12,\n        col: 21\n      }, {\n        row: 12,\n        col: 22\n      }, {\n        row: 12,\n        col: 23\n      }, {\n        row: 12,\n        col: 24\n      }, {\n        row: 12,\n        col: 25\n      }, {\n        row: 12,\n        col: 21\n      }, {\n        row: 12,\n        col: 22\n      }, {\n        row: 12,\n        col: 23\n      }, {\n        row: 12,\n        col: 24\n      }, {\n        row: 12,\n        col: 25\n      }, {\n        row: 12,\n        col: 27\n      }, {\n        row: 12,\n        col: 28\n      }, {\n        row: 12,\n        col: 29\n      }, {\n        row: 12,\n        col: 30\n      },\n      //{row: 254 col: 31},\n      {\n        row: 12,\n        col: 32\n      }, {\n        row: 12,\n        col: 33\n      }, {\n        row: 12,\n        col: 34\n      }, {\n        row: 12,\n        col: 35\n      }, {\n        row: 12,\n        col: 36\n      }, {\n        row: 12,\n        col: 38\n      }, {\n        row: 12,\n        col: 39\n      }, {\n        row: 12,\n        col: 40\n      }, {\n        row: 12,\n        col: 42\n      }, {\n        row: 12,\n        col: 43\n      }, {\n        row: 12,\n        col: 44\n      }, {\n        row: 12,\n        col: 57\n      }, {\n        row: 12,\n        col: 52\n      }, {\n        row: 12,\n        col: 51\n      }, {\n        row: 12,\n        col: 48\n      }, {\n        row: 12,\n        col: 58\n      }, {\n        row: 12,\n        col: 59\n      }, {\n        row: 12,\n        col: 60\n      }, {\n        row: 13,\n        col: 0\n      },\n      //{row: 13, col: 1},\n      {\n        row: 13,\n        col: 2\n      }, {\n        row: 13,\n        col: 3\n      },\n      //{row: 13, col: 4},\n      {\n        row: 13,\n        col: 5\n      }, {\n        row: 13,\n        col: 6\n      }, {\n        row: 13,\n        col: 7\n      }, {\n        row: 13,\n        col: 8\n      }, {\n        row: 13,\n        col: 9\n      },\n      //{row: 13, col: 10},\n      {\n        row: 13,\n        col: 13\n      }, {\n        row: 13,\n        col: 14\n      }, {\n        row: 13,\n        col: 12\n      }, {\n        row: 13,\n        col: 17\n      }, {\n        row: 13,\n        col: 16\n      }, {\n        row: 13,\n        col: 18\n      }, {\n        row: 13,\n        col: 19\n      }, {\n        row: 13,\n        col: 21\n      }, {\n        row: 13,\n        col: 22\n      }, {\n        row: 13,\n        col: 23\n      }, {\n        row: 13,\n        col: 24\n      }, {\n        row: 13,\n        col: 25\n      }, {\n        row: 13,\n        col: 27\n      }, {\n        row: 13,\n        col: 28\n      }, {\n        row: 13,\n        col: 29\n      }, {\n        row: 13,\n        col: 30\n      },\n      //{row: 254 col: 31},\n      {\n        row: 13,\n        col: 32\n      }, {\n        row: 13,\n        col: 33\n      }, {\n        row: 13,\n        col: 34\n      }, {\n        row: 13,\n        col: 35\n      }, {\n        row: 13,\n        col: 36\n      }, {\n        row: 13,\n        col: 38\n      }, {\n        row: 13,\n        col: 39\n      }, {\n        row: 13,\n        col: 40\n      }, {\n        row: 13,\n        col: 42\n      }, {\n        row: 13,\n        col: 43\n      }, {\n        row: 13,\n        col: 44\n      }, {\n        row: 13,\n        col: 45\n      }, {\n        row: 13,\n        col: 46\n      }, {\n        row: 13,\n        col: 57\n      },\n      //{row: 13, col: 53},\n      {\n        row: 13,\n        col: 54\n      }, {\n        row: 13,\n        col: 50\n      }, {\n        row: 13,\n        col: 51\n      }, {\n        row: 13,\n        col: 58\n      }, {\n        row: 13,\n        col: 59\n      }, {\n        row: 13,\n        col: 60\n      }, {\n        row: 14,\n        col: 0\n      },\n      //{row: 14, col: 1},\n      {\n        row: 14,\n        col: 2\n      }, {\n        row: 14,\n        col: 3\n      },\n      //{row: 14, col: 4},\n      {\n        row: 14,\n        col: 5\n      }, {\n        row: 14,\n        col: 6\n      }, {\n        row: 14,\n        col: 7\n      }, {\n        row: 14,\n        col: 8\n      }, {\n        row: 14,\n        col: 9\n      },\n      //{row: 14, col: 10},\n      {\n        row: 14,\n        col: 13\n      }, {\n        row: 14,\n        col: 14\n      }, {\n        row: 14,\n        col: 12\n      }, {\n        row: 14,\n        col: 18\n      }, {\n        row: 14,\n        col: 17\n      }, {\n        row: 14,\n        col: 16\n      }, {\n        row: 14,\n        col: 19\n      }, {\n        row: 14,\n        col: 21\n      }, {\n        row: 14,\n        col: 22\n      }, {\n        row: 14,\n        col: 23\n      }, {\n        row: 14,\n        col: 24\n      }, {\n        row: 14,\n        col: 25\n      }, {\n        row: 14,\n        col: 27\n      }, {\n        row: 14,\n        col: 28\n      }, {\n        row: 14,\n        col: 29\n      }, {\n        row: 14,\n        col: 30\n      },\n      //{row: 254 col: 31},\n      {\n        row: 14,\n        col: 32\n      }, {\n        row: 14,\n        col: 33\n      }, {\n        row: 14,\n        col: 34\n      }, {\n        row: 14,\n        col: 35\n      }, {\n        row: 14,\n        col: 36\n      }, {\n        row: 14,\n        col: 38\n      }, {\n        row: 14,\n        col: 39\n      }, {\n        row: 14,\n        col: 40\n      }, {\n        row: 14,\n        col: 42\n      }, {\n        row: 14,\n        col: 43\n      }, {\n        row: 14,\n        col: 44\n      }, {\n        row: 14,\n        col: 45\n      }, {\n        row: 14,\n        col: 46\n      }, {\n        row: 14,\n        col: 47\n      }, {\n        row: 14,\n        col: 48\n      }, {\n        row: 14,\n        col: 56\n      }, {\n        row: 14,\n        col: 57\n      }, {\n        row: 14,\n        col: 58\n      }, {\n        row: 14,\n        col: 59\n      }, {\n        row: 14,\n        col: 60\n      }, {\n        row: 15,\n        col: 21\n      }, {\n        row: 15,\n        col: 22\n      }, {\n        row: 15,\n        col: 23\n      }, {\n        row: 15,\n        col: 24\n      }, {\n        row: 15,\n        col: 25\n      }, {\n        row: 15,\n        col: 27\n      }, {\n        row: 15,\n        col: 28\n      }, {\n        row: 15,\n        col: 29\n      }, {\n        row: 15,\n        col: 30\n      },\n      //{row: 254 col: 31},\n      {\n        row: 15,\n        col: 32\n      }, {\n        row: 15,\n        col: 33\n      }, {\n        row: 15,\n        col: 34\n      }, {\n        row: 15,\n        col: 35\n      }, {\n        row: 15,\n        col: 36\n      }, {\n        row: 15,\n        col: 38\n      }, {\n        row: 15,\n        col: 39\n      }, {\n        row: 15,\n        col: 40\n      }, {\n        row: 15,\n        col: 42\n      }, {\n        row: 15,\n        col: 43\n      }, {\n        row: 15,\n        col: 44\n      }, {\n        row: 15,\n        col: 45\n      }, {\n        row: 15,\n        col: 46\n      }, {\n        row: 15,\n        col: 47\n      }, {\n        row: 15,\n        col: 48\n      }, {\n        row: 15,\n        col: 49\n      }, {\n        row: 15,\n        col: 50\n      }, {\n        row: 15,\n        col: 55\n      }, {\n        row: 15,\n        col: 56\n      }, {\n        row: 15,\n        col: 57\n      }, {\n        row: 15,\n        col: 52\n      }, {\n        row: 15,\n        col: 58\n      }, {\n        row: 15,\n        col: 59\n      }, {\n        row: 15,\n        col: 60\n      }, {\n        row: 16,\n        col: 0\n      }, {\n        row: 16,\n        col: 1\n      }, {\n        row: 16,\n        col: 2\n      }, {\n        row: 16,\n        col: 3\n      },\n      //{row: 16, col: 4},\n      {\n        row: 16,\n        col: 5\n      }, {\n        row: 16,\n        col: 6\n      }, {\n        row: 16,\n        col: 7\n      }, {\n        row: 16,\n        col: 8\n      }, {\n        row: 16,\n        col: 9\n      },\n      //{row: 16, col: 10},\n      {\n        row: 16,\n        col: 13\n      }, {\n        row: 16,\n        col: 14\n      }, {\n        row: 16,\n        col: 12\n      }, {\n        row: 16,\n        col: 17\n      }, {\n        row: 16,\n        col: 18\n      }, {\n        row: 16,\n        col: 19\n      }, {\n        row: 16,\n        col: 16\n      }, {\n        row: 16,\n        col: 58\n      }, {\n        row: 16,\n        col: 59\n      }, {\n        row: 16,\n        col: 60\n      }, {\n        row: 17,\n        col: 0\n      }, {\n        row: 17,\n        col: 1\n      }, {\n        row: 17,\n        col: 2\n      }, {\n        row: 17,\n        col: 3\n      },\n      //{row: 17, col: 4},\n      {\n        row: 17,\n        col: 5\n      }, {\n        row: 17,\n        col: 6\n      }, {\n        row: 17,\n        col: 7\n      }, {\n        row: 17,\n        col: 8\n      }, {\n        row: 17,\n        col: 9\n      },\n      //{row: 17, col: 10},\n      {\n        row: 17,\n        col: 13\n      }, {\n        row: 17,\n        col: 14\n      }, {\n        row: 17,\n        col: 12\n      }, {\n        row: 17,\n        col: 17\n      }, {\n        row: 17,\n        col: 18\n      }, {\n        row: 17,\n        col: 19\n      }, {\n        row: 17,\n        col: 16\n      }, {\n        row: 17,\n        col: 21\n      }, {\n        row: 17,\n        col: 22\n      }, {\n        row: 17,\n        col: 23\n      }, {\n        row: 17,\n        col: 24\n      }, {\n        row: 17,\n        col: 25\n      }, {\n        row: 17,\n        col: 27\n      }, {\n        row: 17,\n        col: 28\n      }, {\n        row: 17,\n        col: 29\n      }, {\n        row: 17,\n        col: 30\n      },\n      //{row: 254 col: 31},\n      {\n        row: 17,\n        col: 32\n      }, {\n        row: 17,\n        col: 33\n      }, {\n        row: 17,\n        col: 34\n      }, {\n        row: 17,\n        col: 35\n      }, {\n        row: 17,\n        col: 36\n      }, {\n        row: 17,\n        col: 38\n      }, {\n        row: 17,\n        col: 39\n      }, {\n        row: 17,\n        col: 40\n      }, {\n        row: 17,\n        col: 42\n      }, {\n        row: 17,\n        col: 43\n      }, {\n        row: 17,\n        col: 44\n      }, {\n        row: 17,\n        col: 45\n      }, {\n        row: 17,\n        col: 46\n      }, {\n        row: 17,\n        col: 47\n      }, {\n        row: 17,\n        col: 48\n      }, {\n        row: 17,\n        col: 49\n      }, {\n        row: 17,\n        col: 50\n      }, {\n        row: 17,\n        col: 52\n      }, {\n        row: 17,\n        col: 53\n      }, {\n        row: 17,\n        col: 54\n      }, {\n        row: 17,\n        col: 55\n      }, {\n        row: 17,\n        col: 56\n      }, {\n        row: 17,\n        col: 57\n      }, {\n        row: 17,\n        col: 58\n      }, {\n        row: 17,\n        col: 59\n      }, {\n        row: 17,\n        col: 60\n      }, {\n        row: 18,\n        col: 0\n      }, {\n        row: 18,\n        col: 1\n      }, {\n        row: 18,\n        col: 2\n      }, {\n        row: 18,\n        col: 3\n      },\n      //{row: 18, col: 4},\n      {\n        row: 18,\n        col: 5\n      }, {\n        row: 18,\n        col: 6\n      }, {\n        row: 18,\n        col: 7\n      }, {\n        row: 18,\n        col: 8\n      }, {\n        row: 18,\n        col: 9\n      },\n      //{row: 18, col: 10},\n      {\n        row: 18,\n        col: 13\n      }, {\n        row: 18,\n        col: 14\n      }, {\n        row: 18,\n        col: 12\n      }, {\n        row: 18,\n        col: 17\n      }, {\n        row: 18,\n        col: 18\n      }, {\n        row: 18,\n        col: 19\n      }, {\n        row: 18,\n        col: 16\n      }, {\n        row: 18,\n        col: 21\n      }, {\n        row: 18,\n        col: 22\n      }, {\n        row: 18,\n        col: 23\n      }, {\n        row: 18,\n        col: 24\n      }, {\n        row: 18,\n        col: 25\n      }, {\n        row: 18,\n        col: 27\n      }, {\n        row: 18,\n        col: 28\n      }, {\n        row: 18,\n        col: 29\n      }, {\n        row: 18,\n        col: 30\n      },\n      //{row: 254 col: 31},\n      {\n        row: 18,\n        col: 32\n      }, {\n        row: 18,\n        col: 33\n      }, {\n        row: 18,\n        col: 34\n      }, {\n        row: 18,\n        col: 35\n      }, {\n        row: 18,\n        col: 36\n      }, {\n        row: 18,\n        col: 38\n      }, {\n        row: 18,\n        col: 39\n      }, {\n        row: 18,\n        col: 40\n      }, {\n        row: 18,\n        col: 42\n      }, {\n        row: 18,\n        col: 43\n      }, {\n        row: 18,\n        col: 44\n      }, {\n        row: 18,\n        col: 45\n      }, {\n        row: 18,\n        col: 46\n      }, {\n        row: 18,\n        col: 47\n      }, {\n        row: 18,\n        col: 48\n      }, {\n        row: 18,\n        col: 49\n      }, {\n        row: 18,\n        col: 50\n      }, {\n        row: 18,\n        col: 52\n      }, {\n        row: 18,\n        col: 53\n      }, {\n        row: 18,\n        col: 54\n      }, {\n        row: 18,\n        col: 55\n      }, {\n        row: 18,\n        col: 56\n      }, {\n        row: 18,\n        col: 57\n      }, {\n        row: 18,\n        col: 58\n      }, {\n        row: 18,\n        col: 59\n      }, {\n        row: 18,\n        col: 60\n      }, {\n        row: 19,\n        col: 27\n      }, {\n        row: 19,\n        col: 28\n      }, {\n        row: 19,\n        col: 29\n      }, {\n        row: 19,\n        col: 30\n      }, {\n        row: 19,\n        col: 32\n      }, {\n        row: 19,\n        col: 33\n      }, {\n        row: 19,\n        col: 34\n      }, {\n        row: 19,\n        col: 35\n      }, {\n        row: 19,\n        col: 36\n      }, {\n        row: 19,\n        col: 38\n      }, {\n        row: 19,\n        col: 39\n      }, {\n        row: 19,\n        col: 40\n      }, {\n        row: 19,\n        col: 42\n      }, {\n        row: 19,\n        col: 43\n      }, {\n        row: 19,\n        col: 44\n      }, {\n        row: 19,\n        col: 45\n      }, {\n        row: 19,\n        col: 46\n      }, {\n        row: 19,\n        col: 47\n      }, {\n        row: 19,\n        col: 48\n      }, {\n        row: 19,\n        col: 49\n      }, {\n        row: 19,\n        col: 50\n      }, {\n        row: 19,\n        col: 52\n      }, {\n        row: 19,\n        col: 53\n      }, {\n        row: 19,\n        col: 54\n      }, {\n        row: 19,\n        col: 55\n      }, {\n        row: 19,\n        col: 56\n      }, {\n        row: 19,\n        col: 57\n      }, {\n        row: 19,\n        col: 58\n      }, {\n        row: 19,\n        col: 59\n      }, {\n        row: 19,\n        col: 60\n      }, {\n        row: 20,\n        col: 0\n      }, {\n        row: 20,\n        col: 1\n      }, {\n        row: 20,\n        col: 2\n      }, {\n        row: 20,\n        col: 3\n      },\n      //{row: 20, col: 4},\n      //{row: 20, col: 5},\n      {\n        row: 20,\n        col: 6\n      }, {\n        row: 20,\n        col: 7\n      }, {\n        row: 20,\n        col: 8\n      }, {\n        row: 20,\n        col: 9\n      },\n      //{row: 20, col: 10},\n      {\n        row: 20,\n        col: 13\n      }, {\n        row: 20,\n        col: 14\n      }, {\n        row: 20,\n        col: 12\n      }, {\n        row: 20,\n        col: 18\n      }, {\n        row: 20,\n        col: 19\n      }, {\n        row: 20,\n        col: 16\n      }, {\n        row: 20,\n        col: 17\n      }, {\n        row: 20,\n        col: 21\n      }, {\n        row: 20,\n        col: 22\n      }, {\n        row: 20,\n        col: 23\n      }, {\n        row: 20,\n        col: 24\n      }, {\n        row: 20,\n        col: 25\n      }, {\n        row: 20,\n        col: 58\n      }, {\n        row: 20,\n        col: 59\n      }, {\n        row: 20,\n        col: 60\n      }, {\n        row: 21,\n        col: 0\n      }, {\n        row: 21,\n        col: 1\n      }, {\n        row: 21,\n        col: 2\n      }, {\n        row: 21,\n        col: 3\n      }, {\n        row: 21,\n        col: 4\n      },\n      //{row: 21, col: 5},\n      {\n        row: 21,\n        col: 6\n      }, {\n        row: 21,\n        col: 7\n      }, {\n        row: 21,\n        col: 8\n      }, {\n        row: 21,\n        col: 9\n      },\n      //{row: 21, col: 10},\n      {\n        row: 21,\n        col: 13\n      }, {\n        row: 21,\n        col: 14\n      }, {\n        row: 21,\n        col: 12\n      }, {\n        row: 21,\n        col: 18\n      }, {\n        row: 21,\n        col: 19\n      }, {\n        row: 21,\n        col: 16\n      }, {\n        row: 21,\n        col: 17\n      }, {\n        row: 21,\n        col: 21\n      }, {\n        row: 21,\n        col: 22\n      }, {\n        row: 21,\n        col: 23\n      }, {\n        row: 21,\n        col: 24\n      }, {\n        row: 21,\n        col: 25\n      }, {\n        row: 21,\n        col: 27\n      }, {\n        row: 21,\n        col: 28\n      }, {\n        row: 21,\n        col: 29\n      }, {\n        row: 21,\n        col: 30\n      },\n      //{row: 254 col: 31},\n      {\n        row: 21,\n        col: 32\n      }, {\n        row: 21,\n        col: 33\n      }, {\n        row: 21,\n        col: 34\n      }, {\n        row: 21,\n        col: 35\n      }, {\n        row: 21,\n        col: 36\n      }, {\n        row: 21,\n        col: 38\n      }, {\n        row: 21,\n        col: 39\n      }, {\n        row: 21,\n        col: 40\n      }, {\n        row: 21,\n        col: 42\n      }, {\n        row: 21,\n        col: 43\n      }, {\n        row: 21,\n        col: 44\n      }, {\n        row: 21,\n        col: 45\n      }, {\n        row: 21,\n        col: 46\n      }, {\n        row: 21,\n        col: 47\n      }, {\n        row: 21,\n        col: 48\n      }, {\n        row: 21,\n        col: 49\n      }, {\n        row: 21,\n        col: 50\n      }, {\n        row: 21,\n        col: 52\n      }, {\n        row: 21,\n        col: 53\n      }, {\n        row: 21,\n        col: 54\n      }, {\n        row: 21,\n        col: 55\n      }, {\n        row: 21,\n        col: 56\n      }, {\n        row: 21,\n        col: 57\n      }, {\n        row: 21,\n        col: 19\n      }, {\n        row: 21,\n        col: 58\n      }, {\n        row: 21,\n        col: 59\n      }, {\n        row: 21,\n        col: 60\n      }, {\n        row: 22,\n        col: 0\n      }, {\n        row: 22,\n        col: 1\n      }, {\n        row: 22,\n        col: 2\n      }, {\n        row: 22,\n        col: 3\n      }, {\n        row: 22,\n        col: 4\n      },\n      //{row: 22, col: 5},\n      //{row: 22, col: 6},\n      {\n        row: 22,\n        col: 7\n      }, {\n        row: 22,\n        col: 8\n      }, {\n        row: 22,\n        col: 9\n      },\n      //{row: 22, col: 10},\n      {\n        row: 22,\n        col: 13\n      }, {\n        row: 22,\n        col: 14\n      }, {\n        row: 22,\n        col: 12\n      }, {\n        row: 22,\n        col: 18\n      }, {\n        row: 22,\n        col: 19\n      }, {\n        row: 22,\n        col: 16\n      }, {\n        row: 22,\n        col: 17\n      }, {\n        row: 22,\n        col: 21\n      }, {\n        row: 22,\n        col: 22\n      }, {\n        row: 22,\n        col: 23\n      }, {\n        row: 22,\n        col: 24\n      }, {\n        row: 22,\n        col: 25\n      }, {\n        row: 22,\n        col: 27\n      }, {\n        row: 22,\n        col: 28\n      }, {\n        row: 22,\n        col: 29\n      }, {\n        row: 22,\n        col: 30\n      },\n      //{row: 254 col: 31},\n      {\n        row: 22,\n        col: 32\n      }, {\n        row: 22,\n        col: 33\n      }, {\n        row: 22,\n        col: 34\n      }, {\n        row: 22,\n        col: 35\n      }, {\n        row: 22,\n        col: 36\n      }, {\n        row: 22,\n        col: 38\n      }, {\n        row: 22,\n        col: 39\n      }, {\n        row: 22,\n        col: 40\n      }, {\n        row: 22,\n        col: 42\n      }, {\n        row: 22,\n        col: 43\n      }, {\n        row: 22,\n        col: 44\n      }, {\n        row: 22,\n        col: 45\n      }, {\n        row: 22,\n        col: 46\n      }, {\n        row: 22,\n        col: 47\n      }, {\n        row: 22,\n        col: 48\n      }, {\n        row: 22,\n        col: 49\n      }, {\n        row: 22,\n        col: 50\n      }, {\n        row: 22,\n        col: 52\n      }, {\n        row: 22,\n        col: 53\n      }, {\n        row: 22,\n        col: 54\n      }, {\n        row: 22,\n        col: 55\n      }, {\n        row: 22,\n        col: 56\n      }, {\n        row: 22,\n        col: 57\n      }, {\n        row: 22,\n        col: 19\n      }, {\n        row: 22,\n        col: 58\n      }, {\n        row: 22,\n        col: 59\n      }, {\n        row: 22,\n        col: 60\n      }, {\n        row: 23,\n        col: 0\n      }, {\n        row: 23,\n        col: 1\n      }, {\n        row: 23,\n        col: 2\n      }, {\n        row: 23,\n        col: 3\n      }, {\n        row: 23,\n        col: 4\n      }, {\n        row: 23,\n        col: 21\n      }, {\n        row: 23,\n        col: 22\n      }, {\n        row: 23,\n        col: 23\n      }, {\n        row: 23,\n        col: 24\n      }, {\n        row: 23,\n        col: 25\n      }, {\n        row: 23,\n        col: 58\n      }, {\n        row: 23,\n        col: 59\n      }, {\n        row: 23,\n        col: 60\n      }, {\n        row: 24,\n        col: 0\n      }, {\n        row: 24,\n        col: 1\n      }, {\n        row: 24,\n        col: 2\n      }, {\n        row: 24,\n        col: 3\n      }, {\n        row: 24,\n        col: 4\n      }, {\n        row: 24,\n        col: 5\n      }, {\n        row: 24,\n        col: 6\n      }, {\n        row: 24,\n        col: 13\n      }, {\n        row: 24,\n        col: 14\n      }, {\n        row: 24,\n        col: 12\n      }, {\n        row: 24,\n        col: 17\n      }, {\n        row: 24,\n        col: 18\n      }, {\n        row: 24,\n        col: 19\n      }, {\n        row: 24,\n        col: 16\n      }, {\n        row: 24,\n        col: 21\n      }, {\n        row: 24,\n        col: 22\n      }, {\n        row: 24,\n        col: 23\n      }, {\n        row: 24,\n        col: 24\n      }, {\n        row: 24,\n        col: 25\n      }, {\n        row: 24,\n        col: 27\n      }, {\n        row: 24,\n        col: 28\n      }, {\n        row: 24,\n        col: 29\n      }, {\n        row: 24,\n        col: 30\n      },\n      //{row: 254 col: 31},\n      {\n        row: 24,\n        col: 32\n      }, {\n        row: 24,\n        col: 33\n      }, {\n        row: 24,\n        col: 34\n      }, {\n        row: 24,\n        col: 35\n      }, {\n        row: 24,\n        col: 36\n      }, {\n        row: 24,\n        col: 38\n      }, {\n        row: 24,\n        col: 39\n      }, {\n        row: 24,\n        col: 40\n      }, {\n        row: 24,\n        col: 42\n      }, {\n        row: 24,\n        col: 43\n      }, {\n        row: 24,\n        col: 44\n      }, {\n        row: 24,\n        col: 45\n      }, {\n        row: 24,\n        col: 46\n      }, {\n        row: 24,\n        col: 47\n      }, {\n        row: 24,\n        col: 48\n      }, {\n        row: 24,\n        col: 49\n      }, {\n        row: 24,\n        col: 50\n      }, {\n        row: 24,\n        col: 52\n      }, {\n        row: 24,\n        col: 53\n      }, {\n        row: 24,\n        col: 54\n      }, {\n        row: 24,\n        col: 55\n      }, {\n        row: 24,\n        col: 56\n      }, {\n        row: 24,\n        col: 57\n      }, {\n        row: 24,\n        col: 19\n      }, {\n        row: 24,\n        col: 58\n      }, {\n        row: 24,\n        col: 59\n      }, {\n        row: 24,\n        col: 60\n      }, {\n        row: 25,\n        col: 0\n      }, {\n        row: 25,\n        col: 1\n      }, {\n        row: 25,\n        col: 2\n      }, {\n        row: 25,\n        col: 3\n      }, {\n        row: 25,\n        col: 4\n      }, {\n        row: 25,\n        col: 5\n      }, {\n        row: 25,\n        col: 6\n      }, {\n        row: 25,\n        col: 13\n      }, {\n        row: 25,\n        col: 14\n      }, {\n        row: 25,\n        col: 12\n      }, {\n        row: 25,\n        col: 17\n      }, {\n        row: 25,\n        col: 18\n      }, {\n        row: 25,\n        col: 19\n      }, {\n        row: 25,\n        col: 16\n      }, {\n        row: 25,\n        col: 21\n      }, {\n        row: 25,\n        col: 22\n      }, {\n        row: 25,\n        col: 23\n      }, {\n        row: 25,\n        col: 24\n      }, {\n        row: 25,\n        col: 25\n      }, {\n        row: 25,\n        col: 27\n      }, {\n        row: 25,\n        col: 28\n      }, {\n        row: 25,\n        col: 29\n      }, {\n        row: 25,\n        col: 30\n      },\n      //{row: 25, col: 31},\n      {\n        row: 25,\n        col: 32\n      }, {\n        row: 25,\n        col: 33\n      }, {\n        row: 25,\n        col: 34\n      }, {\n        row: 25,\n        col: 35\n      }, {\n        row: 25,\n        col: 36\n      }, {\n        row: 25,\n        col: 38\n      }, {\n        row: 25,\n        col: 39\n      }, {\n        row: 25,\n        col: 40\n      }, {\n        row: 25,\n        col: 42\n      }, {\n        row: 25,\n        col: 43\n      }, {\n        row: 25,\n        col: 44\n      }, {\n        row: 25,\n        col: 45\n      }, {\n        row: 25,\n        col: 46\n      }, {\n        row: 25,\n        col: 47\n      }, {\n        row: 25,\n        col: 48\n      }, {\n        row: 25,\n        col: 49\n      }, {\n        row: 25,\n        col: 50\n      }, {\n        row: 25,\n        col: 52\n      }, {\n        row: 25,\n        col: 53\n      }, {\n        row: 25,\n        col: 54\n      }, {\n        row: 25,\n        col: 55\n      }, {\n        row: 25,\n        col: 56\n      }, {\n        row: 25,\n        col: 57\n      }, {\n        row: 25,\n        col: 19\n      }, {\n        row: 25,\n        col: 58\n      }, {\n        row: 25,\n        col: 59\n      }, {\n        row: 25,\n        col: 60\n      }, {\n        row: 26,\n        col: 0\n      }, {\n        row: 26,\n        col: 1\n      }, {\n        row: 26,\n        col: 2\n      }, {\n        row: 26,\n        col: 3\n      }, {\n        row: 26,\n        col: 4\n      }, {\n        row: 26,\n        col: 5\n      }, {\n        row: 26,\n        col: 6\n      }, {\n        row: 26,\n        col: 7\n      }, {\n        row: 26,\n        col: 8\n      }, {\n        row: 26,\n        col: 9\n      }, {\n        row: 26,\n        col: 10\n      }, {\n        row: 26,\n        col: 11\n      }, {\n        row: 26,\n        col: 58\n      }, {\n        row: 26,\n        col: 59\n      }, {\n        row: 26,\n        col: 60\n      }, {\n        row: 26,\n        col: 13\n      }, {\n        row: 26,\n        col: 14\n      }, {\n        row: 26,\n        col: 15\n      }, {\n        row: 26,\n        col: 12\n      }, {\n        row: 26,\n        col: 17\n      }, {\n        row: 26,\n        col: 18\n      }, {\n        row: 26,\n        col: 19\n      }, {\n        row: 26,\n        col: 20\n      }, {\n        row: 26,\n        col: 16\n      }, {\n        row: 26,\n        col: 21\n      }, {\n        row: 26,\n        col: 22\n      }, {\n        row: 26,\n        col: 23\n      }, {\n        row: 26,\n        col: 24\n      }, {\n        row: 26,\n        col: 25\n      }, {\n        row: 26,\n        col: 26\n      }, {\n        row: 26,\n        col: 27\n      }, {\n        row: 26,\n        col: 28\n      }, {\n        row: 26,\n        col: 29\n      }, {\n        row: 26,\n        col: 30\n      }, {\n        row: 26,\n        col: 31\n      }, {\n        row: 26,\n        col: 32\n      }, {\n        row: 26,\n        col: 33\n      }, {\n        row: 26,\n        col: 34\n      }, {\n        row: 26,\n        col: 35\n      }, {\n        row: 26,\n        col: 36\n      }, {\n        row: 26,\n        col: 37\n      }, {\n        row: 26,\n        col: 38\n      }, {\n        row: 26,\n        col: 39\n      }, {\n        row: 26,\n        col: 40\n      }, {\n        row: 26,\n        col: 41\n      }, {\n        row: 26,\n        col: 42\n      }, {\n        row: 26,\n        col: 43\n      }, {\n        row: 26,\n        col: 44\n      }, {\n        row: 26,\n        col: 45\n      }, {\n        row: 26,\n        col: 46\n      }, {\n        row: 26,\n        col: 47\n      }, {\n        row: 26,\n        col: 48\n      }, {\n        row: 26,\n        col: 49\n      }, {\n        row: 26,\n        col: 50\n      }, {\n        row: 26,\n        col: 51\n      }, {\n        row: 26,\n        col: 52\n      }, {\n        row: 26,\n        col: 53\n      }, {\n        row: 26,\n        col: 54\n      }, {\n        row: 26,\n        col: 55\n      }, {\n        row: 26,\n        col: 56\n      }, {\n        row: 26,\n        col: 57\n      }, {\n        row: 26,\n        col: 19\n      }, {\n        row: 27,\n        col: 0\n      }, {\n        row: 27,\n        col: 1\n      }, {\n        row: 27,\n        col: 2\n      }, {\n        row: 27,\n        col: 3\n      }, {\n        row: 27,\n        col: 4\n      }, {\n        row: 27,\n        col: 5\n      }, {\n        row: 27,\n        col: 6\n      }, {\n        row: 27,\n        col: 7\n      }, {\n        row: 27,\n        col: 8\n      }, {\n        row: 27,\n        col: 9\n      }, {\n        row: 27,\n        col: 10\n      }, {\n        row: 27,\n        col: 11\n      }, {\n        row: 27,\n        col: 58\n      }, {\n        row: 27,\n        col: 59\n      }, {\n        row: 27,\n        col: 60\n      }, {\n        row: 27,\n        col: 13\n      }, {\n        row: 27,\n        col: 14\n      }, {\n        row: 27,\n        col: 15\n      }, {\n        row: 27,\n        col: 12\n      }, {\n        row: 27,\n        col: 17\n      }, {\n        row: 27,\n        col: 18\n      }, {\n        row: 27,\n        col: 19\n      }, {\n        row: 27,\n        col: 20\n      }, {\n        row: 27,\n        col: 16\n      }, {\n        row: 27,\n        col: 21\n      }, {\n        row: 27,\n        col: 22\n      }, {\n        row: 27,\n        col: 23\n      }, {\n        row: 27,\n        col: 24\n      }, {\n        row: 27,\n        col: 25\n      }, {\n        row: 27,\n        col: 26\n      }, {\n        row: 27,\n        col: 27\n      }, {\n        row: 27,\n        col: 28\n      }, {\n        row: 27,\n        col: 29\n      }, {\n        row: 27,\n        col: 30\n      }, {\n        row: 27,\n        col: 31\n      }, {\n        row: 27,\n        col: 32\n      }, {\n        row: 27,\n        col: 33\n      }, {\n        row: 27,\n        col: 34\n      }, {\n        row: 27,\n        col: 35\n      }, {\n        row: 27,\n        col: 36\n      }, {\n        row: 27,\n        col: 37\n      }, {\n        row: 27,\n        col: 38\n      }, {\n        row: 27,\n        col: 39\n      }, {\n        row: 27,\n        col: 40\n      }, {\n        row: 27,\n        col: 41\n      }, {\n        row: 27,\n        col: 42\n      }, {\n        row: 27,\n        col: 43\n      }, {\n        row: 27,\n        col: 44\n      }, {\n        row: 27,\n        col: 45\n      }, {\n        row: 27,\n        col: 46\n      }, {\n        row: 27,\n        col: 47\n      }, {\n        row: 27,\n        col: 48\n      }, {\n        row: 27,\n        col: 49\n      }, {\n        row: 27,\n        col: 50\n      }, {\n        row: 27,\n        col: 51\n      }, {\n        row: 27,\n        col: 52\n      }, {\n        row: 27,\n        col: 53\n      }, {\n        row: 27,\n        col: 54\n      }, {\n        row: 27,\n        col: 55\n      }, {\n        row: 27,\n        col: 56\n      }, {\n        row: 27,\n        col: 57\n      }, {\n        row: 27,\n        col: 19\n      }];\n      for (const wall of walls) {\n        initialGrid[wall.row][wall.col].isWall = true;\n      }\n      return initialGrid;\n    };\n    this.createNode = (row, col) => {\n      return {\n        row,\n        col,\n        isStart: row === this.state.START_NODE_ROW && col === this.state.START_NODE_COL,\n        isFinish: row === this.state.FINISH_NODE_ROW && col === this.state.FINISH_NODE_COL,\n        distance: Infinity,\n        distanceToFinishNode: Math.abs(this.state.FINISH_NODE_ROW - row) + Math.abs(this.state.FINISH_NODE_COL - col),\n        isVisited: false,\n        isWall: false,\n        previousNode: null,\n        isNode: true\n      };\n    };\n    this.state = {\n      grid: [],\n      START_NODE_ROW: 5,\n      FINISH_NODE_ROW: 5,\n      START_NODE_COL: 5,\n      FINISH_NODE_COL: 15,\n      mouseIsPressed: false,\n      ROW_COUNT: 28,\n      COLUMN_COUNT: 61,\n      MOBILE_ROW_COUNT: 10,\n      MOBILE_COLUMN_COUNT: 20,\n      isRunning: false,\n      isStartNode: false,\n      isFinishNode: false,\n      isWallNode: false,\n      currRow: 0,\n      currCol: 0,\n      isDesktopView: true\n    };\n    this.handleMouseDown = this.handleMouseDown.bind(this);\n    this.handleMouseLeave = this.handleMouseLeave.bind(this);\n    this.toggleIsRunning = this.toggleIsRunning.bind(this);\n  }\n  componentDidMount() {\n    const grid = this.getInitialGrid();\n    this.setState({\n      grid\n    });\n  }\n  toggleIsRunning() {\n    this.setState({\n      isRunning: !this.state.isRunning\n    });\n  }\n  toggleView() {\n    if (!this.state.isRunning) {\n      this.clearGrid();\n      // this.clearWalls();\n      const isDesktopView = !this.state.isDesktopView;\n      let grid;\n      if (isDesktopView) {\n        grid = this.getInitialGrid(this.state.ROW_COUNT, this.state.COLUMN_COUNT);\n        this.setState({\n          isDesktopView,\n          grid\n        });\n      } else {\n        if (this.state.START_NODE_ROW > this.state.MOBILE_ROW_COUNT || this.state.FINISH_NODE_ROW > this.state.MOBILE_ROW_COUNT || this.state.START_NODE_COL > this.state.MOBILE_COLUMN_COUNT || this.state.FINISH_NODE_COL > this.state.MOBILE_COLUMN_COUNT) {\n          alert('Start & Finish Nodes Must Be within 10 Rows x 20 Columns');\n        } else {\n          grid = this.getInitialGrid(this.state.MOBILE_ROW_COUNT, this.state.MOBILE_COLUMN_COUNT);\n          this.setState({\n            isDesktopView,\n            grid\n          });\n        }\n      }\n    }\n  }\n  // /******************** Set up the initial grid ********************/\n  // getInitialGrid = (\n  //   rowCount = this.state.ROW_COUNT,\n  //   colCount = this.state.COLUMN_COUNT,\n  // ) => {\n  //   const initialGrid = [];\n  //   for (let row = 0; row < rowCount; row++) {\n  //     const currentRow = [];\n  //     for (let col = 0; col < colCount; col++) {\n  //       currentRow.push(this.createNode(row, col));\n  //     }\n  //     initialGrid.push(currentRow);\n  //   }\n  //   return initialGrid;\n  // };\n\n  // createNode = (row, col) => {\n  //   return {\n  //     row,\n  //     col,\n  //     isStart:\n  //       row === this.state.START_NODE_ROW && col === this.state.START_NODE_COL,\n  //     isFinish:\n  //       row === this.state.FINISH_NODE_ROW &&\n  //       col === this.state.FINISH_NODE_COL,\n  //     distance: Infinity,\n  //     distanceToFinishNode:\n  //       Math.abs(this.state.FINISH_NODE_ROW - row) +\n  //       Math.abs(this.state.FINISH_NODE_COL - col),\n  //     isVisited: false,\n  //     isWall: false,\n  //     previousNode: null,\n  //     isNode: true,\n  //   };\n  // };\n\n  /******************** Control mouse events ********************/\n  handleMouseDown(row, col) {\n    if (!this.state.isRunning) {\n      if (this.isGridClear()) {\n        if (document.getElementById(`node-${row}-${col}`).className === 'node node-start') {\n          this.setState({\n            mouseIsPressed: true,\n            isStartNode: true,\n            currRow: row,\n            currCol: col\n          });\n        } else if (document.getElementById(`node-${row}-${col}`).className === 'node node-finish') {\n          this.setState({\n            mouseIsPressed: true,\n            isFinishNode: true,\n            currRow: row,\n            currCol: col\n          });\n        }\n      } else {\n        this.clearGrid();\n      }\n    }\n  }\n  isGridClear() {\n    for (const row of this.state.grid) {\n      for (const node of row) {\n        const nodeClassName = document.getElementById(`node-${node.row}-${node.col}`).className;\n        if (nodeClassName === 'node node-visited' || nodeClassName === 'node node-shortest-path') {\n          return false;\n        }\n      }\n    }\n    return true;\n  }\n  handleMouseEnter(row, col) {\n    if (!this.state.isRunning && this.state.mouseIsPressed) {\n      const nodeClassName = document.getElementById(`node-${row}-${col}`).className;\n      if (this.state.isStartNode) {\n        if (nodeClassName !== 'node node-wall') {\n          const prevStartNode = this.state.grid[this.state.currRow][this.state.currCol];\n          prevStartNode.isStart = false;\n          document.getElementById(`node-${this.state.currRow}-${this.state.currCol}`).className = 'node';\n          this.setState({\n            currRow: row,\n            currCol: col\n          });\n          const currStartNode = this.state.grid[row][col];\n          currStartNode.isStart = true;\n          document.getElementById(`node-${row}-${col}`).className = 'node node-start';\n        }\n        this.setState({\n          START_NODE_ROW: row,\n          START_NODE_COL: col\n        });\n      } else if (this.state.isFinishNode) {\n        if (nodeClassName !== 'node node-wall') {\n          const prevFinishNode = this.state.grid[this.state.currRow][this.state.currCol];\n          prevFinishNode.isFinish = false;\n          document.getElementById(`node-${this.state.currRow}-${this.state.currCol}`).className = 'node';\n          this.setState({\n            currRow: row,\n            currCol: col\n          });\n          const currFinishNode = this.state.grid[row][col];\n          currFinishNode.isFinish = true;\n          document.getElementById(`node-${row}-${col}`).className = 'node node-finish';\n        }\n        this.setState({\n          FINISH_NODE_ROW: row,\n          FINISH_NODE_COL: col\n        });\n      }\n    }\n  }\n  handleMouseUp(row, col) {\n    if (!this.state.isRunning) {\n      this.setState({\n        mouseIsPressed: false\n      });\n      if (this.state.isStartNode) {\n        const isStartNode = !this.state.isStartNode;\n        this.setState({\n          isStartNode,\n          START_NODE_ROW: row,\n          START_NODE_COL: col\n        });\n      } else if (this.state.isFinishNode) {\n        const isFinishNode = !this.state.isFinishNode;\n        this.setState({\n          isFinishNode,\n          FINISH_NODE_ROW: row,\n          FINISH_NODE_COL: col\n        });\n      }\n      this.getInitialGrid();\n    }\n  }\n  handleMouseLeave() {\n    if (this.state.isStartNode) {\n      const isStartNode = !this.state.isStartNode;\n      this.setState({\n        isStartNode,\n        mouseIsPressed: false\n      });\n    } else if (this.state.isFinishNode) {\n      const isFinishNode = !this.state.isFinishNode;\n      this.setState({\n        isFinishNode,\n        mouseIsPressed: false\n      });\n    }\n  }\n\n  /******************** Clear the board, walls, or path ********************/\n  clearGrid() {\n    if (!this.state.isRunning) {\n      const newGrid = this.state.grid.slice();\n      for (const row of newGrid) {\n        for (const node of row) {\n          const nodeClassName = document.getElementById(`node-${node.row}-${node.col}`).className;\n          if (nodeClassName !== 'node node-start' && nodeClassName !== 'node node-finish' && nodeClassName !== 'node node-wall') {\n            document.getElementById(`node-${node.row}-${node.col}`).className = 'node';\n            node.isVisited = false;\n            node.distance = Infinity;\n            node.distanceToFinishNode = Math.abs(this.state.FINISH_NODE_ROW - node.row) + Math.abs(this.state.FINISH_NODE_COL - node.col);\n          }\n          if (nodeClassName === 'node node-finish') {\n            node.isVisited = false;\n            node.distance = Infinity;\n            node.distanceToFinishNode = 0;\n          }\n          if (nodeClassName === 'node node-start') {\n            node.isVisited = false;\n            node.distance = Infinity;\n            node.distanceToFinishNode = Math.abs(this.state.FINISH_NODE_ROW - node.row) + Math.abs(this.state.FINISH_NODE_COL - node.col);\n            node.isStart = true;\n            node.isWall = false;\n            node.previousNode = null;\n            node.isNode = true;\n          }\n        }\n      }\n      this.setState({\n        grid: newGrid\n      });\n    }\n  }\n\n  // clearWalls() {\n  //   if (!this.state.isRunning) {\n  //     const newGrid = this.state.grid.slice();\n  //     for (const row of newGrid) {\n  //       for (const node of row) {\n  //         if (node.isWall) {\n  //           document.getElementById(`node-${node.row}-${node.col}`).className =\n  //             'node';\n  //           node.isWall = false;\n  //         }\n  //       }\n  //     }\n  //     this.setState({grid: newGrid});\n  //   }\n  // }\n\n  /******************** Visualize the algorithms ********************/\n  visualize(algo) {\n    if (!this.state.isRunning) {\n      this.clearGrid();\n      this.toggleIsRunning();\n      const {\n        grid\n      } = this.state;\n      const startNode = grid[this.state.START_NODE_ROW][this.state.START_NODE_COL];\n      const finishNode = grid[this.state.FINISH_NODE_ROW][this.state.FINISH_NODE_COL];\n      let visitedNodesInOrder;\n      switch (algo) {\n        case 'Dijkstra':\n          visitedNodesInOrder = dijkstra(grid, startNode, finishNode);\n          break;\n        case 'AStar':\n          visitedNodesInOrder = AStar(grid, startNode, finishNode);\n          break;\n        case 'DFS':\n          visitedNodesInOrder = dfs(grid, startNode, finishNode);\n          break;\n        case 'BFS':\n          visitedNodesInOrder = bfs(grid, startNode, finishNode);\n          break;\n        case 'BellmanFord':\n          // Add Bellman-Ford case\n          visitedNodesInOrder = bellmanFord(grid, startNode, finishNode);\n          break;\n        default:\n          visitedNodesInOrder = dijkstra(grid, startNode, finishNode);\n          break;\n      }\n      const nodesInShortestPathOrder = this.getNodesInShortestPathOrder(finishNode);\n      this.animateAlgorithm(visitedNodesInOrder, nodesInShortestPathOrder);\n    }\n  }\n  animateAlgorithm(visitedNodesInOrder, nodesInShortestPathOrder) {\n    for (let i = 0; i <= visitedNodesInOrder.length; i++) {\n      if (i === visitedNodesInOrder.length) {\n        setTimeout(() => {\n          this.animateShortestPath(nodesInShortestPathOrder);\n        }, 10 * i);\n        return;\n      }\n      setTimeout(() => {\n        const node = visitedNodesInOrder[i];\n        if (!(document.getElementById(`node-${node.row}-${node.col}`).className === 'node node-start' || document.getElementById(`node-${node.row}-${node.col}`).className === 'node node-finish')) {\n          document.getElementById(`node-${node.row}-${node.col}`).className = 'node node-visited';\n        }\n      }, 10 * i);\n    }\n  }\n  animateShortestPath(nodesInShortestPathOrder) {\n    for (let i = 0; i < nodesInShortestPathOrder.length; i++) {\n      setTimeout(() => {\n        const node = nodesInShortestPathOrder[i];\n        if (!(document.getElementById(`node-${node.row}-${node.col}`).className === 'node node-start' || document.getElementById(`node-${node.row}-${node.col}`).className === 'node node-finish')) {\n          document.getElementById(`node-${node.row}-${node.col}`).className = 'node node-shortest-path';\n        }\n      }, 50 * i);\n    }\n    this.toggleIsRunning();\n  }\n\n  /******************** Get the nodes in the shortest path order ********************/\n  getNodesInShortestPathOrder(finishNode) {\n    const nodesInShortestPathOrder = [];\n    let currentNode = finishNode;\n    while (currentNode !== null) {\n      nodesInShortestPathOrder.unshift(currentNode);\n      currentNode = currentNode.previousNode;\n    }\n    return nodesInShortestPathOrder;\n  }\n  render() {\n    const {\n      grid,\n      mouseIsPressed\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"full-visualizer\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"navbar\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"navbar-brand bg-slate-600 text-white font-bold py-3\",\n          children: \"Pathfinding Visualizer\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1706,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"algorithm-buttons\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded-full\",\n            onClick: () => this.visualize('Dijkstra'),\n            children: \"Dijkstra\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1710,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded-full\",\n            onClick: () => this.visualize('AStar'),\n            children: \"A*\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1711,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded-full\",\n            onClick: () => this.visualize('DFS'),\n            children: \"DFS\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1712,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded-full\",\n            onClick: () => this.visualize('BFS'),\n            children: \"BFS\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1713,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded-full\",\n            onClick: () => this.visualize('BellmanFord'),\n            children: \"Bellman-Ford\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1714,\n            columnNumber: 13\n          }, this), \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1709,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"control-buttons\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded-full\",\n            onClick: () => this.clearGrid(),\n            children: \"Clear Grid\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1717,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1716,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1705,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"line\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"grid\",\n          children: grid.map((row, rowIdx) => {\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"row\",\n              children: row.map((node, nodeIdx) => {\n                const {\n                  row,\n                  col,\n                  isFinish,\n                  isStart,\n                  isWall\n                } = node;\n                return /*#__PURE__*/_jsxDEV(Node, {\n                  col: col,\n                  isFinish: isFinish,\n                  isStart: isStart,\n                  isWall: isWall,\n                  mouseIsPressed: mouseIsPressed,\n                  onMouseDown: (row, col) => this.handleMouseDown(row, col),\n                  onMouseEnter: (row, col) => this.handleMouseEnter(row, col),\n                  onMouseUp: () => this.handleMouseUp(row, col),\n                  row: row\n                }, nodeIdx, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1729,\n                  columnNumber: 21\n                }, this);\n              })\n            }, rowIdx, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1725,\n              columnNumber: 15\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1722,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1721,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1704,\n      columnNumber: 7\n    }, this);\n  }\n}\nconst getNewGridWithWallToggled = (grid, row, col) => {\n  const newGrid = grid.slice();\n  const node = newGrid[row][col];\n  const newNode = {\n    ...node,\n    isWall: !node.isWall\n  };\n  newGrid[row][col] = newNode;\n  return newGrid;\n};\n\n// Backtracks from the finishNode to find the shortest path.\n// Only works when called after the pathfinding methods.\nfunction getNodesInShortestPathOrder(finishNode) {\n  const nodesInShortestPathOrder = [];\n  let currentNode = finishNode;\n  while (currentNode !== null) {\n    nodesInShortestPathOrder.unshift(currentNode);\n    currentNode = currentNode.previousNode;\n  }\n  return nodesInShortestPathOrder;\n}","map":{"version":3,"names":["React","Component","Node","useState","classNames","dijkstra","AStar","dfs","bfs","bellmanFord","vancouver","locations","jsxDEV","_jsxDEV","PathfindingVisualizer","constructor","getInitialGrid","rowCount","state","ROW_COUNT","colCount","COLUMN_COUNT","initialGrid","row","currentRow","col","push","createNode","walls","wall","isWall","isStart","START_NODE_ROW","START_NODE_COL","isFinish","FINISH_NODE_ROW","FINISH_NODE_COL","distance","Infinity","distanceToFinishNode","Math","abs","isVisited","previousNode","isNode","grid","mouseIsPressed","MOBILE_ROW_COUNT","MOBILE_COLUMN_COUNT","isRunning","isStartNode","isFinishNode","isWallNode","currRow","currCol","isDesktopView","handleMouseDown","bind","handleMouseLeave","toggleIsRunning","componentDidMount","setState","toggleView","clearGrid","alert","isGridClear","document","getElementById","className","node","nodeClassName","handleMouseEnter","prevStartNode","currStartNode","prevFinishNode","currFinishNode","handleMouseUp","newGrid","slice","visualize","algo","startNode","finishNode","visitedNodesInOrder","nodesInShortestPathOrder","getNodesInShortestPathOrder","animateAlgorithm","i","length","setTimeout","animateShortestPath","currentNode","unshift","render","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","map","rowIdx","nodeIdx","onMouseDown","onMouseEnter","onMouseUp","getNewGridWithWallToggled","newNode"],"sources":["/Users/mac/Desktop/path_find 2/src/PathfindingVisualizer/pathfindingVisualizer.jsx"],"sourcesContent":["import React, {Component} from 'react';\nimport Node from './Node/Node';\nimport {useState} from 'react';\nimport classNames from 'classnames';\nimport {dijkstra} from '../algorithms/dijkstra';\nimport {AStar} from '../algorithms/aStar';\nimport {dfs} from '../algorithms/dfs';\nimport {bfs} from '../algorithms/bfs';\nimport {bellmanFord} from '../algorithms/bellmanford'; // Import Bellman-Ford algorithm\nimport vancouver from '../assets/images/vancouver.png';\nimport locations from '../location.json';\n\n\n\n\nimport './pathfindingVisualizer.css';\n\n\n\nexport default class PathfindingVisualizer extends Component {\n  constructor() {\n    super();\n    this.state = {\n      grid: [],\n      START_NODE_ROW: 5,\n      FINISH_NODE_ROW: 5,\n      START_NODE_COL: 5,\n      FINISH_NODE_COL: 15,\n      mouseIsPressed: false,\n      ROW_COUNT: 28,\n      COLUMN_COUNT: 61,\n      MOBILE_ROW_COUNT: 10,\n      MOBILE_COLUMN_COUNT: 20,\n      isRunning: false,\n      isStartNode: false,\n      isFinishNode: false,\n      isWallNode: false,\n      currRow: 0,\n      currCol: 0,\n      isDesktopView: true,\n    };\n\n    this.handleMouseDown = this.handleMouseDown.bind(this);\n    this.handleMouseLeave = this.handleMouseLeave.bind(this);\n    this.toggleIsRunning = this.toggleIsRunning.bind(this);\n  }\n\n  componentDidMount() {\n    const grid = this.getInitialGrid();\n    this.setState({grid});\n  }\n\n  \n\n  toggleIsRunning() {\n    this.setState({isRunning: !this.state.isRunning});\n  }\n\n  toggleView() {\n    if (!this.state.isRunning) {\n      this.clearGrid();\n      // this.clearWalls();\n      const isDesktopView = !this.state.isDesktopView;\n      let grid;\n      if (isDesktopView) {\n        grid = this.getInitialGrid(\n          this.state.ROW_COUNT,\n          this.state.COLUMN_COUNT,\n        );\n        this.setState({isDesktopView, grid});\n      } else {\n        if (\n          this.state.START_NODE_ROW > this.state.MOBILE_ROW_COUNT ||\n          this.state.FINISH_NODE_ROW > this.state.MOBILE_ROW_COUNT ||\n          this.state.START_NODE_COL > this.state.MOBILE_COLUMN_COUNT ||\n          this.state.FINISH_NODE_COL > this.state.MOBILE_COLUMN_COUNT\n        ) {\n          alert('Start & Finish Nodes Must Be within 10 Rows x 20 Columns');\n        } else {\n          grid = this.getInitialGrid(\n            this.state.MOBILE_ROW_COUNT,\n            this.state.MOBILE_COLUMN_COUNT,\n          );\n          this.setState({isDesktopView, grid});\n        }\n      }\n    }\n  }\n\n  getInitialGrid = (\n    rowCount = this.state.ROW_COUNT,\n    colCount = this.state.COLUMN_COUNT,\n  ) => {\n    const initialGrid = [];\n    for (let row = 0; row < rowCount; row++) {\n      const currentRow = [];\n      for (let col = 0; col < colCount; col++) {\n        currentRow.push(this.createNode(row, col));\n      }\n      initialGrid.push(currentRow);\n    }\n\n    // Define walls here\n    const walls = [\n      {row: 0, col: 0},\n      {row: 0, col: 1},\n      {row: 0, col: 2},\n      {row: 0, col: 3},\n      {row: 0, col: 4},\n      //{row: 0, col: 5},\n      {row: 0, col: 6},\n      {row: 0, col: 7},\n      {row: 0, col: 8},\n      {row: 0, col: 9},\n      {row: 0, col: 10},\n      {row: 0, col: 29},\n      {row: 0, col: 30},\n      {row: 0, col: 31},\n      {row: 0, col: 32},\n      {row: 0, col: 33},\n      {row: 0, col: 34},\n      {row: 0, col: 35},\n      {row: 0, col: 36},\n      {row: 0, col: 37},\n      {row: 0, col: 38},\n      {row: 0, col: 39},\n      {row: 0, col: 40},\n      {row: 0, col: 41},\n      {row: 0, col: 42},\n      {row: 0, col: 43},\n      {row: 0, col: 44},\n      {row: 0, col: 45},\n      {row: 0, col: 46},\n      {row: 0, col: 47},\n      {row: 0, col: 48},\n      {row: 0, col: 49},\n      {row: 0, col: 50},\n      {row: 0, col: 51},\n      {row: 0, col: 52},\n      {row: 0, col: 53},\n      {row: 0, col: 54},\n      {row: 0, col: 55},\n      {row: 0, col: 56},\n      {row: 0, col: 57},\n      {row: 0, col: 58},\n      {row: 0, col: 59},\n      {row: 0, col: 60},\n     \n\n      {row: 1, col: 0},\n      {row: 1, col: 1},\n      {row: 1, col: 2},\n      {row: 1, col: 3},\n      {row: 1, col: 4},\n      //{row: 1, col: 5},\n      {row: 1, col: 6},\n      {row: 1, col: 7},\n      {row: 1, col: 8},\n      {row: 1, col: 9},\n      {row: 1, col: 10},\n      {row: 1, col: 58},\n      {row: 1, col: 59},\n      {row: 1, col: 60},\n\n      {row: 2, col: 0},\n      {row: 2, col: 1},\n      {row: 2, col: 2},\n      {row: 2, col: 3},\n      {row: 2, col: 4},\n      //{row: 2, col: 5},\n      {row: 2, col: 6},\n      {row: 2, col: 7},\n      {row: 2, col: 8},\n      {row: 2, col: 9},\n      {row: 2, col: 10},\n      {row: 2, col: 13},\n      {row: 2, col: 14},\n      {row: 2, col: 15},\n      {row: 2, col: 17},\n      {row: 2, col: 18},\n      {row: 2, col: 19},\n      {row: 2, col: 20},\n      {row: 2, col: 22},\n      {row: 2, col: 23},\n      {row: 2, col: 24},\n      {row: 2, col: 25},\n      {row: 2, col: 27},\n      {row: 2, col: 58},\n      {row: 2, col: 59},\n      {row: 2, col: 60},\n      \n\n\n      {row: 3, col: 0},\n      {row: 3, col: 1},\n      {row: 3, col: 2},\n      {row: 3, col: 3},\n      {row: 3, col: 4},\n      //{row: 3, col: 5},\n      {row: 3, col: 6},\n      {row: 3, col: 7},\n      {row: 3, col: 8},\n      {row: 3, col: 9},\n      {row: 3, col: 10},\n      {row: 3, col: 32},\n      {row: 3, col: 33},\n      {row: 3, col: 34},\n      {row: 3, col: 35},\n      {row: 3, col: 38},\n      {row: 3, col: 40},\n      {row: 3, col: 42},\n      {row: 3, col: 43},\n      {row: 3, col: 58},\n      {row: 3, col: 59},\n      {row: 3, col: 60},\n      \n\n\n      {row: 4, col: 0},\n      {row: 4, col: 1},\n      {row: 4, col: 2},\n      {row: 4, col: 3},\n      {row: 4, col: 4},\n      //{row: 4, col: 5},\n      {row: 4, col: 6},\n      {row: 4, col: 7},\n      {row: 4, col: 8},\n      {row: 4, col: 9},\n      {row: 4, col: 10},\n      {row: 4, col: 12},\n      {row: 4, col: 13},\n      {row: 4, col: 17},\n      {row: 4, col: 18},\n      {row: 4, col: 19},\n      {row: 4, col: 20},\n      {row: 4, col: 22},\n      {row: 4, col: 23},\n      {row: 4, col: 24},\n      {row: 4, col: 25},\n      {row: 4, col: 27},\n      {row: 4, col: 28},\n      {row: 4, col: 29},\n      {row: 4, col: 30},\n      {row: 4, col: 34},\n      {row: 4, col: 35},\n      {row: 4, col: 36},\n      {row: 4, col: 10},\n      {row: 4, col: 30},\n      //{row: 254 col: 31},\n      {row: 4, col: 32},\n      {row: 4, col: 32},\n      // {row: 5, col: 33},\n      {row: 4, col: 38},\n      {row: 4, col: 39},\n      {row: 4, col: 40},\n      // {row: 5, col: 38},\n      {row: 4, col: 56},\n      {row: 4, col: 57},\n      {row: 4, col: 54},\n      {row: 4, col: 53},\n      {row: 4, col: 52},\n      {row: 4, col: 50},\n      {row: 4, col: 49},\n      {row: 4, col: 46},\n      {row: 4, col: 47},\n      {row: 4, col: 44},\n      {row: 4, col: 43},\n      {row: 4, col: 58},\n      {row: 4, col: 59},\n      {row: 4, col: 60},\n\n      {row: 5, col: 0},\n      {row: 5, col: 1},\n      {row: 5, col: 2},\n      {row: 5, col: 3},\n      {row: 5, col: 4},\n      //{row: 5, col: 5},\n      {row: 5, col: 6},\n      {row: 5, col: 7},\n      {row: 5, col: 8},\n      {row: 5, col: 9},\n      {row: 5, col: 10},\n      {row: 5, col: 12},\n      {row: 5, col: 13},\n      {row: 5, col: 14},\n      {row: 5, col: 15},\n      {row: 5, col: 17},\n      {row: 5, col: 18},\n      {row: 5, col: 19},\n      {row: 5, col: 20},\n      {row: 5, col: 22},\n      {row: 5, col: 23},\n      {row: 5, col: 24},\n      {row: 5, col: 25},\n      {row: 5, col: 27},\n      {row: 5, col: 28},\n      {row: 5, col: 29},\n      {row: 5, col: 30},\n      //{row: 254 col: 31},\n      {row: 5, col: 32},\n      {row: 5, col: 32},\n      // {row: 5, col: 33},\n      {row: 5, col: 38},\n      {row: 5, col: 39},\n      {row: 5, col: 40},\n      // {row: 5, col: 38},\n      {row: 5, col: 56},\n      {row: 5, col: 57},\n      {row: 5, col: 54},\n      {row: 5, col: 53},\n      {row: 5, col: 52},\n      {row: 5, col: 50},\n      {row: 5, col: 49},\n      {row: 5, col: 46},\n      {row: 5, col: 47},\n      {row: 5, col: 44},\n      {row: 5, col: 43},\n      {row: 5, col: 58},\n      {row: 5, col: 59},\n      {row: 5, col: 60},\n\n\n      {row: 6, col: 0},\n      {row: 6, col: 1},\n      {row: 6, col: 2},\n      //{row: 6, col: 3},\n      //{row: 6, col: 4},\n      //{row: 6, col: 5},\n      {row: 6, col: 6},\n      {row: 6, col: 7},\n      {row: 6, col: 8},\n      {row: 6, col: 9},\n      {row: 6, col: 10},\n      {row: 6, col: 12},\n      {row: 6, col: 13},\n      {row: 6, col: 14},\n      {row: 6, col: 15},\n      {row: 6, col: 17},\n      {row: 6, col: 18},\n      {row: 6, col: 19},\n      {row: 6, col: 20},\n      {row: 6, col: 22},\n      {row: 6, col: 23},\n      {row: 6, col: 24},\n      {row: 6, col: 25},\n      {row: 6, col: 24},\n      {row: 6, col: 25},\n      {row: 6, col: 27},\n      {row: 6, col: 28},\n      {row: 6, col: 29},\n      {row: 6, col: 30},\n      //{row: 254 col: 31},\n      {row: 6, col: 32},\n      {row: 6, col: 33},\n      {row: 6, col: 38},\n      {row: 6, col: 39},\n      {row: 6, col: 40},\n      {row: 6, col: 38},\n      {row: 6, col: 56},\n      {row: 6, col: 57},\n      {row: 6, col: 54},\n      {row: 6, col: 53},\n      {row: 6, col: 52},\n      {row: 6, col: 50},\n      {row: 6, col: 49},\n      {row: 6, col: 46},\n      {row: 6, col: 47},\n      {row: 6, col: 44},\n      {row: 6, col: 43},\n      {row: 6, col: 58},\n      {row: 6, col: 59},\n      {row: 6, col: 60},\n     \n\n      \n\n\n      {row: 7, col: 0},\n      {row: 7, col: 1},\n      {row: 7, col: 4},\n      {row: 7, col: 58},\n      {row: 7, col: 59},\n      {row: 7, col: 60},\n      \n      \n      //{row: 8, col: 0},\n      //{row: 8, col: 1},\n      //{row: 8, col: 2},\n      {row: 8, col: 3},\n      {row: 8, col: 4},\n      //{row: 8, col: 5},\n      {row: 8, col: 6},\n      {row: 8, col: 7},\n      {row: 8, col: 8},\n      {row: 8, col: 9},\n      {row: 8, col: 10},\n      {row: 8, col: 12},\n      {row: 8, col: 13},\n      {row: 8, col: 14},\n      {row: 8, col: 15},\n      {row: 8, col: 17},\n      {row: 8, col: 18},\n      {row: 8, col: 19},\n      {row: 8, col: 20},\n      {row: 8, col: 22},\n      {row: 8, col: 23},\n      {row: 8, col: 24},\n      {row: 8, col: 25},\n      {row: 8, col: 21},\n      {row: 8, col: 22},\n      {row: 8, col: 23},\n      {row: 8, col: 24},\n      {row: 8, col: 25},\n      {row: 8, col: 27},\n      {row: 8, col: 28},\n      {row: 8, col: 29},\n      {row: 8, col: 30},\n      //{row: 254 col: 31},\n      {row: 8, col: 32},\n      {row: 8, col: 33},\n      {row: 8, col: 34},\n      {row: 8, col: 35},\n      {row: 8, col: 36},\n      // {row: 8, col: 38},\n      {row: 8, col: 56},\n      {row: 8, col: 57},\n      {row: 8, col: 54},\n      {row: 8, col: 53},\n      {row: 8, col: 52},\n      {row: 8, col: 50},\n      {row: 8, col: 49},\n      {row: 8, col: 46},\n      {row: 8, col: 47},\n      {row: 8, col: 44},\n      {row: 8, col: 43},\n      {row: 8, col: 58},\n      {row: 8, col: 59},\n      {row: 8, col: 60},\n      \n     \n       //{row: 9, col: 0},\n      //{row: 9, col: 1},\n      {row: 9, col: 2},\n      {row: 9, col: 3},\n      {row: 9, col: 4},\n      //{row: 9, col: 5},\n      {row: 9, col: 6},\n      {row: 9, col: 7},\n      {row: 9, col: 8},\n      {row: 9, col: 9},\n      {row: 9, col: 10},\n      {row: 9, col: 12},\n      {row: 9, col: 13},\n      {row: 9, col: 14},\n      {row: 9, col: 17},\n      {row: 9, col: 18},\n      {row: 9, col: 19},\n      {row: 9, col: 20},\n      {row: 9, col: 22},\n      {row: 9, col: 23},\n      {row: 9, col: 24},\n      {row: 9, col: 25},\n      {row: 9, col: 22},\n      {row: 9, col: 23},\n      {row: 9, col: 24},\n      {row: 9, col: 25},\n      {row: 9, col: 21},\n      {row: 9, col: 22},\n      {row: 9, col: 23},\n      {row: 9, col: 24},\n      {row: 9, col: 25},\n      {row: 9, col: 27},\n      {row: 9, col: 28},\n      {row: 9, col: 29},\n      {row: 9, col: 30},\n      //{row: 254 col: 31},\n      {row: 9, col: 32},\n      {row: 9, col: 33},\n      {row: 9, col: 34},\n      {row: 9, col: 35},\n      {row: 9, col: 36},\n      {row: 9, col: 38},\n      {row: 9, col: 56},\n      {row: 9, col: 57},\n      {row: 9, col: 54},\n      {row: 9, col: 53},\n      {row: 9, col: 52},\n      {row: 9, col: 50},\n      {row: 9, col: 49},\n      {row: 9, col: 46},\n      {row: 9, col: 47},\n      {row: 9, col: 44},\n      {row: 9, col: 43},\n      {row: 9, col: 58},\n      {row: 9, col: 59},\n      {row: 9, col: 60},\n      \n      \n     \n     \n\n       {row: 10, col: 0},\n      //{row: 10, col: 1},\n      {row: 10, col: 2},\n      {row: 10, col: 3},\n      {row: 10, col: 4},\n      //{row: 10, col: 5},\n      {row: 10, col: 6},\n      {row: 10, col: 7},\n      {row: 10, col: 8},\n      {row: 10, col: 9},\n      {row: 10, col: 10},\n      {row: 10, col: 12},\n      {row: 10, col: 13},\n      {row: 10, col: 14},\n      {row: 10, col: 17},\n      {row: 10, col: 18},\n      {row: 10, col: 19},\n      {row: 10, col: 16},\n      //{row: 10, col: 21},\n      {row: 10, col: 22},\n      {row: 10, col: 23},\n      {row: 10, col: 24},\n      {row: 10, col: 25},\n      {row: 10, col: 21},\n      {row: 10, col: 22},\n      {row: 10, col: 23},\n      {row: 10, col: 24},\n      {row: 10, col: 25},\n      {row: 10, col: 21},\n      {row: 10, col: 22},\n      {row: 10, col: 23},\n      {row: 10, col: 24},\n      {row: 10, col: 25},\n      {row: 10, col: 21},\n      {row: 10, col: 22},\n      {row: 10, col: 23},\n      {row: 10, col: 24},\n      {row: 10, col: 25},\n      {row: 10, col: 21},\n      {row: 10, col: 22},\n      {row: 10, col: 23},\n      {row: 10, col: 24},\n      {row: 10, col: 25},\n      {row: 10, col: 27},\n      {row: 10, col: 28},\n      {row: 10, col: 29},\n      {row: 10, col: 30},\n      //{row: 254 col: 31},\n      {row: 10, col: 32},\n      {row: 10, col: 33},\n      {row: 10, col: 34},\n      {row: 10, col: 35},\n      {row: 10, col: 36},\n      {row: 10, col: 38},\n      {row: 10, col: 39},\n      {row: 10, col: 40},\n      {row: 10, col: 56},\n      {row: 10, col: 57},\n      {row: 10, col: 53},\n      {row: 10, col: 52},\n      {row: 10, col: 58},\n      {row: 10, col: 59},\n      {row: 10, col: 60},\n      \n     \n\n      {row: 11, col: 21},\n      {row: 11, col: 22},\n      {row: 11, col: 23},\n      {row: 11, col: 24},\n      {row: 11, col: 25},\n      {row: 11, col: 21},\n      {row: 11, col: 22},\n      {row: 11, col: 23},\n      {row: 11, col: 24},\n      {row: 11, col: 25},\n      {row: 11, col: 21},\n      {row: 11, col: 22},\n      {row: 11, col: 23},\n      {row: 11, col: 24},\n      {row: 11, col: 25},\n      {row: 11, col: 21},\n      {row: 11, col: 22},\n      {row: 11, col: 23},\n      {row: 11, col: 24},\n      {row: 11, col: 25},\n      {row: 11, col: 27},\n      {row: 11, col: 28},\n      {row: 11, col: 29},\n      {row: 11, col: 30},\n      //{row: 254 col: 31},\n      {row: 11, col: 32},\n      {row: 11, col: 33},\n      {row: 11, col: 34},\n      {row: 11, col: 35},\n      {row: 11, col: 36},\n      {row: 11, col: 38},\n      {row: 11, col: 39},\n      {row: 11, col: 40},\n      {row: 11, col: 42},\n      {row: 11, col: 55},\n      {row: 11, col: 56},\n      {row: 11, col: 49},\n      {row: 11, col: 48},\n      {row: 11, col: 46},\n      {row: 11, col: 58},\n      {row: 11, col: 59},\n      {row: 11, col: 60},\n      \n      \n      \n\n       {row: 12, col: 0},\n      //{row: 12, col: 1},\n      {row: 12, col: 2},\n      {row: 12, col: 3},\n      //{row: 12, col: 4},\n      {row: 12, col: 5},\n      {row: 12, col: 6},\n      {row: 12, col: 7},\n      {row: 12, col: 8},\n      {row: 12, col: 9},\n      //{row: 12, col: 10},\n      {row: 12, col: 13},\n      {row: 12, col: 14},\n      {row: 12, col: 12},\n      {row: 12, col: 18},\n      {row: 12, col: 17},\n      {row: 12, col: 16},\n      {row: 12, col: 21},\n      {row: 12, col: 22},\n      {row: 12, col: 23},\n      {row: 12, col: 24},\n      {row: 12, col: 25},\n      {row: 12, col: 21},\n      {row: 12, col: 22},\n      {row: 12, col: 23},\n      {row: 12, col: 24},\n      {row: 12, col: 25},\n      {row: 12, col: 21},\n      {row: 12, col: 22},\n      {row: 12, col: 23},\n      {row: 12, col: 24},\n      {row: 12, col: 25},\n      {row: 12, col: 27},\n      {row: 12, col: 28},\n      {row: 12, col: 29},\n      {row: 12, col: 30},\n      //{row: 254 col: 31},\n      {row: 12, col: 32},\n      {row: 12, col: 33},\n      {row: 12, col: 34},\n      {row: 12, col: 35},\n      {row: 12, col: 36},\n      {row: 12, col: 38},\n      {row: 12, col: 39},\n      {row: 12, col: 40},\n      {row: 12, col: 42},\n      {row: 12, col: 43},\n      {row: 12, col: 44},\n      {row: 12, col: 57},\n      {row: 12, col: 52},\n      {row: 12, col: 51},\n      {row: 12, col: 48},\n      {row: 12, col: 58},\n      {row: 12, col: 59},\n      {row: 12, col: 60},\n    \n      \n\n      {row: 13, col: 0},\n      //{row: 13, col: 1},\n      {row: 13, col: 2},\n      {row: 13, col: 3},\n      //{row: 13, col: 4},\n      {row: 13, col: 5},\n      {row: 13, col: 6},\n      {row: 13, col: 7},\n      {row: 13, col: 8},\n      {row: 13, col: 9},\n      //{row: 13, col: 10},\n      {row: 13, col: 13},\n      {row: 13, col: 14},\n      {row: 13, col: 12},\n      {row: 13, col: 17},\n      {row: 13, col: 16},\n      {row: 13, col: 18},\n      {row: 13, col: 19},\n      {row: 13, col: 21},\n      {row: 13, col: 22},\n      {row: 13, col: 23},\n      {row: 13, col: 24},\n      {row: 13, col: 25},\n      {row: 13, col: 27},\n      {row: 13, col: 28},\n      {row: 13, col: 29},\n      {row: 13, col: 30},\n      //{row: 254 col: 31},\n      {row: 13, col: 32},\n      {row: 13, col: 33},\n      {row: 13, col: 34},\n      {row: 13, col: 35},\n      {row: 13, col: 36},\n      {row: 13, col: 38},\n      {row: 13, col: 39},\n      {row: 13, col: 40},\n      {row: 13, col: 42},\n      {row: 13, col: 43},\n      {row: 13, col: 44},\n      {row: 13, col: 45},\n      {row: 13, col: 46},\n      {row: 13, col: 57},\n      //{row: 13, col: 53},\n      {row: 13, col: 54},\n      {row: 13, col: 50},\n      {row: 13, col: 51},\n      {row: 13, col: 58},\n      {row: 13, col: 59},\n      {row: 13, col: 60},\n\n      {row: 14, col: 0},\n      //{row: 14, col: 1},\n      {row: 14, col: 2},\n      {row: 14, col: 3},\n      //{row: 14, col: 4},\n      {row: 14, col: 5},\n      {row: 14, col: 6},\n      {row: 14, col: 7},\n      {row: 14, col: 8},\n      {row: 14, col: 9},\n      //{row: 14, col: 10},\n      {row: 14, col: 13},\n      {row: 14, col: 14},\n      {row: 14, col: 12},\n      {row: 14, col: 18},\n      {row: 14, col: 17},\n      {row: 14, col: 16},\n      {row: 14, col: 19},\n      {row: 14, col: 21},\n      {row: 14, col: 22},\n      {row: 14, col: 23},\n      {row: 14, col: 24},\n      {row: 14, col: 25},\n      {row: 14, col: 27},\n      {row: 14, col: 28},\n      {row: 14, col: 29},\n      {row: 14, col: 30},\n      //{row: 254 col: 31},\n      {row: 14, col: 32},\n      {row: 14, col: 33},\n      {row: 14, col: 34},\n      {row: 14, col: 35},\n      {row: 14, col: 36},\n      {row: 14, col: 38},\n      {row: 14, col: 39},\n      {row: 14, col: 40},\n      {row: 14, col: 42},\n      {row: 14, col: 43},\n      {row: 14, col: 44},\n      {row: 14, col: 45},\n      {row: 14, col: 46},\n      {row: 14, col: 47},\n      {row: 14, col: 48},\n      {row: 14, col: 56},\n      {row: 14, col: 57},\n      {row: 14, col: 58},\n      {row: 14, col: 59},\n      {row: 14, col: 60},\n\n      {row: 15, col: 21},\n      {row: 15, col: 22},\n      {row: 15, col: 23},\n      {row: 15, col: 24},\n      {row: 15, col: 25},\n      {row: 15, col: 27},\n      {row: 15, col: 28},\n      {row: 15, col: 29},\n      {row: 15, col: 30},\n      //{row: 254 col: 31},\n      {row: 15, col: 32},\n      {row: 15, col: 33},\n      {row: 15, col: 34},\n      {row: 15, col: 35},\n      {row: 15, col: 36},\n      {row: 15, col: 38},\n      {row: 15, col: 39},\n      {row: 15, col: 40},\n      {row: 15, col: 42},\n      {row: 15, col: 43},\n      {row: 15, col: 44},\n      {row: 15, col: 45},\n      {row: 15, col: 46},\n      {row: 15, col: 47},\n      {row: 15, col: 48},\n      {row: 15, col: 49},\n      {row: 15, col: 50},\n      {row: 15, col: 55},\n      {row: 15, col: 56},\n      {row: 15, col: 57},\n      {row: 15, col: 52},\n      {row: 15, col: 58},\n      {row: 15, col: 59},\n      {row: 15, col: 60},\n\n      {row: 16, col: 0},\n      {row: 16, col: 1},\n      {row: 16, col: 2},\n      {row: 16, col: 3},\n      //{row: 16, col: 4},\n      {row: 16, col: 5},\n      {row: 16, col: 6},\n      {row: 16, col: 7},\n      {row: 16, col: 8},\n      {row: 16, col: 9},\n      //{row: 16, col: 10},\n      {row: 16, col: 13},\n      {row: 16, col: 14},\n      {row: 16, col: 12},\n      {row: 16, col: 17},\n      {row: 16, col: 18},\n      {row: 16, col: 19},\n      {row: 16, col: 16},\n      {row: 16, col: 58},\n      {row: 16, col: 59},\n      {row: 16, col: 60},\n\n      {row: 17, col: 0},\n      {row: 17, col: 1},\n      {row: 17, col: 2},\n      {row: 17, col: 3},\n      //{row: 17, col: 4},\n      {row: 17, col: 5},\n      {row: 17, col: 6},\n      {row: 17, col: 7},\n      {row: 17, col: 8},\n      {row: 17, col: 9},\n      //{row: 17, col: 10},\n      {row: 17, col: 13},\n      {row: 17, col: 14},\n      {row: 17, col: 12},\n      {row: 17, col: 17},\n      {row: 17, col: 18},\n      {row: 17, col: 19},\n      {row: 17, col: 16},\n      {row: 17, col: 21},\n      {row: 17, col: 22},\n      {row: 17, col: 23},\n      {row: 17, col: 24},\n      {row: 17, col: 25},\n      {row: 17, col: 27},\n      {row: 17, col: 28},\n      {row: 17, col: 29},\n      {row: 17, col: 30},\n      //{row: 254 col: 31},\n      {row: 17, col: 32},\n      {row: 17, col: 33},\n      {row: 17, col: 34},\n      {row: 17, col: 35},\n      {row: 17, col: 36},\n      {row: 17, col: 38},\n      {row: 17, col: 39},\n      {row: 17, col: 40},\n      {row: 17, col: 42},\n      {row: 17, col: 43},\n      {row: 17, col: 44},\n      {row: 17, col: 45},\n      {row: 17, col: 46},\n      {row: 17, col: 47},\n      {row: 17, col: 48},\n      {row: 17, col: 49},\n      {row: 17, col: 50},\n      {row: 17, col: 52},\n      {row: 17, col: 53},\n      {row: 17, col: 54},\n      {row: 17, col: 55},\n      {row: 17, col: 56},\n      {row: 17, col: 57},\n      {row: 17, col: 58},\n      {row: 17, col: 59},\n      {row: 17, col: 60},\n\n      {row: 18, col: 0},\n      {row: 18, col: 1},\n      {row: 18, col: 2},\n      {row: 18, col: 3},\n      //{row: 18, col: 4},\n      {row: 18, col: 5},\n      {row: 18, col: 6},\n      {row: 18, col: 7},\n      {row: 18, col: 8},\n      {row: 18, col: 9},\n      //{row: 18, col: 10},\n      {row: 18, col: 13},\n      {row: 18, col: 14},\n      {row: 18, col: 12},\n      {row: 18, col: 17},\n      {row: 18, col: 18},\n      {row: 18, col: 19},\n      {row: 18, col: 16},\n      {row: 18, col: 21},\n      {row: 18, col: 22},\n      {row: 18, col: 23},\n      {row: 18, col: 24},\n      {row: 18, col: 25},\n      {row: 18, col: 27},\n      {row: 18, col: 28},\n      {row: 18, col: 29},\n      {row: 18, col: 30},\n      //{row: 254 col: 31},\n      {row: 18, col: 32},\n      {row: 18, col: 33},\n      {row: 18, col: 34},\n      {row: 18, col: 35},\n      {row: 18, col: 36},\n      {row: 18, col: 38},\n      {row: 18, col: 39},\n      {row: 18, col: 40},\n      {row: 18, col: 42},\n      {row: 18, col: 43},\n      {row: 18, col: 44},\n      {row: 18, col: 45},\n      {row: 18, col: 46},\n      {row: 18, col: 47},\n      {row: 18, col: 48},\n      {row: 18, col: 49},\n      {row: 18, col: 50},\n      {row: 18, col: 52},\n      {row: 18, col: 53},\n      {row: 18, col: 54},\n      {row: 18, col: 55},\n      {row: 18, col: 56},\n      {row: 18, col: 57},\n      {row: 18, col: 58},\n      {row: 18, col: 59},\n      {row: 18, col: 60},\n\n     \n      {row: 19, col: 27},\n      {row: 19, col: 28},\n      {row: 19, col: 29},\n      {row: 19, col: 30},\n      {row: 19, col: 32},\n      {row: 19, col: 33},\n      {row: 19, col: 34},\n      {row: 19, col: 35},\n      {row: 19, col: 36},\n      {row: 19, col: 38},\n      {row: 19, col: 39},\n      {row: 19, col: 40},\n      {row: 19, col: 42},\n      {row: 19, col: 43},\n      {row: 19, col: 44},\n      {row: 19, col: 45},\n      {row: 19, col: 46},\n      {row: 19, col: 47},\n      {row: 19, col: 48},\n      {row: 19, col: 49},\n      {row: 19, col: 50},\n      {row: 19, col: 52},\n      {row: 19, col: 53},\n      {row: 19, col: 54},\n      {row: 19, col: 55},\n      {row: 19, col: 56},\n      {row: 19, col: 57},\n      {row: 19, col: 58},\n      {row: 19, col: 59},\n      {row: 19, col: 60},\n    \n\n      {row: 20, col: 0},\n      {row: 20, col: 1},\n      {row: 20, col: 2},\n      {row: 20, col: 3},\n      //{row: 20, col: 4},\n      //{row: 20, col: 5},\n      {row: 20, col: 6},\n      {row: 20, col: 7},\n      {row: 20, col: 8},\n      {row: 20, col: 9},\n      //{row: 20, col: 10},\n      {row: 20, col: 13},\n      {row: 20, col: 14},\n      {row: 20, col: 12},\n      {row: 20, col: 18},\n      {row: 20, col: 19},\n      {row: 20, col: 16},\n      {row: 20, col: 17},\n      {row: 20, col: 21},\n      {row: 20, col: 22},\n      {row: 20, col: 23},\n      {row: 20, col: 24},\n      {row: 20, col: 25},\n      {row: 20, col: 58},\n      {row: 20, col: 59},\n      {row: 20, col: 60},\n\n      {row: 21, col: 0},\n      {row: 21, col: 1},\n      {row: 21, col: 2},\n      {row: 21, col: 3},\n      {row: 21, col: 4},\n      //{row: 21, col: 5},\n      {row: 21, col: 6},\n      {row: 21, col: 7},\n      {row: 21, col: 8},\n      {row: 21, col: 9},\n      //{row: 21, col: 10},\n      {row: 21, col: 13},\n      {row: 21, col: 14},\n      {row: 21, col: 12},\n      {row: 21, col: 18},\n      {row: 21, col: 19},\n      {row: 21, col: 16},\n      {row: 21, col: 17},\n      {row: 21, col: 21},\n      {row: 21, col: 22},\n      {row: 21, col: 23},\n      {row: 21, col: 24},\n      {row: 21, col: 25},\n      {row: 21, col: 27},\n      {row: 21, col: 28},\n      {row: 21, col: 29},\n      {row: 21, col: 30},\n      //{row: 254 col: 31},\n      {row: 21, col: 32},\n      {row: 21, col: 33},\n      {row: 21, col: 34},\n      {row: 21, col: 35},\n      {row: 21, col: 36},\n      {row: 21, col: 38},\n      {row: 21, col: 39},\n      {row: 21, col: 40},\n      {row: 21, col: 42},\n      {row: 21, col: 43},\n      {row: 21, col: 44},\n      {row: 21, col: 45},\n      {row: 21, col: 46},\n      {row: 21, col: 47},\n      {row: 21, col: 48},\n      {row: 21, col: 49},\n      {row: 21, col: 50},\n      {row: 21, col: 52},\n      {row: 21, col: 53},\n      {row: 21, col: 54},\n      {row: 21, col: 55},\n      {row: 21, col: 56},\n      {row: 21, col: 57},\n      {row: 21, col: 19},\n      {row: 21, col: 58},\n      {row: 21, col: 59},\n      {row: 21, col: 60},\n\n      {row: 22, col: 0},\n      {row: 22, col: 1},\n      {row: 22, col: 2},\n      {row: 22, col: 3},\n      {row: 22, col: 4},\n      //{row: 22, col: 5},\n      //{row: 22, col: 6},\n      {row: 22, col: 7},\n      {row: 22, col: 8},\n      {row: 22, col: 9},\n      //{row: 22, col: 10},\n      {row: 22, col: 13},\n      {row: 22, col: 14},\n      {row: 22, col: 12},\n      {row: 22, col: 18},\n      {row: 22, col: 19},\n      {row: 22, col: 16},\n      {row: 22, col: 17},\n      {row: 22, col: 21},\n      {row: 22, col: 22},\n      {row: 22, col: 23},\n      {row: 22, col: 24},\n      {row: 22, col: 25},\n      {row: 22, col: 27},\n      {row: 22, col: 28},\n      {row: 22, col: 29},\n      {row: 22, col: 30},\n      //{row: 254 col: 31},\n      {row: 22, col: 32},\n      {row: 22, col: 33},\n      {row: 22, col: 34},\n      {row: 22, col: 35},\n      {row: 22, col: 36},\n      {row: 22, col: 38},\n      {row: 22, col: 39},\n      {row: 22, col: 40},\n      {row: 22, col: 42},\n      {row: 22, col: 43},\n      {row: 22, col: 44},\n      {row: 22, col: 45},\n      {row: 22, col: 46},\n      {row: 22, col: 47},\n      {row: 22, col: 48},\n      {row: 22, col: 49},\n      {row: 22, col: 50},\n      {row: 22, col: 52},\n      {row: 22, col: 53},\n      {row: 22, col: 54},\n      {row: 22, col: 55},\n      {row: 22, col: 56},\n      {row: 22, col: 57},\n      {row: 22, col: 19},\n      {row: 22, col: 58},\n      {row: 22, col: 59},\n      {row: 22, col: 60},\n\n      {row: 23, col: 0},\n      {row: 23, col: 1},\n      {row: 23, col: 2},\n      {row: 23, col: 3},\n      {row: 23, col: 4},\n      {row: 23, col: 21},\n      {row: 23, col: 22},\n      {row: 23, col: 23},\n      {row: 23, col: 24},\n      {row: 23, col: 25},\n      {row: 23, col: 58},\n      {row: 23, col: 59},\n      {row: 23, col: 60},\n      \n\n      {row: 24, col: 0},\n      {row: 24, col: 1},\n      {row: 24, col: 2},\n      {row: 24, col: 3},\n      {row: 24, col: 4},\n      {row: 24, col: 5},\n      {row: 24, col: 6},\n      {row: 24, col: 13},\n      {row: 24, col: 14},\n      {row: 24, col: 12},\n      {row: 24, col: 17},\n      {row: 24, col: 18},\n      {row: 24, col: 19},\n      {row: 24, col: 16},\n      {row: 24, col: 21},\n      {row: 24, col: 22},\n      {row: 24, col: 23},\n      {row: 24, col: 24},\n      {row: 24, col: 25},\n      {row: 24, col: 27},\n      {row: 24, col: 28},\n      {row: 24, col: 29},\n      {row: 24, col: 30},\n      //{row: 254 col: 31},\n      {row: 24, col: 32},\n      {row: 24, col: 33},\n      {row: 24, col: 34},\n      {row: 24, col: 35},\n      {row: 24, col: 36},\n      {row: 24, col: 38},\n      {row: 24, col: 39},\n      {row: 24, col: 40},\n      {row: 24, col: 42},\n      {row: 24, col: 43},\n      {row: 24, col: 44},\n      {row: 24, col: 45},\n      {row: 24, col: 46},\n      {row: 24, col: 47},\n      {row: 24, col: 48},\n      {row: 24, col: 49},\n      {row: 24, col: 50},\n      {row: 24, col: 52},\n      {row: 24, col: 53},\n      {row: 24, col: 54},\n      {row: 24, col: 55},\n      {row: 24, col: 56},\n      {row: 24, col: 57},\n      {row: 24, col: 19},\n      {row: 24, col: 58},\n      {row: 24, col: 59},\n      {row: 24, col: 60},\n\n      {row: 25, col: 0},\n      {row: 25, col: 1},\n      {row: 25, col: 2},\n      {row: 25, col: 3},\n      {row: 25, col: 4},\n      {row: 25, col: 5},\n      {row: 25, col: 6},\n      {row: 25, col: 13},\n      {row: 25, col: 14},\n      {row: 25, col: 12},\n      {row: 25, col: 17},\n      {row: 25, col: 18},\n      {row: 25, col: 19},\n      {row: 25, col: 16},\n      {row: 25, col: 21},\n      {row: 25, col: 22},\n      {row: 25, col: 23},\n      {row: 25, col: 24},\n      {row: 25, col: 25},\n      {row: 25, col: 27},\n      {row: 25, col: 28},\n      {row: 25, col: 29},\n      {row: 25, col: 30},\n      //{row: 25, col: 31},\n      {row: 25, col: 32},\n      {row: 25, col: 33},\n      {row: 25, col: 34},\n      {row: 25, col: 35},\n      {row: 25, col: 36},\n      {row: 25, col: 38},\n      {row: 25, col: 39},\n      {row: 25, col: 40},\n      {row: 25, col: 42},\n      {row: 25, col: 43},\n      {row: 25, col: 44},\n      {row: 25, col: 45},\n      {row: 25, col: 46},\n      {row: 25, col: 47},\n      {row: 25, col: 48},\n      {row: 25, col: 49},\n      {row: 25, col: 50},\n      {row: 25, col: 52},\n      {row: 25, col: 53},\n      {row: 25, col: 54},\n      {row: 25, col: 55},\n      {row: 25, col: 56},\n      {row: 25, col: 57},\n      {row: 25, col: 19},\n      {row: 25, col: 58},\n      {row: 25, col: 59},\n      {row: 25, col: 60},\n      \n\n\n      {row: 26, col: 0},\n      {row: 26, col: 1},\n      {row: 26, col: 2},\n      {row: 26, col: 3},\n      {row: 26, col: 4},\n      {row: 26, col: 5},\n      {row: 26, col: 6},\n      {row: 26, col: 7},\n      {row: 26, col: 8},\n      {row: 26, col: 9},\n      {row: 26, col: 10},\n      {row: 26, col: 11},\n      {row: 26, col: 58},\n      {row: 26, col: 59},\n      {row: 26, col: 60},\n      {row: 26, col: 13},\n      {row: 26, col: 14},\n      {row: 26, col: 15},\n      {row: 26, col: 12},\n      {row: 26, col: 17},\n      {row: 26, col: 18},\n      {row: 26, col: 19},\n      {row: 26, col: 20},\n      {row: 26, col: 16},\n      {row: 26, col: 21},\n      {row: 26, col: 22},\n      {row: 26, col: 23},\n      {row: 26, col: 24},\n      {row: 26, col: 25},\n      {row: 26, col: 26},\n      {row: 26, col: 27},\n      {row: 26, col: 28},\n      {row: 26, col: 29},\n      {row: 26, col: 30},\n      {row: 26, col: 31},\n      {row: 26, col: 32},\n      {row: 26, col: 33},\n      {row: 26, col: 34},\n      {row: 26, col: 35},\n      {row: 26, col: 36},\n      {row: 26, col: 37},\n      {row: 26, col: 38},\n      {row: 26, col: 39},\n      {row: 26, col: 40},\n      {row: 26, col: 41},\n      {row: 26, col: 42},\n      {row: 26, col: 43},\n      {row: 26, col: 44},\n      {row: 26, col: 45},\n      {row: 26, col: 46},\n      {row: 26, col: 47},\n      {row: 26, col: 48},\n      {row: 26, col: 49},\n      {row: 26, col: 50},\n      {row: 26, col: 51},\n      {row: 26, col: 52},\n      {row: 26, col: 53},\n      {row: 26, col: 54},\n      {row: 26, col: 55},\n      {row: 26, col: 56},\n      {row: 26, col: 57},\n      {row: 26, col: 19},\n     \n\n      {row: 27, col: 0},\n      {row: 27, col: 1},\n      {row: 27, col: 2},\n      {row: 27, col: 3},\n      {row: 27, col: 4},\n      {row: 27, col: 5},\n      {row: 27, col: 6},\n      {row: 27, col: 7},\n      {row: 27, col: 8},\n      {row: 27, col: 9},\n      {row: 27, col: 10},\n      {row: 27, col: 11},\n      {row: 27, col: 58},\n      {row: 27, col: 59},\n      {row: 27, col: 60},\n      {row: 27, col: 13},\n      {row: 27, col: 14},\n      {row: 27, col: 15},\n      {row: 27, col: 12},\n      {row: 27, col: 17},\n      {row: 27, col: 18},\n      {row: 27, col: 19},\n      {row: 27, col: 20},\n      {row: 27, col: 16},\n      {row: 27, col: 21},\n      {row: 27, col: 22},\n      {row: 27, col: 23},\n      {row: 27, col: 24},\n      {row: 27, col: 25},\n      {row: 27, col: 26},\n      {row: 27, col: 27},\n      {row: 27, col: 28},\n      {row: 27, col: 29},\n      {row: 27, col: 30},\n      {row: 27, col: 31},\n      {row: 27, col: 32},\n      {row: 27, col: 33},\n      {row: 27, col: 34},\n      {row: 27, col: 35},\n      {row: 27, col: 36},\n      {row: 27, col: 37},\n      {row: 27, col: 38},\n      {row: 27, col: 39},\n      {row: 27, col: 40},\n      {row: 27, col: 41},\n      {row: 27, col: 42},\n      {row: 27, col: 43},\n      {row: 27, col: 44},\n      {row: 27, col: 45},\n      {row: 27, col: 46},\n      {row: 27, col: 47},\n      {row: 27, col: 48},\n      {row: 27, col: 49},\n      {row: 27, col: 50},\n      {row: 27, col: 51},\n      {row: 27, col: 52},\n      {row: 27, col: 53},\n      {row: 27, col: 54},\n      {row: 27, col: 55},\n      {row: 27, col: 56},\n      {row: 27, col: 57},\n      {row: 27, col: 19},\n      \n\n    ];\n\n    for (const wall of walls) {\n      initialGrid[wall.row][wall.col].isWall = true;\n    }\n\n    return initialGrid;\n  };\n\n  createNode = (row, col) => {\n    return {\n      row,\n      col,\n      isStart:\n        row === this.state.START_NODE_ROW && col === this.state.START_NODE_COL,\n      isFinish:\n        row === this.state.FINISH_NODE_ROW &&\n        col === this.state.FINISH_NODE_COL,\n      distance: Infinity,\n      distanceToFinishNode:\n        Math.abs(this.state.FINISH_NODE_ROW - row) +\n        Math.abs(this.state.FINISH_NODE_COL - col),\n      isVisited: false,\n      isWall: false,\n      previousNode: null,\n      isNode: true,\n    };\n  };\n\n\n  // /******************** Set up the initial grid ********************/\n  // getInitialGrid = (\n  //   rowCount = this.state.ROW_COUNT,\n  //   colCount = this.state.COLUMN_COUNT,\n  // ) => {\n  //   const initialGrid = [];\n  //   for (let row = 0; row < rowCount; row++) {\n  //     const currentRow = [];\n  //     for (let col = 0; col < colCount; col++) {\n  //       currentRow.push(this.createNode(row, col));\n  //     }\n  //     initialGrid.push(currentRow);\n  //   }\n  //   return initialGrid;\n  // };\n\n  // createNode = (row, col) => {\n  //   return {\n  //     row,\n  //     col,\n  //     isStart:\n  //       row === this.state.START_NODE_ROW && col === this.state.START_NODE_COL,\n  //     isFinish:\n  //       row === this.state.FINISH_NODE_ROW &&\n  //       col === this.state.FINISH_NODE_COL,\n  //     distance: Infinity,\n  //     distanceToFinishNode:\n  //       Math.abs(this.state.FINISH_NODE_ROW - row) +\n  //       Math.abs(this.state.FINISH_NODE_COL - col),\n  //     isVisited: false,\n  //     isWall: false,\n  //     previousNode: null,\n  //     isNode: true,\n  //   };\n  // };\n\n  \n\n  /******************** Control mouse events ********************/\n  handleMouseDown(row, col) {\n    if (!this.state.isRunning) {\n      if (this.isGridClear()) {\n        if (\n          document.getElementById(`node-${row}-${col}`).className ===\n          'node node-start'\n        ) {\n          this.setState({\n            mouseIsPressed: true,\n            isStartNode: true,\n            currRow: row,\n            currCol: col,\n          });\n        } else if (\n          document.getElementById(`node-${row}-${col}`).className ===\n          'node node-finish'\n        ) {\n          this.setState({\n            mouseIsPressed: true,\n            isFinishNode: true,\n            currRow: row,\n            currCol: col,\n          });\n        }\n      } else {\n        this.clearGrid();\n      }\n    }\n  }\n\n  isGridClear() {\n    for (const row of this.state.grid) {\n      for (const node of row) {\n        const nodeClassName = document.getElementById(\n          `node-${node.row}-${node.col}`,\n        ).className;\n        if (\n          nodeClassName === 'node node-visited' ||\n          nodeClassName === 'node node-shortest-path'\n        ) {\n          return false;\n        }\n      }\n    }\n    return true;\n  }\n\n  handleMouseEnter(row, col) {\n    if (!this.state.isRunning && this.state.mouseIsPressed) {\n      const nodeClassName = document.getElementById(`node-${row}-${col}`)\n        .className;\n      if (this.state.isStartNode) {\n        if (nodeClassName !== 'node node-wall') {\n          const prevStartNode = this.state.grid[this.state.currRow][\n            this.state.currCol\n          ];\n          prevStartNode.isStart = false;\n          document.getElementById(\n            `node-${this.state.currRow}-${this.state.currCol}`,\n          ).className = 'node';\n\n          this.setState({currRow: row, currCol: col});\n          const currStartNode = this.state.grid[row][col];\n          currStartNode.isStart = true;\n          document.getElementById(`node-${row}-${col}`).className =\n            'node node-start';\n        }\n        this.setState({START_NODE_ROW: row, START_NODE_COL: col});\n      } else if (this.state.isFinishNode) {\n        if (nodeClassName !== 'node node-wall') {\n          const prevFinishNode = this.state.grid[this.state.currRow][\n            this.state.currCol\n          ];\n          prevFinishNode.isFinish = false;\n          document.getElementById(\n            `node-${this.state.currRow}-${this.state.currCol}`,\n          ).className = 'node';\n\n          this.setState({currRow: row, currCol: col});\n          const currFinishNode = this.state.grid[row][col];\n          currFinishNode.isFinish = true;\n          document.getElementById(`node-${row}-${col}`).className =\n            'node node-finish';\n        }\n        this.setState({FINISH_NODE_ROW: row, FINISH_NODE_COL: col});\n      }\n    }\n  }\n\n  handleMouseUp(row, col) {\n    if (!this.state.isRunning) {\n      this.setState({mouseIsPressed: false});\n      if (this.state.isStartNode) {\n        const isStartNode = !this.state.isStartNode;\n        this.setState({isStartNode, START_NODE_ROW: row, START_NODE_COL: col});\n      } else if (this.state.isFinishNode) {\n        const isFinishNode = !this.state.isFinishNode;\n        this.setState({\n          isFinishNode,\n          FINISH_NODE_ROW: row,\n          FINISH_NODE_COL: col,\n        });\n      }\n      this.getInitialGrid();\n    }\n  }\n\n  handleMouseLeave() {\n    if (this.state.isStartNode) {\n      const isStartNode = !this.state.isStartNode;\n      this.setState({isStartNode, mouseIsPressed: false});\n    } else if (this.state.isFinishNode) {\n      const isFinishNode = !this.state.isFinishNode;\n      this.setState({isFinishNode, mouseIsPressed: false});\n    }\n  }\n\n\n  /******************** Clear the board, walls, or path ********************/\n  clearGrid() {\n    if (!this.state.isRunning) {\n      const newGrid = this.state.grid.slice();\n      for (const row of newGrid) {\n        for (const node of row) {\n          const nodeClassName = document.getElementById(\n            `node-${node.row}-${node.col}`,\n          ).className;\n          if (\n            nodeClassName !== 'node node-start' &&\n            nodeClassName !== 'node node-finish' &&\n            nodeClassName !== 'node node-wall'\n          ) {\n            document.getElementById(`node-${node.row}-${node.col}`).className =\n              'node';\n            node.isVisited = false;\n            node.distance = Infinity;\n            node.distanceToFinishNode =\n              Math.abs(this.state.FINISH_NODE_ROW - node.row) +\n              Math.abs(this.state.FINISH_NODE_COL - node.col);\n          }\n          if (nodeClassName === 'node node-finish') {\n            node.isVisited = false;\n            node.distance = Infinity;\n            node.distanceToFinishNode = 0;\n          }\n          if (nodeClassName === 'node node-start') {\n            node.isVisited = false;\n            node.distance = Infinity;\n            node.distanceToFinishNode =\n              Math.abs(this.state.FINISH_NODE_ROW - node.row) +\n              Math.abs(this.state.FINISH_NODE_COL - node.col);\n            node.isStart = true;\n            node.isWall = false;\n            node.previousNode = null;\n            node.isNode = true;\n          }\n        }\n      }\n      this.setState({grid: newGrid});\n    }\n  }\n\n  // clearWalls() {\n  //   if (!this.state.isRunning) {\n  //     const newGrid = this.state.grid.slice();\n  //     for (const row of newGrid) {\n  //       for (const node of row) {\n  //         if (node.isWall) {\n  //           document.getElementById(`node-${node.row}-${node.col}`).className =\n  //             'node';\n  //           node.isWall = false;\n  //         }\n  //       }\n  //     }\n  //     this.setState({grid: newGrid});\n  //   }\n  // }\n\n  /******************** Visualize the algorithms ********************/\n  visualize(algo) {\n    if (!this.state.isRunning) {\n      this.clearGrid();\n      this.toggleIsRunning();\n      const {grid} = this.state;\n      const startNode =\n        grid[this.state.START_NODE_ROW][this.state.START_NODE_COL];\n      const finishNode =\n        grid[this.state.FINISH_NODE_ROW][this.state.FINISH_NODE_COL];\n      let visitedNodesInOrder;\n      switch (algo) {\n        case 'Dijkstra':\n          visitedNodesInOrder = dijkstra(grid, startNode, finishNode);\n          break;\n        case 'AStar':\n          visitedNodesInOrder = AStar(grid, startNode, finishNode);\n          break;\n        case 'DFS':\n          visitedNodesInOrder = dfs(grid, startNode, finishNode);\n          break;\n        case 'BFS':\n          visitedNodesInOrder = bfs(grid, startNode, finishNode);\n          break;\n        case 'BellmanFord': // Add Bellman-Ford case\n          visitedNodesInOrder = bellmanFord(grid, startNode, finishNode);\n          break;\n        default:\n          visitedNodesInOrder = dijkstra(grid, startNode, finishNode);\n          break;\n      }\n      const nodesInShortestPathOrder = this.getNodesInShortestPathOrder(\n        finishNode,\n      );\n      this.animateAlgorithm(visitedNodesInOrder, nodesInShortestPathOrder);\n    }\n  }\n\n  animateAlgorithm(visitedNodesInOrder, nodesInShortestPathOrder) {\n    for (let i = 0; i <= visitedNodesInOrder.length; i++) {\n      if (i === visitedNodesInOrder.length) {\n        setTimeout(() => {\n          this.animateShortestPath(nodesInShortestPathOrder);\n        }, 10 * i);\n        return;\n      }\n      setTimeout(() => {\n        const node = visitedNodesInOrder[i];\n        if (\n          !(\n            document.getElementById(`node-${node.row}-${node.col}`).className ===\n              'node node-start' ||\n            document.getElementById(`node-${node.row}-${node.col}`).className ===\n              'node node-finish'\n          )\n        ) {\n          document.getElementById(`node-${node.row}-${node.col}`).className =\n            'node node-visited';\n        }\n      }, 10 * i);\n    }\n  }\n\n  animateShortestPath(nodesInShortestPathOrder) {\n    for (let i = 0; i < nodesInShortestPathOrder.length; i++) {\n      setTimeout(() => {\n        const node = nodesInShortestPathOrder[i];\n        if (\n          !(\n            document.getElementById(`node-${node.row}-${node.col}`).className ===\n              'node node-start' ||\n            document.getElementById(`node-${node.row}-${node.col}`).className ===\n              'node node-finish'\n          )\n        ) {\n          document.getElementById(`node-${node.row}-${node.col}`).className =\n            'node node-shortest-path';\n        }\n      }, 50 * i);\n    }\n    this.toggleIsRunning();\n  }\n\n  /******************** Get the nodes in the shortest path order ********************/\n  getNodesInShortestPathOrder(finishNode) {\n    const nodesInShortestPathOrder = [];\n    let currentNode = finishNode;\n    while (currentNode !== null) {\n      nodesInShortestPathOrder.unshift(currentNode);\n      currentNode = currentNode.previousNode;\n    }\n    return nodesInShortestPathOrder;\n  }\n\n  render() {\n    const {grid, mouseIsPressed} = this.state;\n\n    return (\n      <div className=\"full-visualizer\">\n        <div className=\"navbar\">\n          <div className=\"navbar-brand bg-slate-600 text-white font-bold py-3\">\n            Pathfinding Visualizer\n          </div>\n          <div className=\"algorithm-buttons\">\n            <button className=\"bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded-full\" onClick={() => this.visualize('Dijkstra')}>Dijkstra</button>\n            <button className=\"bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded-full\"  onClick={() => this.visualize('AStar')}>A*</button>\n            <button className=\"bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded-full\"   onClick={() => this.visualize('DFS')}>DFS</button>\n            <button className=\"bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded-full\"   onClick={() => this.visualize('BFS')}>BFS</button>\n            <button  className=\"bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded-full\"  onClick={() => this.visualize('BellmanFord')}>Bellman-Ford</button> {/* Add Bellman-Ford button */}\n          </div>\n          <div className=\"control-buttons\">\n            <button className=\"bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded-full\"  onClick={() => this.clearGrid()}>Clear Grid</button>\n            {/* <button className=\"bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded-full\"  onClick={() => this.clearWalls()}>Clear Walls</button> */}\n          </div>\n        </div>\n        <div className='line'>\n        <div className=\"grid\">\n          {grid.map((row, rowIdx) => {\n            return (\n              <div key={rowIdx} className=\"row\">\n                {row.map((node, nodeIdx) => {\n                  const {row, col, isFinish, isStart, isWall} = node;\n                  return (\n                    <Node\n                      key={nodeIdx}\n                      col={col}\n                      isFinish={isFinish}\n                      isStart={isStart}\n                      isWall={isWall}\n                      mouseIsPressed={mouseIsPressed}\n                      onMouseDown={(row, col) =>\n                        this.handleMouseDown(row, col)\n                      }\n                      onMouseEnter={(row, col) =>\n                        this.handleMouseEnter(row, col)\n                      }\n                      onMouseUp={() => this.handleMouseUp(row, col)}\n                      row={row}></Node>\n                  );\n                })}\n              </div>\n            );\n          })}\n        </div>\n       \n      </div>\n      </div>\n    );\n  }\n}\n\nconst getNewGridWithWallToggled = (grid, row, col) => {\n  const newGrid = grid.slice();\n  const node = newGrid[row][col];\n  const newNode = {\n    ...node,\n    isWall: !node.isWall,\n  };\n  newGrid[row][col] = newNode;\n  return newGrid;\n};\n\n// Backtracks from the finishNode to find the shortest path.\n// Only works when called after the pathfinding methods.\nfunction getNodesInShortestPathOrder(finishNode) {\n  const nodesInShortestPathOrder = [];\n  let currentNode = finishNode;\n  while (currentNode !== null) {\n    nodesInShortestPathOrder.unshift(currentNode);\n    currentNode = currentNode.previousNode;\n  }\n  return nodesInShortestPathOrder;\n}"],"mappings":"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AAE;MAAE,CAAC,EACjB;QAACF,GAAG,EAAE,CAAC;QAAEE,GAAG,EAAE;MAAE,CAAC,EACjB;QAACF,GAAG,EAAE,CAAC;QAAEE,GAAG,EAAE;MAAE,CAAC,EACjB;QAACF,GAAG,EAAE,CAAC;QAAEE,GAAG,EAAE;MAAE,CAAC,EACjB;QAACF,GAAG,EAAE,CAAC;QAAEE,GAAG,EAAE;MAAE,CAAC,EACjB;QAACF,GAAG,EAAE,CAAC;QAAEE,GAAG,EAAE;MAAE,CAAC,EACjB;QAACF,GAAG,EAAE,CAAC;QAAEE,GAAG,EAAE;MAAE,CAAC,EACjB;QAACF,GAAG,EAAE,CAAC;QAAEE,GAAG,EAAE;MAAE,CAAC,EACjB;QAACF,GAAG,EAAE,CAAC;QAAEE,GAAG,EAAE;MAAE,CAAC,EACjB;QAACF,GAAG,EAAE,CAAC;QAAEE,GAAG,EAAE;MAAE,CAAC,EACjB;QAACF,GAAG,EAAE,CAAC;QAAEE,GAAG,EAAE;MAAE,CAAC,EACjB;QAACF,GAAG,EAAE,CAAC;QAAEE,GAAG,EAAE;MAAE,CAAC,EACjB;QAACF,GAAG,EAAE,CAAC;QAAEE,GAAG,EAAE;MAAE,CAAC;MACjB;MACA;QAACF,GAAG,EAAE,CAAC;QAAEE,GAAG,EAAE;MAAE,CAAC,EACjB;QAACF,GAAG,EAAE,CAAC;QAAEE,GAAG,EAAE;MAAE,CAAC;MACjB;MACA;QAACF,GAAG,EAAE,CAAC;QAAEE,GAAG,EAAE;MAAE,CAAC,EACjB;QAACF,GAAG,EAAE,CAAC;QAAEE,GAAG,EAAE;MAAE,CAAC,EACjB;QAACF,GAAG,EAAE,CAAC;QAAEE,GAAG,EAAE;MAAE,CAAC;MACjB;MACA;QAACF,GAAG,EAAE,CAAC;QAAEE,GAAG,EAAE;MAAE,CAAC,EACjB;QAACF,GAAG,EAAE,CAAC;QAAEE,GAAG,EAAE;MAAE,CAAC,EACjB;QAACF,GAAG,EAAE,CAAC;QAAEE,GAAG,EAAE;MAAE,CAAC,EACjB;QAACF,GAAG,EAAE,CAAC;QAAEE,GAAG,EAAE;MAAE,CAAC,EACjB;QAACF,GAAG,EAAE,CAAC;QAAEE,GAAG,EAAE;MAAE,CAAC,EACjB;QAACF,GAAG,EAAE,CAAC;QAAEE,GAAG,EAAE;MAAE,CAAC,EACjB;QAACF,GAAG,EAAE,CAAC;QAAEE,GAAG,EAAE;MAAE,CAAC,EACjB;QAACF,GAAG,EAAE,CAAC;QAAEE,GAAG,EAAE;MAAE,CAAC,EACjB;QAACF,GAAG,EAAE,CAAC;QAAEE,GAAG,EAAE;MAAE,CAAC,EACjB;QAACF,GAAG,EAAE,CAAC;QAAEE,GAAG,EAAE;MAAE,CAAC,EACjB;QAACF,GAAG,EAAE,CAAC;QAAEE,GAAG,EAAE;MAAE,CAAC,EACjB;QAACF,GAAG,EAAE,CAAC;QAAEE,GAAG,EAAE;MAAE,CAAC,EACjB;QAACF,GAAG,EAAE,CAAC;QAAEE,GAAG,EAAE;MAAE,CAAC,EACjB;QAACF,GAAG,EAAE,CAAC;QAAEE,GAAG,EAAE;MAAE,CAAC,EAGjB;QAACF,GAAG,EAAE,CAAC;QAAEE,GAAG,EAAE;MAAC,CAAC,EAChB;QAACF,GAAG,EAAE,CAAC;QAAEE,GAAG,EAAE;MAAC,CAAC,EAChB;QAACF,GAAG,EAAE,CAAC;QAAEE,GAAG,EAAE;MAAC,CAAC;MAChB;MACA;MACA;MACA;QAACF,GAAG,EAAE,CAAC;QAAEE,GAAG,EAAE;MAAC,CAAC,EAChB;QAACF,GAAG,EAAE,CAAC;QAAEE,GAAG,EAAE;MAAC,CAAC,EAChB;QAACF,GAAG,EAAE,CAAC;QAAEE,GAAG,EAAE;MAAC,CAAC,EAChB;QAACF,GAAG,EAAE,CAAC;QAAEE,GAAG,EAAE;MAAC,CAAC,EAChB;QAACF,GAAG,EAAE,CAAC;QAAEE,GAAG,EAAE;MAAE,CAAC,EACjB;QAACF,GAAG,EAAE,CAAC;QAAEE,GAAG,EAAE;MAAE,CAAC,EACjB;QAACF,GAAG,EAAE,CAAC;QAAEE,GAAG,EAAE;MAAE,CAAC,EACjB;QAACF,GAAG,EAAE,CAAC;QAAEE,GAAG,EAAE;MAAE,CAAC,EACjB;QAACF,GAAG,EAAE,CAAC;QAAEE,GAAG,EAAE;MAAE,CAAC,EACjB;QAACF,GAAG,EAAE,CAAC;QAAEE,GAAG,EAAE;MAAE,CAAC,EACjB;QAACF,GAAG,EAAE,CAAC;QAAEE,GAAG,EAAE;MAAE,CAAC,EACjB;QAACF,GAAG,EAAE,CAAC;QAAEE,GAAG,EAAE;MAAE,CAAC,EACjB;QAACF,GAAG,EAAE,CAAC;QAAEE,GAAG,EAAE;MAAE,CAAC,EACjB;QAACF,GAAG,EAAE,CAAC;QAAEE,GAAG,EAAE;MAAE,CAAC,EACjB;QAACF,GAAG,EAAE,CAAC;QAAEE,GAAG,EAAE;MAAE,CAAC,EACjB;QAACF,GAAG,EAAE,CAAC;QAAEE,GAAG,EAAE;MAAE,CAAC,EACjB;QAACF,GAAG,EAAE,CAAC;QAAEE,GAAG,EAAE;MAAE,CAAC,EACjB;QAACF,GAAG,EAAE,CAAC;QAAEE,GAAG,EAAE;MAAE,CAAC,EACjB;QAACF,GAAG,EAAE,CAAC;QAAEE,GAAG,EAAE;MAAE,CAAC,EACjB;QAACF,GAAG,EAAE,CAAC;QAAEE,GAAG,EAAE;MAAE,CAAC,EACjB;QAACF,GAAG,EAAE,CAAC;QAAEE,GAAG,EAAE;MAAE,CAAC,EACjB;QAACF,GAAG,EAAE,CAAC;QAAEE,GAAG,EAAE;MAAE,CAAC,EACjB;QAACF,GAAG,EAAE,CAAC;QAAEE,GAAG,EAAE;MAAE,CAAC;MACjB;MACA;QAACF,GAAG,EAAE,CAAC;QAAEE,GAAG,EAAE;MAAE,CAAC,EACjB;QAACF,GAAG,EAAE,CAAC;QAAEE,GAAG,EAAE;MAAE,CAAC,EACjB;QAACF,GAAG,EAAE,CAAC;QAAEE,GAAG,EAAE;MAAE,CAAC,EACjB;QAACF,GAAG,EAAE,CAAC;QAAEE,GAAG,EAAE;MAAE,CAAC,EACjB;QAACF,GAAG,EAAE,CAAC;QAAEE,GAAG,EAAE;MAAE,CAAC,EACjB;QAACF,GAAG,EAAE,CAAC;QAAEE,GAAG,EAAE;MAAE,CAAC,EACjB;QAACF,GAAG,EAAE,CAAC;QAAEE,GAAG,EAAE;MAAE,CAAC,EACjB;QAACF,GAAG,EAAE,CAAC;QAAEE,GAAG,EAAE;MAAE,CAAC,EACjB;QAACF,GAAG,EAAE,CAAC;QAAEE,GAAG,EAAE;MAAE,CAAC,EACjB;QAACF,GAAG,EAAE,CAAC;QAAEE,GAAG,EAAE;MAAE,CAAC,EACjB;QAACF,GAAG,EAAE,CAAC;QAAEE,GAAG,EAAE;MAAE,CAAC,EACjB;QAACF,GAAG,EAAE,CAAC;QAAEE,GAAG,EAAE;MAAE,CAAC,EACjB;QAACF,GAAG,EAAE,CAAC;QAAEE,GAAG,EAAE;MAAE,CAAC,EACjB;QAACF,GAAG,EAAE,CAAC;QAAEE,GAAG,EAAE;MAAE,CAAC,EACjB;QAACF,GAAG,EAAE,CAAC;QAAEE,GAAG,EAAE;MAAE,CAAC,EACjB;QAACF,GAAG,EAAE,CAAC;QAAEE,GAAG,EAAE;MAAE,CAAC,EACjB;QAACF,GAAG,EAAE,CAAC;QAAEE,GAAG,EAAE;MAAE,CAAC,EACjB;QAACF,GAAG,EAAE,CAAC;QAAEE,GAAG,EAAE;MAAE,CAAC,EACjB;QAACF,GAAG,EAAE,CAAC;QAAEE,GAAG,EAAE;MAAE,CAAC,EACjB;QAACF,GAAG,EAAE,CAAC;QAAEE,GAAG,EAAE;MAAE,CAAC,EAMjB;QAACF,GAAG,EAAE,CAAC;QAAEE,GAAG,EAAE;MAAC,CAAC,EAChB;QAACF,GAAG,EAAE,CAAC;QAAEE,GAAG,EAAE;MAAC,CAAC,EAChB;QAACF,GAAG,EAAE,CAAC;QAAEE,GAAG,EAAE;MAAC,CAAC,EAChB;QAACF,GAAG,EAAE,CAAC;QAAEE,GAAG,EAAE;MAAE,CAAC,EACjB;QAACF,GAAG,EAAE,CAAC;QAAEE,GAAG,EAAE;MAAE,CAAC,EACjB;QAACF,GAAG,EAAE,CAAC;QAAEE,GAAG,EAAE;MAAE,CAAC;MAGjB;MACA;MACA;MACA;QAACF,GAAG,EAAE,CAAC;QAAEE,GAAG,EAAE;MAAC,CAAC,EAChB;QAACF,GAAG,EAAE,CAAC;QAAEE,GAAG,EAAE;MAAC,CAAC;MAChB;MACA;QAACF,GAAG,EAAE,CAAC;QAAEE,GAAG,EAAE;MAAC,CAAC,EAChB;QAACF,GAAG,EAAE,CAAC;QAAEE,GAAG,EAAE;MAAC,CAAC,EAChB;QAACF,GAAG,EAAE,CAAC;QAAEE,GAAG,EAAE;MAAC,CAAC,EAChB;QAACF,GAAG,EAAE,CAAC;QAAEE,GAAG,EAAE;MAAC,CAAC,EAChB;QAACF,GAAG,EAAE,CAAC;QAAEE,GAAG,EAAE;MAAE,CAAC,EACjB;QAACF,GAAG,EAAE,CAAC;QAAEE,GAAG,EAAE;MAAE,CAAC,EACjB;QAACF,GAAG,EAAE,CAAC;QAAEE,GAAG,EAAE;MAAE,CAAC,EACjB;QAACF,GAAG,EAAE,CAAC;QAAEE,GAAG,EAAE;MAAE,CAAC,EACjB;QAACF,GAAG,EAAE,CAAC;QAAEE,GAAG,EAAE;MAAE,CAAC,EACjB;QAACF,GAAG,EAAE,CAAC;QAAEE,GAAG,EAAE;MAAE,CAAC,EACjB;QAACF,GAAG,EAAE,CAAC;QAAEE,GAAG,EAAE;MAAE,CAAC,EACjB;QAACF,GAAG,EAAE,CAAC;QAAEE,GAAG,EAAE;MAAE,CAAC,EACjB;QAACF,GAAG,EAAE,CAAC;QAAEE,GAAG,EAAE;MAAE,CAAC,EACjB;QAACF,GAAG,EAAE,CAAC;QAAEE,GAAG,EAAE;MAAE,CAAC,EACjB;QAACF,GAAG,EAAE,CAAC;QAAEE,GAAG,EAAE;MAAE,CAAC,EACjB;QAACF,GAAG,EAAE,CAAC;QAAEE,GAAG,EAAE;MAAE,CAAC,EACjB;QAACF,GAAG,EAAE,CAAC;QAAEE,GAAG,EAAE;MAAE,CAAC,EACjB;QAACF,GAAG,EAAE,CAAC;QAAEE,GAAG,EAAE;MAAE,CAAC,EACjB;QAACF,GAAG,EAAE,CAAC;QAAEE,GAAG,EAAE;MAAE,CAAC,EACjB;QAACF,GAAG,EAAE,CAAC;QAAEE,GAAG,EAAE;MAAE,CAAC,EACjB;QAACF,GAAG,EAAE,CAAC;QAAEE,GAAG,EAAE;MAAE,CAAC,EACjB;QAACF,GAAG,EAAE,CAAC;QAAEE,GAAG,EAAE;MAAE,CAAC,EACjB;QAACF,GAAG,EAAE,CAAC;QAAEE,GAAG,EAAE;MAAE,CAAC,EACjB;QAACF,GAAG,EAAE,CAAC;QAAEE,GAAG,EAAE;MAAE,CAAC,EACjB;QAACF,GAAG,EAAE,CAAC;QAAEE,GAAG,EAAE;MAAE,CAAC,EACjB;QAACF,GAAG,EAAE,CAAC;QAAEE,GAAG,EAAE;MAAE,CAAC;MACjB;MACA;QAACF,GAAG,EAAE,CAAC;QAAEE,GAAG,EAAE;MAAE,CAAC,EACjB;QAACF,GAAG,EAAE,CAAC;QAAEE,GAAG,EAAE;MAAE,CAAC,EACjB;QAACF,GAAG,EAAE,CAAC;QAAEE,GAAG,EAAE;MAAE,CAAC,EACjB;QAACF,GAAG,EAAE,CAAC;QAAEE,GAAG,EAAE;MAAE,CAAC,EACjB;QAACF,GAAG,EAAE,CAAC;QAAEE,GAAG,EAAE;MAAE,CAAC;MACjB;MACA;QAACF,GAAG,EAAE,CAAC;QAAEE,GAAG,EAAE;MAAE,CAAC,EACjB;QAACF,GAAG,EAAE,CAAC;QAAEE,GAAG,EAAE;MAAE,CAAC,EACjB;QAACF,GAAG,EAAE,CAAC;QAAEE,GAAG,EAAE;MAAE,CAAC,EACjB;QAACF,GAAG,EAAE,CAAC;QAAEE,GAAG,EAAE;MAAE,CAAC,EACjB;QAACF,GAAG,EAAE,CAAC;QAAEE,GAAG,EAAE;MAAE,CAAC,EACjB;QAACF,GAAG,EAAE,CAAC;QAAEE,GAAG,EAAE;MAAE,CAAC,EACjB;QAACF,GAAG,EAAE,CAAC;QAAEE,GAAG,EAAE;MAAE,CAAC,EACjB;QAACF,GAAG,EAAE,CAAC;QAAEE,GAAG,EAAE;MAAE,CAAC,EACjB;QAACF,GAAG,EAAE,CAAC;QAAEE,GAAG,EAAE;MAAE,CAAC,EACjB;QAACF,GAAG,EAAE,CAAC;QAAEE,GAAG,EAAE;MAAE,CAAC,EACjB;QAACF,GAAG,EAAE,CAAC;QAAEE,GAAG,EAAE;MAAE,CAAC,EACjB;QAACF,GAAG,EAAE,CAAC;QAAEE,GAAG,EAAE;MAAE,CAAC,EACjB;QAACF,GAAG,EAAE,CAAC;QAAEE,GAAG,EAAE;MAAE,CAAC,EACjB;QAACF,GAAG,EAAE,CAAC;QAAEE,GAAG,EAAE;MAAE,CAAC;MAGhB;MACD;MACA;QAACF,GAAG,EAAE,CAAC;QAAEE,GAAG,EAAE;MAAC,CAAC,EAChB;QAACF,GAAG,EAAE,CAAC;QAAEE,GAAG,EAAE;MAAC,CAAC,EAChB;QAACF,GAAG,EAAE,CAAC;QAAEE,GAAG,EAAE;MAAC,CAAC;MAChB;MACA;QAACF,GAAG,EAAE,CAAC;QAAEE,GAAG,EAAE;MAAC,CAAC,EAChB;QAACF,GAAG,EAAE,CAAC;QAAEE,GAAG,EAAE;MAAC,CAAC,EAChB;QAACF,GAAG,EAAE,CAAC;QAAEE,GAAG,EAAE;MAAC,CAAC,EAChB;QAACF,GAAG,EAAE,CAAC;QAAEE,GAAG,EAAE;MAAC,CAAC,EAChB;QAACF,GAAG,EAAE,CAAC;QAAEE,GAAG,EAAE;MAAE,CAAC,EACjB;QAACF,GAAG,EAAE,CAAC;QAAEE,GAAG,EAAE;MAAE,CAAC,EACjB;QAACF,GAAG,EAAE,CAAC;QAAEE,GAAG,EAAE;MAAE,CAAC,EACjB;QAACF,GAAG,EAAE,CAAC;QAAEE,GAAG,EAAE;MAAE,CAAC,EACjB;QAACF,GAAG,EAAE,CAAC;QAAEE,GAAG,EAAE;MAAE,CAAC,EACjB;QAACF,GAAG,EAAE,CAAC;QAAEE,GAAG,EAAE;MAAE,CAAC,EACjB;QAACF,GAAG,EAAE,CAAC;QAAEE,GAAG,EAAE;MAAE,CAAC,EACjB;QAACF,GAAG,EAAE,CAAC;QAAEE,GAAG,EAAE;MAAE,CAAC,EACjB;QAACF,GAAG,EAAE,CAAC;QAAEE,GAAG,EAAE;MAAE,CAAC,EACjB;QAACF,GAAG,EAAE,CAAC;QAAEE,GAAG,EAAE;MAAE,CAAC,EACjB;QAACF,GAAG,EAAE,CAAC;QAAEE,GAAG,EAAE;MAAE,CAAC,EACjB;QAACF,GAAG,EAAE,CAAC;QAAEE,GAAG,EAAE;MAAE,CAAC,EACjB;QAACF,GAAG,EAAE,CAAC;QAAEE,GAAG,EAAE;MAAE,CAAC,EACjB;QAACF,GAAG,EAAE,CAAC;QAAEE,GAAG,EAAE;MAAE,CAAC,EACjB;QAACF,GAAG,EAAE,CAAC;QAAEE,GAAG,EAAE;MAAE,CAAC,EACjB;QAACF,GAAG,EAAE,CAAC;QAAEE,GAAG,EAAE;MAAE,CAAC,EACjB;QAACF,GAAG,EAAE,CAAC;QAAEE,GAAG,EAAE;MAAE,CAAC,EACjB;QAACF,GAAG,EAAE,CAAC;QAAEE,GAAG,EAAE;MAAE,CAAC,EACjB;QAACF,GAAG,EAAE,CAAC;QAAEE,GAAG,EAAE;MAAE,CAAC,EACjB;QAACF,GAAG,EAAE,CAAC;QAAEE,GAAG,EAAE;MAAE,CAAC,EACjB;QAACF,GAAG,EAAE,CAAC;QAAEE,GAAG,EAAE;MAAE,CAAC,EACjB;QAACF,GAAG,EAAE,CAAC;QAAEE,GAAG,EAAE;MAAE,CAAC,EACjB;QAACF,GAAG,EAAE,CAAC;QAAEE,GAAG,EAAE;MAAE,CAAC,EACjB;QAACF,GAAG,EAAE,CAAC;QAAEE,GAAG,EAAE;MAAE,CAAC,EACjB;QAACF,GAAG,EAAE,CAAC;QAAEE,GAAG,EAAE;MAAE,CAAC;MACjB;MACA;QAACF,GAAG,EAAE,CAAC;QAAEE,GAAG,EAAE;MAAE,CAAC,EACjB;QAACF,GAAG,EAAE,CAAC;QAAEE,GAAG,EAAE;MAAE,CAAC,EACjB;QAACF,GAAG,EAAE,CAAC;QAAEE,GAAG,EAAE;MAAE,CAAC,EACjB;QAACF,GAAG,EAAE,CAAC;QAAEE,GAAG,EAAE;MAAE,CAAC,EACjB;QAACF,GAAG,EAAE,CAAC;QAAEE,GAAG,EAAE;MAAE,CAAC,EACjB;QAACF,GAAG,EAAE,CAAC;QAAEE,GAAG,EAAE;MAAE,CAAC,EACjB;QAACF,GAAG,EAAE,CAAC;QAAEE,GAAG,EAAE;MAAE,CAAC,EACjB;QAACF,GAAG,EAAE,CAAC;QAAEE,GAAG,EAAE;MAAE,CAAC,EACjB;QAACF,GAAG,EAAE,CAAC;QAAEE,GAAG,EAAE;MAAE,CAAC,EACjB;QAACF,GAAG,EAAE,CAAC;QAAEE,GAAG,EAAE;MAAE,CAAC,EACjB;QAACF,GAAG,EAAE,CAAC;QAAEE,GAAG,EAAE;MAAE,CAAC,EACjB;QAACF,GAAG,EAAE,CAAC;QAAEE,GAAG,EAAE;MAAE,CAAC,EACjB;QAACF,GAAG,EAAE,CAAC;QAAEE,GAAG,EAAE;MAAE,CAAC,EACjB;QAACF,GAAG,EAAE,CAAC;QAAEE,GAAG,EAAE;MAAE,CAAC,EACjB;QAACF,GAAG,EAAE,CAAC;QAAEE,GAAG,EAAE;MAAE,CAAC,EACjB;QAACF,GAAG,EAAE,CAAC;QAAEE,GAAG,EAAE;MAAE,CAAC,EACjB;QAACF,GAAG,EAAE,CAAC;QAAEE,GAAG,EAAE;MAAE,CAAC,EACjB;QAACF,GAAG,EAAE,CAAC;QAAEE,GAAG,EAAE;MAAE,CAAC,EACjB;QAACF,GAAG,EAAE,CAAC;QAAEE,GAAG,EAAE;MAAE,CAAC,EACjB;QAACF,GAAG,EAAE,CAAC;QAAEE,GAAG,EAAE;MAAE,CAAC,EAMhB;QAACF,GAAG,EAAE,EAAE;QAAEE,GAAG,EAAE;MAAC,CAAC;MAClB;MACA;QAACF,GAAG,EAAE,EAAE;QAAEE,GAAG,EAAE;MAAC,CAAC,EACjB;QAACF,GAAG,EAAE,EAAE;QAAEE,GAAG,EAAE;MAAC,CAAC,EACjB;QAACF,GAAG,EAAE,EAAE;QAAEE,GAAG,EAAE;MAAC,CAAC;MACjB;MACA;QAACF,GAAG,EAAE,EAAE;QAAEE,GAAG,EAAE;MAAC,CAAC,EACjB;QAACF,GAAG,EAAE,EAAE;QAAEE,GAAG,EAAE;MAAC,CAAC,EACjB;QAACF,GAAG,EAAE,EAAE;QAAEE,GAAG,EAAE;MAAC,CAAC,EACjB;QAACF,GAAG,EAAE,EAAE;QAAEE,GAAG,EAAE;MAAC,CAAC,EACjB;QAACF,GAAG,EAAE,EAAE;QAAEE,GAAG,EAAE;MAAE,CAAC,EAClB;QAACF,GAAG,EAAE,EAAE;QAAEE,GAAG,EAAE;MAAE,CAAC,EAClB;QAACF,GAAG,EAAE,EAAE;QAAEE,GAAG,EAAE;MAAE,CAAC,EAClB;QAACF,GAAG,EAAE,EAAE;QAAEE,GAAG,EAAE;MAAE,CAAC,EAClB;QAACF,GAAG,EAAE,EAAE;QAAEE,GAAG,EAAE;MAAE,CAAC,EAClB;QAACF,GAAG,EAAE,EAAE;QAAEE,GAAG,EAAE;MAAE,CAAC,EAClB;QAACF,GAAG,EAAE,EAAE;QAAEE,GAAG,EAAE;MAAE,CAAC,EAClB;QAACF,GAAG,EAAE,EAAE;QAAEE,GAAG,EAAE;MAAE,CAAC;MAClB;MACA;QAACF,GAAG,EAAE,EAAE;QAAEE,GAAG,EAAE;MAAE,CAAC,EAClB;QAACF,GAAG,EAAE,EAAE;QAAEE,GAAG,EAAE;MAAE,CAAC,EAClB;QAACF,GAAG,EAAE,EAAE;QAAEE,GAAG,EAAE;MAAE,CAAC,EAClB;QAACF,GAAG,EAAE,EAAE;QAAEE,GAAG,EAAE;MAAE,CAAC,EAClB;QAACF,GAAG,EAAE,EAAE;QAAEE,GAAG,EAAE;MAAE,CAAC,EAClB;QAACF,GAAG,EAAE,EAAE;QAAEE,GAAG,EAAE;MAAE,CAAC,EAClB;QAACF,GAAG,EAAE,EAAE;QAAEE,GAAG,EAAE;MAAE,CAAC,EAClB;QAACF,GAAG,EAAE,EAAE;QAAEE,GAAG,EAAE;MAAE,CAAC,EAClB;QAACF,GAAG,EAAE,EAAE;QAAEE,GAAG,EAAE;MAAE,CAAC,EAClB;QAACF,GAAG,EAAE,EAAE;QAAEE,GAAG,EAAE;MAAE,CAAC,EAClB;QAACF,GAAG,EAAE,EAAE;QAAEE,GAAG,EAAE;MAAE,CAAC,EAClB;QAACF,GAAG,EAAE,EAAE;QAAEE,GAAG,EAAE;MAAE,CAAC,EAClB;QAACF,GAAG,EAAE,EAAE;QAAEE,GAAG,EAAE;MAAE,CAAC,EAClB;QAACF,GAAG,EAAE,EAAE;QAAEE,GAAG,EAAE;MAAE,CAAC,EAClB;QAACF,GAAG,EAAE,EAAE;QAAEE,GAAG,EAAE;MAAE,CAAC,EAClB;QAACF,GAAG,EAAE,EAAE;QAAEE,GAAG,EAAE;MAAE,CAAC,EAClB;QAACF,GAAG,EAAE,EAAE;QAAEE,GAAG,EAAE;MAAE,CAAC,EAClB;QAACF,GAAG,EAAE,EAAE;QAAEE,GAAG,EAAE;MAAE,CAAC,EAClB;QAACF,GAAG,EAAE,EAAE;QAAEE,GAAG,EAAE;MAAE,CAAC,EAClB;QAACF,GAAG,EAAE,EAAE;QAAEE,GAAG,EAAE;MAAE,CAAC,EAClB;QAACF,GAAG,EAAE,EAAE;QAAEE,GAAG,EAAE;MAAE,CAAC,EAClB;QAACF,GAAG,EAAE,EAAE;QAAEE,GAAG,EAAE;MAAE,CAAC,EAClB;QAACF,GAAG,EAAE,EAAE;QAAEE,GAAG,EAAE;MAAE,CAAC,EAClB;QAACF,GAAG,EAAE,EAAE;QAAEE,GAAG,EAAE;MAAE,CAAC,EAClB;QAACF,GAAG,EAAE,EAAE;QAAEE,GAAG,EAAE;MAAE,CAAC,EAClB;QAACF,GAAG,EAAE,EAAE;QAAEE,GAAG,EAAE;MAAE,CAAC,EAClB;QAACF,GAAG,EAAE,EAAE;QAAEE,GAAG,EAAE;MAAE,CAAC,EAClB;QAACF,GAAG,EAAE,EAAE;QAAEE,GAAG,EAAE;MAAE,CAAC;MAClB;MACA;QAACF,GAAG,EAAE,EAAE;QAAEE,GAAG,EAAE;MAAE,CAAC,EAClB;QAACF,GAAG,EAAE,EAAE;QAAEE,GAAG,EAAE;MAAE,CAAC,EAClB;QAACF,GAAG,EAAE,EAAE;QAAEE,GAAG,EAAE;MAAE,CAAC,EAClB;QAACF,GAAG,EAAE,EAAE;QAAEE,GAAG,EAAE;MAAE,CAAC,EAClB;QAACF,GAAG,EAAE,EAAE;QAAEE,GAAG,EAAE;MAAE,CAAC,EAClB;QAACF,GAAG,EAAE,EAAE;QAAEE,GAAG,EAAE;MAAE,CAAC,EAClB;QAACF,GAAG,EAAE,EAAE;QAAEE,GAAG,EAAE;MAAE,CAAC,EAClB;QAACF,GAAG,EAAE,EAAE;QAAEE,GAAG,EAAE;MAAE,CAAC,EAClB;QAACF,GAAG,EAAE,EAAE;QAAEE,GAAG,EAAE;MAAE,CAAC,EAClB;QAACF,GAAG,EAAE,EAAE;QAAEE,GAAG,EAAE;MAAE,CAAC,EAClB;QAACF,GAAG,EAAE,EAAE;QAAEE,GAAG,EAAE;MAAE,CAAC,EAClB;QAACF,GAAG,EAAE,EAAE;QAAEE,GAAG,EAAE;MAAE,CAAC,EAClB;QAACF,GAAG,EAAE,EAAE;QAAEE,GAAG,EAAE;MAAE,CAAC,EAClB;QAACF,GAAG,EAAE,EAAE;QAAEE,GAAG,EAAE;MAAE,CAAC,EAClB;QAACF,GAAG,EAAE,EAAE;QAAEE,GAAG,EAAE;MAAE,CAAC,EAIlB;QAACF,GAAG,EAAE,EAAE;QAAEE,GAAG,EAAE;MAAE,CAAC,EAClB;QAACF,GAAG,EAAE,EAAE;QAAEE,GAAG,EAAE;MAAE,CAAC,EAClB;QAACF,GAAG,EAAE,EAAE;QAAEE,GAAG,EAAE;MAAE,CAAC,EAClB;QAACF,GAAG,EAAE,EAAE;QAAEE,GAAG,EAAE;MAAE,CAAC,EAClB;QAACF,GAAG,EAAE,EAAE;QAAEE,GAAG,EAAE;MAAE,CAAC,EAClB;QAACF,GAAG,EAAE,EAAE;QAAEE,GAAG,EAAE;MAAE,CAAC,EAClB;QAACF,GAAG,EAAE,EAAE;QAAEE,GAAG,EAAE;MAAE,CAAC,EAClB;QAACF,GAAG,EAAE,EAAE;QAAEE,GAAG,EAAE;MAAE,CAAC,EAClB;QAACF,GAAG,EAAE,EAAE;QAAEE,GAAG,EAAE;MAAE,CAAC,EAClB;QAACF,GAAG,EAAE,EAAE;QAAEE,GAAG,EAAE;MAAE,CAAC,EAClB;QAACF,GAAG,EAAE,EAAE;QAAEE,GAAG,EAAE;MAAE,CAAC,EAClB;QAACF,GAAG,EAAE,EAAE;QAAEE,GAAG,EAAE;MAAE,CAAC,EAClB;QAACF,GAAG,EAAE,EAAE;QAAEE,GAAG,EAAE;MAAE,CAAC,EAClB;QAACF,GAAG,EAAE,EAAE;QAAEE,GAAG,EAAE;MAAE,CAAC,EAClB;QAACF,GAAG,EAAE,EAAE;QAAEE,GAAG,EAAE;MAAE,CAAC,EAClB;QAACF,GAAG,EAAE,EAAE;QAAEE,GAAG,EAAE;MAAE,CAAC,EAClB;QAACF,GAAG,EAAE,EAAE;QAAEE,GAAG,EAAE;MAAE,CAAC,EAClB;QAACF,GAAG,EAAE,EAAE;QAAEE,GAAG,EAAE;MAAE,CAAC,EAClB;QAACF,GAAG,EAAE,EAAE;QAAEE,GAAG,EAAE;MAAE,CAAC,EAClB;QAACF,GAAG,EAAE,EAAE;QAAEE,GAAG,EAAE;MAAE,CAAC,EAClB;QAACF,GAAG,EAAE,EAAE;QAAEE,GAAG,EAAE;MAAE,CAAC,EAClB;QAACF,GAAG,EAAE,EAAE;QAAEE,GAAG,EAAE;MAAE,CAAC,EAClB;QAACF,GAAG,EAAE,EAAE;QAAEE,GAAG,EAAE;MAAE,CAAC,EAClB;QAACF,GAAG,EAAE,EAAE;QAAEE,GAAG,EAAE;MAAE,CAAC;MAClB;MACA;QAACF,GAAG,EAAE,EAAE;QAAEE,GAAG,EAAE;MAAE,CAAC,EAClB;QAACF,GAAG,EAAE,EAAE;QAAEE,GAAG,EAAE;MAAE,CAAC,EAClB;QAACF,GAAG,EAAE,EAAE;QAAEE,GAAG,EAAE;MAAE,CAAC,EAClB;QAACF,GAAG,EAAE,EAAE;QAAEE,GAAG,EAAE;MAAE,CAAC,EAClB;QAACF,GAAG,EAAE,EAAE;QAAEE,GAAG,EAAE;MAAE,CAAC,EAClB;QAACF,GAAG,EAAE,EAAE;QAAEE,GAAG,EAAE;MAAE,CAAC,EAClB;QAACF,GAAG,EAAE,EAAE;QAAEE,GAAG,EAAE;MAAE,CAAC,EAClB;QAACF,GAAG,EAAE,EAAE;QAAEE,GAAG,EAAE;MAAE,CAAC,EAClB;QAACF,GAAG,EAAE,EAAE;QAAEE,GAAG,EAAE;MAAE,CAAC,EAClB;QAACF,GAAG,EAAE,EAAE;QAAEE,GAAG,EAAE;MAAE,CAAC,EAClB;QAACF,GAAG,EAAE,EAAE;QAAEE,GAAG,EAAE;MAAE,CAAC,EAClB;QAACF,GAAG,EAAE,EAAE;QAAEE,GAAG,EAAE;MAAE,CAAC,EAClB;QAACF,GAAG,EAAE,EAAE;QAAEE,GAAG,EAAE;MAAE,CAAC,EAClB;QAACF,GAAG,EAAE,EAAE;QAAEE,GAAG,EAAE;MAAE,CAAC,EAClB;QAACF,GAAG,EAAE,EAAE;QAAEE,GAAG,EAAE;MAAE,CAAC,EAClB;QAACF,GAAG,EAAE,EAAE;QAAEE,GAAG,EAAE;MAAE,CAAC,EAClB;QAACF,GAAG,EAAE,EAAE;QAAEE,GAAG,EAAE;MAAE,CAAC,EAKjB;QAACF,GAAG,EAAE,EAAE;QAAEE,GAAG,EAAE;MAAC,CAAC;MAClB;MACA;QAACF,GAAG,EAAE,EAAE;QAAEE,GAAG,EAAE;MAAC,CAAC,EACjB;QAACF,GAAG,EAAE,EAAE;QAAEE,GAAG,EAAE;MAAC,CAAC;MACjB;MACA;QAACF,GAAG,EAAE,EAAE;QAAEE,GAAG,EAAE;MAAC,CAAC,EACjB;QAACF,GAAG,EAAE,EAAE;QAAEE,GAAG,EAAE;MAAC,CAAC,EACjB;QAACF,GAAG,EAAE,EAAE;QAAEE,GAAG,EAAE;MAAC,CAAC,EACjB;QAACF,GAAG,EAAE,EAAE;QAAEE,GAAG,EAAE;MAAC,CAAC,EACjB;QAACF,GAAG,EAAE,EAAE;QAAEE,GAAG,EAAE;MAAC,CAAC;MACjB;MACA;QAACF,GAAG,EAAE,EAAE;QAAEE,GAAG,EAAE;MAAE,CAAC,EAClB;QAACF,GAAG,EAAE,EAAE;QAAEE,GAAG,EAAE;MAAE,CAAC,EAClB;QAACF,GAAG,EAAE,EAAE;QAAEE,GAAG,EAAE;MAAE,CAAC,EAClB;QAACF,GAAG,EAAE,EAAE;QAAEE,GAAG,EAAE;MAAE,CAAC,EAClB;QAACF,GAAG,EAAE,EAAE;QAAEE,GAAG,EAAE;MAAE,CAAC,EAClB;QAACF,GAAG,EAAE,EAAE;QAAEE,GAAG,EAAE;MAAE,CAAC,EAClB;QAACF,GAAG,EAAE,EAAE;QAAEE,GAAG,EAAE;MAAE,CAAC,EAClB;QAACF,GAAG,EAAE,EAAE;QAAEE,GAAG,EAAE;MAAE,CAAC,EAClB;QAACF,GAAG,EAAE,EAAE;QAAEE,GAAG,EAAE;MAAE,CAAC,EAClB;QAACF,GAAG,EAAE,EAAE;QAAEE,GAAG,EAAE;MAAE,CAAC,EAClB;QAACF,GAAG,EAAE,EAAE;QAAEE,GAAG,EAAE;MAAE,CAAC,EAClB;QAACF,GAAG,EAAE,EAAE;QAAEE,GAAG,EAAE;MAAE,CAAC,EAClB;QAACF,GAAG,EAAE,EAAE;QAAEE,GAAG,EAAE;MAAE,CAAC,EAClB;QAACF,GAAG,EAAE,EAAE;QAAEE,GAAG,EAAE;MAAE,CAAC,EAClB;QAACF,GAAG,EAAE,EAAE;QAAEE,GAAG,EAAE;MAAE,CAAC,EAClB;QAACF,GAAG,EAAE,EAAE;QAAEE,GAAG,EAAE;MAAE,CAAC,EAClB;QAACF,GAAG,EAAE,EAAE;QAAEE,GAAG,EAAE;MAAE,CAAC,EAClB;QAACF,GAAG,EAAE,EAAE;QAAEE,GAAG,EAAE;MAAE,CAAC,EAClB;QAACF,GAAG,EAAE,EAAE;QAAEE,GAAG,EAAE;MAAE,CAAC,EAClB;QAACF,GAAG,EAAE,EAAE;QAAEE,GAAG,EAAE;MAAE,CAAC,EAClB;QAACF,GAAG,EAAE,EAAE;QAAEE,GAAG,EAAE;MAAE,CAAC,EAClB;QAACF,GAAG,EAAE,EAAE;QAAEE,GAAG,EAAE;MAAE,CAAC,EAClB;QAACF,GAAG,EAAE,EAAE;QAAEE,GAAG,EAAE;MAAE,CAAC,EAClB;QAACF,GAAG,EAAE,EAAE;QAAEE,GAAG,EAAE;MAAE,CAAC,EAClB;QAACF,GAAG,EA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,EAClB;QAACF,GAAG,EAAE,EAAE;QAAEE,GAAG,EAAE;MAAE,CAAC,EAClB;QAACF,GAAG,EAAE,EAAE;QAAEE,GAAG,EAAE;MAAE,CAAC,EAClB;QAACF,GAAG,EAAE,EAAE;QAAEE,GAAG,EAAE;MAAE,CAAC,EAClB;QAACF,GAAG,EAAE,EAAE;QAAEE,GAAG,EAAE;MAAE,CAAC,EAClB;QAACF,GAAG,EAAE,EAAE;QAAEE,GAAG,EAAE;MAAE,CAAC,EAClB;QAACF,GAAG,EAAE,EAAE;QAAEE,GAAG,EAAE;MAAE,CAAC,EAClB;QAACF,GAAG,EAAE,EAAE;QAAEE,GAAG,EAAE;MAAE,CAAC,EAClB;QAACF,GAAG,EAAE,EAAE;QAAEE,GAAG,EAAE;MAAE,CAAC,EAClB;QAACF,GAAG,EAAE,EAAE;QAAEE,GAAG,EAAE;MAAE,CAAC,EAClB;QAACF,GAAG,EAAE,EAAE;QAAEE,GAAG,EAAE;MAAE,CAAC,EAClB;QAACF,GAAG,EAAE,EAAE;QAAEE,GAAG,EAAE;MAAE,CAAC,EAClB;QAACF,GAAG,EAAE,EAAE;QAAEE,GAAG,EAAE;MAAE,CAAC,EAClB;QAACF,GAAG,EAAE,EAAE;QAAEE,GAAG,EAAE;MAAE,CAAC,EAClB;QAACF,GAAG,EAAE,EAAE;QAAEE,GAAG,EAAE;MAAE,CAAC,EAClB;QAACF,GAAG,EAAE,EAAE;QAAEE,GAAG,EAAE;MAAE,CAAC,EAClB;QAACF,GAAG,EAAE,EAAE;QAAEE,GAAG,EAAE;MAAE,CAAC,EAClB;QAACF,GAAG,EAAE,EAAE;QAAEE,GAAG,EAAE;MAAE,CAAC,EAElB;QAACF,GAAG,EAAE,EAAE;QAAEE,GAAG,EAAE;MAAE,CAAC,EAClB;QAACF,GAAG,EAAE,EAAE;QAAEE,GAAG,EAAE;MAAE,CAAC,EAClB;QAACF,GAAG,EAAE,EAAE;QAAEE,GAAG,EAAE;MAAE,CAAC,EAClB;QAACF,GAAG,EAAE,EAAE;QAAEE,GAAG,EAAE;MAAE,CAAC,EAClB;QAACF,GAAG,EAAE,EAAE;QAAEE,GAAG,EAAE;MAAE,CAAC,EAClB;QAACF,GAAG,EAAE,EAAE;QAAEE,GAAG,EAAE;MAAE,CAAC,EAClB;QAACF,GAAG,EAAE,EAAE;QAAEE,GAAG,EAAE;MAAE,CAAC,EAClB;QAACF,GAAG,EAAE,EAAE;QAAEE,GAAG,EAAE;MAAE,CAAC,EAClB;QAACF,GAAG,EAAE,EAAE;QAAEE,GAAG,EAAE;MAAE,CAAC;MAClB;MACA;QAACF,GAAG,EAAE,EAAE;QAAEE,GAAG,EAAE;MAAE,CAAC,EAClB;QAACF,GAAG,EAAE,EAAE;QAAEE,GAAG,EAAE;MAAE,CAAC,EAClB;QAACF,GAAG,EAAE,EAAE;QAAEE,GAAG,EAAE;MAAE,CAAC,EAClB;QAACF,GAAG,EAAE,EAAE;QAAEE,GAAG,EAAE;MAAE,CAAC,EAClB;QAACF,GAAG,EAAE,EAAE;QAAEE,GAAG,EAAE;MAAE,CAAC,EAClB;QAACF,GAAG,EAAE,EAAE;QAAEE,GAAG,EAAE;MAAE,CAAC,EAClB;QAACF,GAAG,EAAE,EAAE;QAAEE,GAAG,EAAE;MAAE,CAAC,EAClB;QAACF,GAAG,EAAE,EAAE;QAAEE,GAAG,EAAE;MAAE,CAAC,EAClB;QAACF,GAAG,EAAE,EAAE;QAAEE,GAAG,EAAE;MAAE,CAAC,EAClB;QAACF,GAAG,EAAE,EAAE;QAAEE,GAAG,EAAE;MAAE,CAAC,EAClB;QAACF,GAAG,EAAE,EAAE;QAAEE,GAAG,EAAE;MAAE,CAAC,EAClB;QAACF,GAAG,EAAE,EAAE;QAAEE,GAAG,EAAE;MAAE,CAAC,EAClB;QAACF,GAAG,EAAE,EAAE;QAAEE,GAAG,EAAE;MAAE,CAAC,EAClB;QAACF,GAAG,EAAE,EAAE;QAAEE,GAAG,EAAE;MAAE,CAAC,EAClB;QAACF,GAAG,EAAE,EAAE;QAAEE,GAAG,EAAE;MAAE,CAAC,EAClB;QAACF,GAAG,EAAE,EAAE;QAAEE,GAAG,EAAE;MAAE,CAAC,EAClB;QAACF,GAAG,EAAE,EAAE;QAAEE,GAAG,EAAE;MAAE,CAAC,EAClB;QAACF,GAAG,EAAE,EAAE;QAAEE,GAAG,EAAE;MAAE,CAAC,EAClB;QAACF,GAAG,EAAE,EAAE;QAAEE,GAAG,EAAE;MAAE,CAAC,EAClB;QAA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B;QAACF,GAAG,EAAE,EAAE;QAAEE,GAAG,EAAE;MAAE,CAAC,EAClB;QAACF,GAAG,EAAE,EAAE;QAAEE,GAAG,EAAE;MAAE,CAAC,EAClB;QAACF,GAAG,EAAE,EAAE;QAAEE,GAAG,EAAE;MAAE,CAAC,EAClB;QAACF,GAAG,EAAE,EAAE;QAAEE,GAAG,EAAE;MAAE,CAAC;MAClB;MACA;QAACF,GAAG,EAAE,EAAE;QAAEE,GAAG,EAAE;MAAE,CAAC,EAClB;QAACF,GAAG,EAAE,EAAE;QAAEE,GAAG,EAAE;MAAE,CAAC,EAClB;QAACF,GAAG,EAAE,EAAE;QAAEE,GAAG,EAAE;MAAE,CAAC,EAClB;QAACF,GAAG,EAAE,EAAE;QAAEE,GAAG,EAAE;MAAE,CAAC,EAClB;QAACF,GAAG,EAAE,EAAE;QAAEE,GAAG,EAAE;MAAE,CAAC,EAClB;QAACF,GAAG,EAAE,EAAE;QAAEE,GAAG,EAAE;MAAE,CAAC,EAClB;QAACF,GAAG,EAAE,EAAE;QAAEE,GAAG,EAAE;MAAE,CAAC,EAClB;QAACF,GAAG,EAAE,EAAE;QAAEE,GAAG,EAAE;MAAE,CAAC,EAClB;QAACF,GAAG,EAAE,EAAE;QAAEE,GAAG,EAAE;MAAE,CAAC,EAClB;QAACF,GAAG,EAAE,EAAE;QAAEE,GAAG,EAAE;MAAE,CAAC,EAClB;QAACF,GAAG,EAAE,EAAE;QAAEE,GAAG,EAAE;MAAE,CAAC,EAClB;QAACF,GAAG,EAAE,EAAE;QAAEE,GAAG,EAAE;MAAE,CAAC,EAClB;QAACF,GAAG,EAAE,EAAE;QAAEE,GAAG,EAAE;MAAE,CAAC,EAClB;QAACF,GAAG,EAAE,EAAE;QAAEE,GAAG,EAAE;MAAE,CAAC,EAClB;QAACF,GAAG,EAAE,EAAE;QAAEE,GAAG,EAAE;MAAE,CAAC,EAClB;QAACF,GAAG,EAAE,EAAE;QAAEE,GAAG,EAAE;MAAE,CAAC,EAClB;QAACF,GAAG,EAAE,EAAE;QAAEE,GAAG,EAAE;MAAE,CAAC,EAClB;QAACF,GAAG,EAAE,EAAE;QAAEE,GAAG,EAAE;MAAE,CAAC,EAClB;QAACF,GAAG,EAAE,EAAE;QAAEE,GAAG,EAAE;MAAE,CAAC,EAClB;QAACF,GAAG,EAAE,EAAE;QAAEE,GAAG,EAAE;MAAE,CAAC,EAClB;QAACF,GAAG,EAAE,EAAE;QAAEE,GAAG,EAAE;MAAE,CAAC,EAClB;QAACF,GAAG,EAAE,EAAE;QAAEE,GAAG,EAAE;MAAE,CAAC,EAClB;QAACF,GAAG,EAAE,EAAE;QAAEE,GAAG,EAAE;MAAE,CAAC,EAClB;QAACF,GAAG,EAAE,EAAE;QAAEE,GAAG,EAAE;MAAE,CAAC,EAClB;QAACF,GAAG,EAAE,EAAE;QAAEE,GAAG,EAAE;MAAE,CAAC,EAClB;QAACF,GAAG,EAAE,EAAE;QAAEE,GAAG,EAAE;MAAE,CAAC,EAElB;QAACF,GAAG,EAAE,EAAE;QAAEE,GAAG,EAAE;MAAC,CAAC,EACjB;QAACF,GAAG,EAAE,EAAE;QAAEE,GAAG,EAAE;MAAC,CAAC,EACjB;QAACF,GAAG,EAAE,EAAE;QAAEE,GAAG,EAAE;MAAC,CAAC,EACjB;QAACF,GAAG,EAAE,EAAE;QAAEE,GAAG,EAAE;MAAC,CAAC;MACjB;MACA;QAACF,GAAG,EAAE,EAAE;QAAEE,GAAG,EAAE;MAAC,CAAC,EACjB;QAACF,GAAG,EAAE,EAAE;QAAEE,GAAG,EAAE;MAAC,CAAC,EACjB;QAACF,GAAG,EAAE,EAAE;QAAEE,GAAG,EAAE;MAAC,CAAC,EACjB;QAACF,GAAG,EAAE,EAAE;QAAEE,GAAG,EAAE;MAAC,CAAC,EACjB;QAACF,GAAG,EAAE,EAAE;QAAEE,GAAG,EAAE;MAAC,CAAC;MACjB;MACA;QAACF,GAAG,EAAE,EAAE;QAAEE,GAAG,EAAE;MAAE,CAAC,EAClB;QAACF,GAAG,EAAE,EAAE;QAAEE,GAAG,EAAE;MAAE,CAAC,EAClB;QAACF,GAAG,EAAE,EAAE;QAAEE,GAAG,EAAE;MAAE,CAAC,EAClB;QAACF,GAAG,EAAE,EAAE;QAAEE,GAAG,EAAE;MAAE,CAAC,EAClB;QAACF,GAAG,EAAE,EAAE;QAAEE,GAAG,EAAE;MAAE,CAAC,EAClB;QAACF,GAAG,EAAE,EAAE;QAAEE,GAAG,EAAE;MAAE,CAAC,EAClB;QAACF,GAAG,EAAE,EAAE;QAAEE,GAAG,EAAE;MAAE,CAAC,EAClB;QAACF,GAAG,EAAE,EAAE;QAAEE,GAAG,EAAE;MAAE,CAAC,EAClB;QAACF,GAAG,EAAE,EAAE;QAAEE,GAAG,EAAE;MAAE,CAAC,EAClB;QAACF,GAAG,EAAE,EAAE;QAAEE,GAAG,EAAE;MAAE,CAAC,EAClB;QAACF,GAAG,EAAE,EAAE;QAAEE,GAAG,EAAE;MAAE,CAAC,EAClB;QAACF,GAAG,EAAE,EAAE;QAAEE,GAAG,EAAE;MAAE,CAAC,EAClB;QAACF,GAAG,EAAE,EAAE;QAAEE,GAAG,EAAE;MAAE,CAAC,EAClB;QAACF,GAAG,EAAE,EAAE;QAAEE,GAAG,EAAE;MAAE,CAAC,EAClB;QAACF,GAAG,EAAE,EAAE;QAAEE,GAAG,EAAE;MAAE,CAAC,EAClB;QAACF,GAAG,EAAE,EAAE;QAAEE,GAAG,EAAE;MAAE,CAAC;MAClB;MACA;QAACF,GAAG,EAAE,EAAE;QAAEE,GAAG,EAAE;MAAE,CAAC,EAClB;QAACF,GAAG,EAAE,EAAE;QAAEE,GAAG,EAAE;MAAE,CAAC,EAClB;QAACF,GAAG,EAAE,EAAE;QAAEE,GAAG,EAAE;MAAE,CAAC,EAClB;QAACF,GAAG,EAAE,EAAE;QAAEE,GAAG,EAAE;MAAE,CAAC,EAClB;QAACF,GAAG,EAAE,EAAE;QAAEE,GAAG,EAAE;MAAE,CAAC,EAClB;QAACF,GAAG,EAAE,EAAE;QAAEE,GAAG,EAAE;MAAE,CAAC,EAClB;QAACF,GAAG,EAAE,EAAE;QAAEE,GAAG,EAAE;MAAE,CAAC,EAClB;QAACF,GAAG,EAAE,EAAE;QAAEE,GAAG,EAAE;MAAE,CAAC,EAClB;QAACF,GAAG,EAAE,EAAE;QAAEE,GAAG,EAAE;MAAE,CAAC,EAClB;QAACF,GAAG,EAAE,EAAE;QAAEE,GAAG,EAAE;MAAE,CAAC,EAClB;QAACF,GAAG,EAAE,EAAE;QAAEE,GAAG,EAAE;MAAE,CAAC,EAClB;QAACF,GAAG,EAAE,EAAE;QAAEE,GAAG,EAAE;MAAE,CAAC,EAClB;QAACF,GAAG,EAAE,EAAE;QAAEE,GAAG,EAAE;MAAE,CAAC,EAClB;QAACF,GAAG,EAAE,EAAE;QAAEE,GAAG,EAAE;MAAE,CAAC,EAClB;QAACF,GAAG,EAAE,EAAE;QAAEE,GAAG,EAAE;MAAE,CAAC,EAClB;QAACF,GAAG,EAAE,EAAE;QAAEE,GAAG,EAAE;MAAE,CAAC,EAClB;QAACF,GAAG,EAAE,EAAE;QAAEE,GAAG,EAAE;MAAE,CAAC,EAClB;QAACF,GAAG,EAAE,EAAE;QAAEE,GAAG,EAAE;MAAE,CAAC,EAClB;QAACF,GAAG,EAAE,EAAE;QAAEE,GAAG,EAAE;MAAE,CAAC,EAClB;QAACF,GAAG,EAAE,EAAE;QAAEE,GAAG,EAAE;MAAE,CAAC,EAClB;QAACF,GAAG,EAAE,EAAE;QAAEE,GAAG,EAAE;MAAE,CAAC,EAClB;QAACF,GAAG,EAAE,EAAE;QAAEE,GAAG,EAAE;MAAE,CAAC,EAClB;QAACF,GAAG,EAAE,EAAE;QAAEE,GAAG,EAAE;MAAE,CAAC,EAClB;QAACF,GAAG,EAAE,EAAE;QAAEE,GAAG,EAAE;MAAE,CAAC,EAClB;QAACF,GAAG,EAAE,EAAE;QAAEE,GAAG,EAAE;MAAE,CAAC,EAClB;QAACF,GAAG,EAAE,EAAE;QAAEE,GAAG,EAAE;MAAE,CAAC,EAGlB;QAACF,GAAG,EAAE,EAAE;QAAEE,GAAG,EAAE;MAAE,CAAC,EAClB;QAACF,GAAG,EAAE,EAAE;QAAEE,GAAG,EAAE;MAAE,CAAC,EAClB;QAACF,GAAG,EAAE,EAAE;QAAEE,GAAG,EAAE;MAAE,CAAC,EAClB;QAACF,GAAG,EAAE,EAAE;QAAEE,GAAG,EAAE;MAAE,CAAC,EAClB;QAACF,GAAG,EAAE,EAAE;QAAEE,GAAG,EAAE;MAAE,CAAC,EAClB;QAACF,GAAG,EAAE,EAAE;QAAEE,GAAG,EAAE;MAAE,CAAC,EAClB;QAACF,GAAG,EAAE,EAAE;QAAEE,GAAG,EAAE;MAAE,CAAC,EAClB;QAACF,GAAG,EAAE,EAAE;QAAEE,GAAG,EAAE;MAAE,CAAC,EAClB;QAACF,GAAG,EAAE,EAAE;QAAEE,GAAG,EAAE;MAAE,CAAC,EAClB;QAACF,GA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EAAE;MAAE,CAAC,EAClB;QAACF,GAAG,EAAE,EAAE;QAAEE,GAAG,EAAE;MAAE,CAAC;MAClB;MACA;QAACF,GAAG,EAAE,EAAE;QAAEE,GAAG,EAAE;MAAE,CAAC,EAClB;QAACF,GAAG,EAAE,EAAE;QAAEE,GAAG,EAAE;MAAE,CAAC,EAClB;QAACF,GAAG,EAAE,EAAE;QAAEE,GAAG,EAAE;MAAE,CAAC,EAClB;QAACF,GAAG,EAAE,EAAE;QAAEE,GAAG,EAAE;MAAE,CAAC,EAClB;QAACF,GAAG,EAAE,EAAE;QAAEE,GAAG,EAAE;MAAE,CAAC,EAClB;QAACF,GAAG,EAAE,EAAE;QAAEE,GAAG,EAAE;MAAE,CAAC,EAClB;QAACF,GAAG,EAAE,EAAE;QAAEE,GAAG,EAAE;MAAE,CAAC,EAClB;QAACF,GAAG,EAAE,EAAE;QAAEE,GAAG,EAAE;MAAE,CAAC,EAClB;QAACF,GAAG,EAAE,EAAE;QAAEE,GAAG,EAAE;MAAE,CAAC,EAClB;QAACF,GAAG,EAAE,EAAE;QAAEE,GAAG,EAAE;MAAE,CAAC,EAClB;QAACF,GAAG,EAAE,EAAE;QAAEE,GAAG,EAAE;MAAE,CAAC,EAClB;QAACF,GAAG,EAAE,EAAE;QAAEE,GAAG,EAAE;MAAE,CAAC,EAClB;QAACF,GAAG,EAAE,EAAE;QAAEE,GAAG,EAAE;MAAE,CAAC,EAClB;QAACF,GAAG,EAAE,EAAE;QAAEE,GAAG,EAAE;MAAE,CAAC,EAClB;QAACF,GAAG,EAAE,EAAE;QAAEE,GAAG,EAAE;MAAE,CAAC,EAClB;QAACF,GAAG,EAAE,EAAE;QAAEE,GAAG,EAAE;MAAE,CAAC,EAClB;QAACF,GAAG,EAAE,EAAE;QAAEE,GAAG,EAAE;MAAE,CAAC,EAClB;QAACF,GAAG,EAAE,EAAE;QAAEE,GAAG,EAAE;MAAE,CAAC,EAClB;QAACF,GAAG,EAAE,EAAE;QAAEE,GAAG,EAAE;MAAE,CAAC,EAClB;QAACF,GAAG,EAAE,EAAE;QAAEE,GAAG,EAAE;MAAE,CAAC,EAClB;QAACF,GAAG,EAAE,EAAE;QAAEE,GAAG,EAAE;MAAE,CAAC,EAClB;QAACF,GAAG,EAAE,EAAE;QAAEE,GAAG,EAAE;MAAE,CAAC,EAClB;QAACF,GAAG,EAAE,EAAE;QAAEE,GAAG,EAAE;MAAE,CAAC,EAClB;QAACF,GAAG,EAAE,EAAE;QAAEE,GAAG,EAAE;MAAE,CAAC,EAClB;QAACF,GAAG,EAAE,EAAE;QAAEE,GAAG,EAAE;MAAE,CAAC,EAClB;QAACF,GAAG,EAAE,EAAE;QAAEE,GAAG,EAAE;MAAE,CAAC,EAClB;QAACF,GAAG,EAAE,EAAE;QAAEE,GAAG,EAAE;MAAE,CAAC,EAElB;QAACF,GAAG,EAAE,EAAE;QAAEE,GAAG,EAAE;MAAC,CAAC,EACjB;QAACF,GAAG,EAAE,EAAE;QAAEE,GAAG,EAAE;MAAC,CAAC,EACjB;QAACF,GAAG,EAAE,EAAE;QAAEE,GAAG,EAAE;MAAC,CAAC,EACjB;QAACF,GAAG,EAAE,EAAE;QAAEE,GAAG,EAAE;MAAC,CAAC,EACjB;QAACF,GAAG,EAAE,EAAE;QAAEE,GAAG,EAAE;MAAC,CAAC;MACjB;MACA;MACA;QAACF,GAAG,EAAE,EAAE;QAAEE,GAAG,EAAE;MAAC,CAAC,EACjB;QAACF,GAAG,EAAE,EAAE;QAAEE,GAAG,EAAE;MAAC,CAAC,EACjB;QAACF,GAAG,EAAE,EAAE;QAAEE,GAAG,EAAE;MAAC,CAAC;MACjB;MACA;QAACF,GAAG,EAAE,EAAE;QAAEE,GAAG,EAAE;MAAE,CAAC,EAClB;QAACF,GAAG,EAAE,EAAE;QAAEE,GAAG,EAAE;MAAE,CAAC,EAClB;QAACF,GAAG,EAAE,EAAE;QAAEE,GAAG,EAAE;MAAE,CAAC,EAClB;QAACF,GAAG,EAAE,EAAE;QAAEE,GAAG,EAAE;MAAE,CAAC,EAClB;QAACF,GAAG,EAAE,EAAE;QAAEE,GAAG,EAAE;MAAE,CAAC,EAClB;QAACF,GAAG,EAAE,EAAE;QAAEE,GAAG,EAAE;MAAE,CAAC,EAClB;QAACF,GAAG,EAAE,EAAE;QAAEE,GAAG,EAAE;MAAE,CAAC,EAClB;QAACF,GAAG,EAAE,EAAE;QAAEE,GAAG,EAAE;MAAE,CAAC,EAClB;QAACF,GAAG,EAAE,EAAE;QAAEE,GAAG,EAAE;MAAE,CAAC,EAClB;QAACF,GAAG,EAAE,EAAE;QAAEE,GAAG,EAAE;MAAE,CAAC,EAClB;QAACF,GAAG,EAAE,EAAE;QAAEE,GAAG,EAAE;MAAE,CAAC,EAClB;QAACF,GAAG,EAAE,EAAE;QAAEE,GAAG,EAAE;MAAE,CAAC,EAClB;QAACF,GAAG,EAAE,EAAE;QAAEE,GAAG,EAAE;MAAE,CAAC,EAClB;QAACF,GAAG,EAAE,EAAE;QAAEE,GAAG,EAAE;MAAE,CAAC,EAClB;QAACF,GAAG,EAAE,EAAE;QAAEE,GAAG,EAAE;MAAE,CAAC,EAClB;QAACF,GAAG,EAAE,EAAE;QAAEE,GAAG,EAAE;MAAE,CAAC;MAClB;MACA;QAACF,GAAG,EAAE,EAAE;QAAEE,GAAG,EAAE;MAAE,CAAC,EAClB;QAACF,GAAG,EAAE,EAAE;QAAEE,GAAG,EAAE;MAAE,CAAC,EAClB;QAACF,GAAG,EAAE,EAAE;QAAEE,GAAG,EAAE;MAAE,CAAC,EAClB;QAACF,GAAG,EAAE,EAAE;QAAEE,GAAG,EAAE;MAAE,CAAC,EAClB;QAACF,GAAG,EAAE,EAAE;QAAEE,GAAG,EAAE;MAAE,CAAC,EAClB;QAACF,GAAG,EAAE,EAAE;QAAEE,GAAG,EAAE;MAAE,CAAC,EAClB;QAACF,GAAG,EAAE,EAAE;QAAEE,GAAG,EAAE;MAAE,CAAC,EAClB;QAACF,GAAG,EAAE,EAAE;QAAEE,GAAG,EAAE;MAAE,CAAC,EAClB;QAACF,GAAG,EAAE,EAAE;QAAEE,GAAG,EAAE;MAAE,CAAC,EAClB;QAACF,GAAG,EAAE,EAAE;QAAEE,GAAG,EAAE;MAAE,CAAC,EAClB;QAACF,GAAG,EAAE,EAAE;QAAEE,GAAG,EAAE;MAAE,CAAC,EAClB;QAACF,GAAG,EAAE,EAAE;QAAEE,GAAG,EAAE;MAAE,CAAC,EAClB;QAACF,GAAG,EAAE,EAAE;QAAEE,GAAG,EAAE;MAAE,CAAC,EAClB;QAACF,GAAG,EAAE,EAAE;QAAEE,GAAG,EAAE;MAAE,CAAC,EAClB;QAACF,GAAG,EAAE,EAAE;QAAEE,GAAG,EAAE;MAAE,CAAC,EAClB;QAACF,GAAG,EAAE,EAAE;QAAEE,GAAG,EAAE;MAAE,CAAC,EAClB;QAACF,GAAG,EAAE,EAAE;QAAEE,GAAG,EAAE;MAAE,CAAC,EAClB;QAACF,GAAG,EAAE,EAAE;QAAEE,GAAG,EAAE;MAAE,CAAC,EAClB;QAACF,GAAG,EAAE,EAAE;QAAEE,GAAG,EAAE;MAAE,CAAC,EAClB;QAACF,GAAG,EAAE,EAAE;QAAEE,GAAG,EAAE;MAAE,CAAC,EAClB;QAACF,GAAG,EAAE,EAAE;QAAEE,GAAG,EAAE;MAAE,CAAC,EAClB;QAACF,GAAG,EAAE,EAAE;QAAEE,GAAG,EAAE;MAAE,CAAC,EAClB;QAACF,GAAG,EAAE,EAAE;QAAEE,GAAG,EAAE;MAAE,CAAC,EAClB;QAACF,GAAG,EAAE,EAAE;QAAEE,GAAG,EAAE;MAAE,CAAC,EAClB;QAACF,GAAG,EAAE,EAAE;QAAEE,GAAG,EAAE;MAAE,CAAC,EAClB;QAACF,GAAG,EAAE,EAAE;QAAEE,GAAG,EAAE;MAAE,CAAC,EAClB;QAACF,GAAG,EAAE,EAAE;QAAEE,GAAG,EAAE;MAAE,CAAC,EAElB;QAACF,GAAG,EAAE,EAAE;QAAEE,GAAG,EAAE;MAAC,CAAC,EACjB;QAACF,GAAG,EAAE,EAAE;QAAEE,GAAG,EAAE;MAAC,CAAC,EACjB;QAACF,GAAG,EAAE,EAAE;QAAEE,GAAG,EAAE;MAAC,CAAC,EACjB;QAACF,GAAG,EAAE,EAAE;QAAEE,GAAG,EAAE;MAAC,CAAC,EACjB;QAACF,GAAG,EAAE,EAAE;QAAEE,GAAG,EAAE;MAAC,CAAC,EACjB;QAACF,GAAG,EAAE,EAAE;QAAEE,GAAG,EAAE;MAAE,CAAC,EAClB;QAACF,GAAG,EAAE,EAAE;QAAEE,GAAG,EAAE;MAAE,CAAC,EAClB;QAACF,GAAG,EAAE,EAAE;QAAEE,GAAG,EAAE;MAAE,CAAC,EAClB;QAACF,GAAG,EAAE,EAAE;QAAEE,GAAG,EAAE;MAAE,CAAC,EAClB;QAACF,GAAG,EAAE,EAAE;QAAEE,GAAG,EAAE;MAAE,CAAC,EAClB;QAACF,GAAG,EAAE,EAAE;QAAEE,GAAG,EAAE;MAAE,CAAC,EAClB;QAACF,GAAG,EAAE,EAAE;QAAEE,GAAG,EAAE;MAAE,CAAC,EAClB;QAACF,GAAG,EAAE,EAAE;QAAEE,GAAG,EAAE;MAAE,CAAC,EAGlB;QAACF,GAAG,EAAE,EAAE;QAAEE,GAAG,EAAE;MAAC,CAAC,EACjB;QAACF,GAAG,EAAE,EAAE;QAAEE,GAAG,EAAE;MAAC,CAAC,EACjB;QAACF,GAAG,EAAE,EAAE;QAAEE,GAAG,EAAE;MAAC,CAAC,EACjB;QAACF,GAAG,EAAE,EAAE;QAAEE,GAAG,EAAE;MAAC,CAAC,EACjB;QAACF,GAAG,EAAE,EAAE;QAAEE,GAAG,EAAE;MAAC,CAAC,EACjB;QAACF,GAAG,EAAE,EAAE;QAAEE,GAAG,EAAE;MAAC,CAAC,EACjB;QAACF,GAAG,EAAE,EAAE;QAAEE,GAAG,EAAE;MAAC,CAAC,EACjB;QAACF,GAAG,EAAE,EAAE;QAAEE,GAAG,EAAE;MAAE,CAAC,EAClB;QAACF,GAAG,EAAE,EAAE;QAAEE,GAAG,EAAE;MAAE,CAAC,EAClB;QAACF,GAAG,EAAE,EAAE;QAAEE,GAAG,EAAE;MAAE,CAAC,EAClB;QAACF,GAAG,EAAE,EAAE;QAAEE,GAAG,EAAE;MAAE,CAAC,EAClB;QAACF,GAAG,EAAE,EAAE;QAAEE,GAAG,EAAE;MAAE,CAAC,EAClB;QAACF,GAAG,EAAE,EAAE;QAAEE,GAAG,EAAE;MAAE,CAAC,EAClB;QAACF,GAAG,EAAE,EAAE;QAAEE,GAAG,EAAE;MAAE,CAAC,EAClB;QAACF,GAAG,EAAE,EAAE;QAAEE,GAAG,EAAE;MAAE,CAAC,EAClB;QAACF,GAAG,EAAE,EAAE;QAAEE,GAAG,EAAE;MAAE,CAAC,EAClB;QAACF,GAAG,EAAE,EAAE;QAAEE,GAAG,EAAE;MAAE,CAAC,EAClB;QAACF,GAAG,EAAE,EAAE;QAAEE,GAAG,EAAE;MAAE,CAAC,EAClB;QAACF,GAAG,EAAE,EAAE;QAAEE,GAAG,EAAE;MAAE,CAAC,EAClB;QAACF,GAAG,EAAE,EAAE;QAAEE,GAAG,EAAE;MAAE,CAAC,EAClB;QAACF,GAAG,EAAE,EAAE;QAAEE,GAAG,EAAE;MAAE,CAAC,EAClB;QAACF,GAAG,EAAE,EAAE;QAAEE,GAAG,EAAE;MAAE,CAAC,EAClB;QAACF,GAAG,EAAE,EAAE;QAAEE,GAAG,EAAE;MAAE,CAAC;MAClB;MACA;QAACF,GAAG,EAAE,EAAE;QAAEE,GAAG,EAAE;MAAE,CAAC,EAClB;QAACF,GAAG,EAAE,EAAE;QAAEE,GAAG,EAAE;MAAE,CAAC,EAClB;QAACF,GAAG,EAAE,EAAE;QAAEE,GAAG,EAAE;MAAE,CAAC,EAClB;QAACF,GAAG,EAAE,EAAE;QAAEE,GAAG,EAAE;MAAE,CAAC,EAClB;QAACF,GAAG,EAAE,EAAE;QAAEE,GAAG,EAAE;MAAE,CAAC,EAClB;QAACF,GAAG,EAAE,EAAE;QAAEE,GAAG,EAAE;MAAE,CAAC,EAClB;QAACF,GAAG,EAAE,EAAE;QAAEE,GAAG,EAAE;MAAE,CAAC,EAClB;QAACF,GAAG,EAAE,EAAE;QAAEE,GAAG,EAAE;MAAE,CAAC,EAClB;QAACF,GAAG,EAAE,EAAE;QAAEE,GAAG,EAAE;MAAE,CAAC,EAClB;QAACF,GAAG,EAAE,EAAE;QAAEE,GAAG,EAAE;MAAE,CAAC,EAClB;QAACF,GAAG,EAAE,EAAE;QAAEE,GAAG,EAAE;MAAE,CAAC,EAClB;QAACF,GAAG,EAAE,EAAE;QAAEE,GAAG,EAAE;MAAE,CAAC,EAClB;QAACF,GAAG,EAAE,EAAE;QAAEE,GAAG,EAAE;MAAE,CAAC,EAClB;QAACF,GAAG,EAAE,EAAE;QAAEE,GAAG,EAAE;MAAE,CAAC,EAClB;QAACF,GAAG,EAAE,EAAE;QAAEE,GAAG,EAAE;MAAE,CAAC,EAClB;QAACF,GAAG,EAAE,EAAE;QAAEE,GAAG,EAAE;MAAE,CAAC,EAClB;QAACF,GAAG,EAAE,EAAE;QAAEE,GAAG,EAAE;MAAE,CAAC,EAClB;QAACF,GAAG,EAAE,EAAE;QAAEE,GAAG,EAAE;MAAE,CAAC,EAClB;QAACF,GAAG,EAAE,EAAE;QAAEE,GAAG,EAAE;MAAE,CAAC,EAClB;QAACF,GAAG,EAAE,EAAE;QAAEE,GAAG,EAAE;MAAE,CAAC,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AAE,CAAC,EAClB;QAACF,GAAG,EAAE,EAAE;QAAEE,GAAG,EAAE;MAAE,CAAC,EAClB;QAACF,GAAG,EAAE,EAAE;QAAEE,GAAG,EAAE;MAAE,CAAC,EAClB;QAACF,GAAG,EAAE,EAAE;QAAEE,GAAG,EAAE;MAAE,CAAC,EAClB;QAACF,GAAG,EAAE,EAAE;QAAEE,GAAG,EAAE;MAAE,CAAC,EAClB;QAACF,GAAG,EAAE,EAAE;QAAEE,GAAG,EAAE;MAAE,CAAC,EAClB;QAACF,GAAG,EAAE,EAAE;QAAEE,GAAG,EAAE;MAAE,CAAC,EAClB;QAACF,GAAG,EAAE,EAAE;QAAEE,GAAG,EAAE;MAAE,CAAC,EAClB;QAACF,GAAG,EAAE,EAAE;QAAEE,GAAG,EAAE;MAAE,CAAC,EAClB;QAACF,GAAG,EAAE,EAAE;QAAEE,GAAG,EAAE;MAAE,CAAC,EAClB;QAACF,GAAG,EAAE,EAAE;QAAEE,GAAG,EAAE;MAAE,CAAC,EAClB;QAACF,GAAG,EAAE,EAAE;QAAEE,GAAG,EAAE;MAAE,CAAC,EAClB;QAACF,GAAG,EAAE,EAAE;QAAEE,GAAG,EAAE;MAAE,CAAC,EAClB;QAACF,GAAG,EAAE,EAAE;QAAEE,GAAG,EAAE;MAAE,CAAC,EAClB;QAACF,GAAG,EAAE,EAAE;QAAEE,GAAG,EAAE;MAAE,CAAC,EAClB;QAACF,GAAG,EAAE,EAAE;QAAEE,GAAG,EAAE;MAAE,CAAC,EAClB;QAACF,GAAG,EAAE,EAAE;QAAEE,GAAG,EAAE;MAAE,CAAC,EAClB;QAACF,GAAG,EAAE,EAAE;QAAEE,GAAG,EAAE;MAAE,CAAC,EAClB;QAACF,GAAG,EAAE,EAAE;QAAEE,GAAG,EAAE;MAAE,CAAC,EAClB;QAACF,GAAG,EAAE,EAAE;QAAEE,GAAG,EAAE;MAAE,CAAC,EAClB;QAACF,GAAG,EAAE,EAAE;QAAEE,GAAG,EAAE;MAAE,CAAC,EAClB;QAACF,GAAG,EAAE,EAAE;QAAEE,GAAG,EAAE;MAAE,CAAC,EAClB;QAACF,GAAG,EAAE,EAAE;QAAEE,GAAG,EAAE;MAAE,CAAC,EAClB;QAACF,GAAG,EAAE,EAAE;QAAEE,GAAG,EAAE;MAAE,CAAC,EAClB;QAACF,GAAG,EAAE,EAAE;QAAEE,GAAG,EAAE;MAAE,CAAC,EAClB;QAACF,GAAG,EAAE,EAAE;QAAEE,GAAG,EAAE;MAAE,CAAC,EAClB;QAACF,GAAG,EAAE,EAAE;QAAEE,GAAG,EAAE;MAAE,CAAC,EAClB;QAACF,GAAG,EAAE,EAAE;QAAEE,GAAG,EAAE;MAAE,CAAC,EAClB;QAACF,GAAG,EAAE,EAAE;QAAEE,GAAG,EAAE;MAAE,CAAC,EAClB;QAACF,GAAG,EAAE,EAAE;QAAEE,GAAG,EAAE;MAAE,CAAC,EAClB;QAACF,GAAG,EAAE,EAAE;QAAEE,GAAG,EAAE;MAAE,CAAC,EAClB;QAACF,GAAG,EAAE,EAAE;QAAEE,GAAG,EAAE;MAAE,CAAC,EAClB;QAACF,GAAG,EAAE,EAAE;QAAEE,GAAG,EAAE;MAAE,CAAC,EAClB;QAACF,GAAG,EAAE,EAAE;QAAEE,GAAG,EAAE;MAAE,CAAC,EAClB;QAACF,GAAG,EAAE,EAAE;QAAEE,GAAG,EAAE;MAAE,CAAC,EAClB;QAACF,GAAG,EAAE,EAAE;QAAEE,GAAG,EAAE;MAAE,CAAC,EAClB;QAACF,GAAG,EAAE,EAAE;QAAEE,GAAG,EAAE;MAAE,CAAC,EAClB;QAACF,GAAG,EAAE,EAAE;QAAEE,GAAG,EAAE;MAAE,CAAC,EAClB;QAACF,GAAG,EAAE,EAAE;QAAEE,GAAG,EAAE;MAAE,CAAC,EAClB;QAACF,GAAG,EAAE,EAAE;QAAEE,GAAG,EAAE;MAAE,CAAC,EAClB;QAACF,GAAG,EAAE,EAAE;QAAEE,GAAG,EAAE;MAAE,CAAC,EAClB;QAACF,GAAG,EAAE,EAAE;QAAEE,GAAG,EAAE;MAAE,CAAC,EAClB;QAACF,GAAG,EAAE,EAAE;QAAEE,GAAG,EAAE;MAAE,CAAC,EAClB;QAACF,GAAG,EAAE,EAAE;QAAEE,GAAG,EAAE;MAAE,CAAC,EAClB;QAACF,GAAG,EAAE,EAAE;QAAEE,GAAG,EAAE;MAAE,CAAC,EAClB;QAACF,GAAG,EAAE,EAAE;QAAEE,GAAG,EAAE;MAAE,CAAC,EAClB;QAACF,GAAG,EAAE,EAAE;QAAEE,GAAG,EAAE;MAAE,CAAC,EAClB;QAACF,GAAG,EAAE,EAAE;QAAEE,GAAG,EAAE;MAAE,CAAC,EAClB;QAACF,GAAG,EAAE,EAAE;QAAEE,GAAG,EAAE;MAAE,CAAC,EAClB;QAACF,GAAG,EAAE,EAAE;QAAEE,GAAG,EAAE;MAAE,CAAC,EAClB;QAACF,GAAG,EAAE,EAAE;QAAEE,GAAG,EAAE;MAAE,CAAC,EAClB;QAACF,GAAG,EAAE,EAAE;QAAEE,GAAG,EAAE;MAAE,CAAC,EAGlB;QAACF,GAAG,EAAE,EAAE;QAAEE,GAAG,EAAE;MAAC,CAAC,EACjB;QAACF,GAAG,EAAE,EAAE;QAAEE,GAAG,EAAE;MAAC,CAAC,EACjB;QAACF,GAAG,EAAE,EAAE;QAAEE,GAAG,EAAE;MAAC,CAAC,EACjB;QAACF,GAAG,EAAE,EAAE;QAAEE,GAAG,EAAE;MAAC,CAAC,EACjB;QAACF,GAAG,EAAE,EAAE;QAAEE,GAAG,EAAE;MAAC,CAAC,EACjB;QAACF,GAAG,EAAE,EAAE;QAAEE,GAAG,EAAE;MAAC,CAAC,EACjB;QAACF,GAAG,EAAE,EAAE;QAAEE,GAAG,EAAE;MAAC,CAAC,EACjB;QAACF,GAAG,EAAE,EAAE;QAAEE,GAAG,EAAE;MAAC,CAAC,EACjB;QAACF,GAAG,EAAE,EAAE;QAAEE,GAAG,EAAE;MAAC,CAAC,EACjB;QAACF,GAAG,EAAE,EAAE;QAAEE,GAAG,EAAE;MAAC,CAAC,EACjB;QAACF,GAAG,EAAE,EAAE;QAAEE,GAAG,EAAE;MAAE,CAAC,EAClB;QAACF,GAAG,EAAE,EAAE;QAAEE,GAAG,EAAE;MAAE,CAAC,EAClB;QAACF,GAAG,EAAE,EAAE;QAAEE,GAAG,EAAE;MAAE,CAAC,EAClB;QAACF,GAAG,EAAE,EAAE;QAAEE,GAAG,EAAE;MAAE,CAAC,EAClB;QAACF,GAAG,EAAE,EAAE;QAAEE,GAAG,EAAE;MAAE,CAAC,EAClB;QAACF,GAAG,EAAE,EAAE;QAAEE,GAAG,EAAE;MAAE,CAAC,EAClB;QAACF,GAAG,EAAE,EAAE;QAAEE,GAAG,EAAE;MAAE,CAAC,EAClB;QAACF,GAAG,EAAE,EAAE;QAAEE,GAAG,EAAE;MAAE,CAAC,EAClB;QAACF,GAAG,EAAE,EAAE;QAAEE,GAAG,EAAE;MAAE,CAAC,EAClB;QAACF,GAAG,EAAE,EAAE;QAAEE,GAAG,EAAE;MAAE,CAAC,EAClB;QAACF,GAAG,EAAE,EAAE;QAAEE,GAAG,EAAE;MAAE,CAAC,EAClB;QAACF,GAAG,EAAE,EAAE;QAAEE,GAAG,EAAE;MAAE,CAAC,EAClB;QAACF,GAAG,EAAE,EAAE;QAAEE,GAAG,EAAE;MAAE,CAAC,EAClB;QAACF,GAAG,EAAE,EAAE;QAAEE,GAAG,EAAE;MAAE,CAAC,EAClB;QAACF,GAAG,EAAE,EAAE;QAAEE,GAAG,EAAE;MAAE,CAAC,EAClB;QAACF,GAAG,EAAE,EAAE;QAAEE,GAAG,EAAE;MAAE,CAAC,EAClB;QAACF,GAAG,EAAE,EAAE;QAAEE,GAAG,EAAE;MAAE,CAAC,EAClB;QAACF,GAAG,EAAE,EAAE;QAAEE,GAAG,EAAE;MAAE,CAAC,EAClB;QAACF,GAAG,EAAE,EAAE;QAAEE,GAAG,EAAE;MAAE,CAAC,EAClB;QAACF,GAAG,EAAE,EAAE;QAAEE,GAAG,EAAE;MAAE,CAAC,EAClB;QAACF,GAAG,EAAE,EAAE;QAAEE,GAAG,EAAE;MAAE,CAAC,EAClB;QAACF,GAAG,EAAE,EAAE;QAAEE,GAAG,EAAE;MAAE,CAAC,EAClB;QAACF,GAAG,EAAE,EAAE;QAAEE,GAAG,EAAE;MAAE,CAAC,EAClB;QAACF,GAAG,EAAE,EAAE;QAAEE,GAAG,EAAE;MAAE,CAAC,EAClB;QAACF,GAAG,EAAE,EAAE;QAAEE,GAAG,EAAE;MAAE,CAAC,EAClB;QAACF,GAAG,EAAE,EAAE;QAAEE,GAAG,EAAE;MAAE,CAAC,EAClB;QAACF,GAAG,EAAE,EAAE;QAAEE,GAAG,EAAE;MAAE,CAAC,EAClB;QAACF,GAAG,EAAE,EAAE;QAAEE,GAAG,EAAE;MAAE,CAAC,EAClB;QAACF,GAAG,EAAE,EAAE;QAAEE,GAAG,EAAE;MAAE,CAAC,EAClB;QAACF,GAAG,EAAE,EAAE;QAAEE,GAAG,EAAE;MAAE,CAAC,EAClB;QAACF,GAAG,EAAE,EAAE;QAAEE,GAAG,EAAE;MAAE,CAAC,EAClB;QAACF,GAAG,EAAE,EAAE;QAAEE,GAAG,EAAE;MAAE,CAAC,EAClB;QAACF,GAAG,EAAE,EAAE;QAAEE,GAAG,EAAE;MAAE,CAAC,EAClB;QAACF,GAAG,EAAE,EAAE;QAAEE,GAAG,EAAE;MAAE,CAAC,EAClB;QAACF,GAAG,EAAE,EAAE;QAAEE,GAAG,EAAE;MAAE,CAAC,EAClB;QAACF,GAAG,EAAE,EAAE;QAAEE,GAAG,EAAE;MAAE,CAAC,EAClB;QAACF,GAAG,EAAE,EAAE;QAAEE,GAAG,EAAE;MAAE,CAAC,EAClB;QAACF,GAAG,EAAE,EAAE;QAAEE,GAAG,EAAE;MAAE,CAAC,EAClB;QAACF,GAAG,EAAE,EAAE;QAAEE,GAAG,EAAE;MAAE,CAAC,EAClB;QAACF,GAAG,EAAE,EAAE;QAAEE,GAAG,EAAE;MAAE,CAAC,EAClB;QAACF,GAAG,EAAE,EAAE;QAAEE,GAAG,EAAE;MAAE,CAAC,EAClB;QAACF,GAAG,EAAE,EAAE;QAAEE,GAAG,EAAE;MAAE,CAAC,EAClB;QAACF,GAAG,EAAE,EAAE;QAAEE,GAAG,EAAE;MAAE,CAAC,EAClB;QAACF,GAAG,EAAE,EAAE;QAAEE,GAAG,EAAE;MAAE,CAAC,EAClB;QAACF,GAAG,EAAE,EAAE;QAAEE,GAAG,EAAE;MAAE,CAAC,EAClB;QAACF,GAAG,EAAE,EAAE;QAAEE,GAAG,EAAE;MAAE,CAAC,EAClB;QAACF,GAAG,EAAE,EAAE;QAAEE,GAAG,EAAE;MAAE,CAAC,EAClB;QAACF,GAAG,EAAE,EAAE;QAAEE,GAAG,EAAE;MAAE,CAAC,EAClB;QAACF,GAAG,EAAE,EAAE;QAAEE,GAAG,EAAE;MAAE,CAAC,EAClB;QAACF,GAAG,EAAE,EAAE;QAAEE,GAAG,EAAE;MAAE,CAAC,EAClB;QAACF,GAAG,EAAE,EAAE;QAAEE,GAAG,EAAE;MAAE,CAAC,EAClB;QAACF,GAAG,EAAE,EAAE;QAAEE,GAAG,EAAE;MAAE,CAAC,CA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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}